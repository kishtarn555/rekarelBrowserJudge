{"version":3,"file":"index.js","sources":["../dist/directoty.js","../node_modules/@rekarel/core/dist/index.js","../dist/evaluation.js","../dist/index.js"],"sourcesContent":["// Declare a variable to store the directory handle globally\nlet selectedDirectoryHandle = null;\n// Function to handle directory selection\nasync function handleDirectorySelection() {\n    try {\n        // Trigger the directory picker and store the directory handle\n        selectedDirectoryHandle = await window.showDirectoryPicker();\n        // Update the span with the directory name or path\n        const pathSpan = document.getElementById('path');\n        pathSpan.textContent = selectedDirectoryHandle.name;\n    }\n    catch (error) {\n        console.error('Error selecting directory:', error);\n    }\n}\nexport { selectedDirectoryHandle, handleDirectorySelection };\n//# sourceMappingURL=directoty.js.map","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar kareljava = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[4,16],$V2=[1,19],$V3=[1,20],$V4=[1,21],$V5=[5,28,29,30],$V6=[1,29],$V7=[8,9,18,27,53,54,55,56,57],$V8=[1,39],$V9=[6,11,18,19,32,33,34,35,36,37,38,44,47,50,51],$Va=[9,27],$Vb=[1,71],$Vc=[1,58],$Vd=[1,59],$Ve=[1,60],$Vf=[1,61],$Vg=[1,62],$Vh=[1,63],$Vi=[1,64],$Vj=[1,72],$Vk=[1,74],$Vl=[1,75],$Vm=[1,76],$Vn=[6,11,18,19,32,33,34,35,36,37,38,44,47,49,50,51],$Vo=[1,93],$Vp=[1,95],$Vq=[1,96],$Vr=[1,101],$Vs=[1,102],$Vt=[1,103],$Vu=[1,104],$Vv=[1,105],$Vw=[1,106],$Vx=[1,107],$Vy=[1,108],$Vz=[1,109],$VA=[1,110],$VB=[1,111],$VC=[1,112],$VD=[1,113],$VE=[1,114],$VF=[1,115],$VG=[1,116],$VH=[1,117],$VI=[1,118],$VJ=[1,120],$VK=[1,121],$VL=[1,122],$VM=[1,123],$VN=[1,136],$VO=[1,137],$VP=[1,138],$VQ=[1,139],$VR=[1,140],$VS=[1,141],$VT=[9,18,27,53,54,55,56,57],$VU=[9,18,27,53,54],$VV=[9,18,27,53,54,55];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"program\":3,\"CLASS\":4,\"PROG\":5,\"BEGIN\":6,\"def_list\":7,\"(\":8,\")\":9,\"block\":10,\"END\":11,\"EOF\":12,\"import_list\":13,\"expr_list\":14,\"import\":15,\"IMPORT\":16,\"package\":17,\";\":18,\"VAR\":19,\".\":20,\"*\":21,\"def\":22,\"funct_type\":23,\"var\":24,\"paramList\":25,\"param\":26,\",\":27,\"DEF\":28,\"INT\":29,\"BOOL\":30,\"expr\":31,\"FORWARD\":32,\"LEFT\":33,\"PICKBUZZER\":34,\"LEAVEBUZZER\":35,\"HALT\":36,\"CONTINUE\":37,\"BREAK\":38,\"return\":39,\"call\":40,\"cond\":41,\"loop\":42,\"repeat\":43,\"RET\":44,\"term\":45,\"int_termList\":46,\"IF\":47,\"bool_term\":48,\"ELSE\":49,\"WHILE\":50,\"REPEAT\":51,\"int_term\":52,\"OR\":53,\"AND\":54,\"==\":55,\"<\":56,\"<=\":57,\"NOT\":58,\"clause\":59,\"IFZ\":60,\"IFINF\":61,\"bool_fun\":62,\"integer\":63,\"IFNFWALL\":64,\"IFFWALL\":65,\"IFNLWALL\":66,\"IFLWALL\":67,\"IFNRWALL\":68,\"IFRWALL\":69,\"IFWBUZZER\":70,\"IFNWBUZZER\":71,\"IFBBUZZER\":72,\"IFNBBUZZER\":73,\"IFW\":74,\"IFN\":75,\"IFE\":76,\"IFS\":77,\"IFNW\":78,\"IFNN\":79,\"IFNE\":80,\"IFNS\":81,\"int_literal\":82,\"INC\":83,\"DEC\":84,\"NUM\":85,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"CLASS\",5:\"PROG\",6:\"BEGIN\",8:\"(\",9:\")\",11:\"END\",12:\"EOF\",16:\"IMPORT\",18:\";\",19:\"VAR\",20:\".\",21:\"*\",27:\",\",28:\"DEF\",29:\"INT\",30:\"BOOL\",32:\"FORWARD\",33:\"LEFT\",34:\"PICKBUZZER\",35:\"LEAVEBUZZER\",36:\"HALT\",37:\"CONTINUE\",38:\"BREAK\",44:\"RET\",47:\"IF\",49:\"ELSE\",50:\"WHILE\",51:\"REPEAT\",53:\"OR\",54:\"AND\",55:\"==\",56:\"<\",57:\"<=\",58:\"NOT\",60:\"IFZ\",61:\"IFINF\",64:\"IFNFWALL\",65:\"IFFWALL\",66:\"IFNLWALL\",67:\"IFLWALL\",68:\"IFNRWALL\",69:\"IFRWALL\",70:\"IFWBUZZER\",71:\"IFNWBUZZER\",72:\"IFBBUZZER\",73:\"IFNBBUZZER\",74:\"IFW\",75:\"IFN\",76:\"IFE\",77:\"IFS\",78:\"IFNW\",79:\"IFNN\",80:\"IFNE\",81:\"IFNS\",83:\"INC\",84:\"DEC\",85:\"NUM\"},\nproductions_: [0,[3,10],[3,9],[3,11],[3,10],[10,3],[13,2],[13,1],[15,3],[17,3],[17,3],[7,2],[7,1],[22,5],[22,6],[25,3],[25,1],[26,1],[23,1],[23,1],[23,1],[14,2],[14,0],[31,4],[31,4],[31,4],[31,4],[31,4],[31,2],[31,2],[31,2],[31,2],[31,1],[31,1],[31,1],[31,1],[31,1],[39,3],[39,1],[39,2],[40,3],[40,4],[46,3],[46,1],[41,5],[41,7],[42,5],[43,5],[45,3],[45,3],[45,3],[45,3],[45,3],[45,2],[45,3],[45,1],[48,1],[52,1],[59,4],[59,4],[59,1],[59,3],[59,1],[59,1],[59,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[63,1],[63,4],[63,4],[63,6],[63,6],[82,1],[24,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        requieresFunctionPrototypes: reqsPrototypes,\r\n        packages: [],\r\n        functions: $$[$0-6],\r\n        program: $$[$0-2].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      } \r\ncase 2:\n  \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes,\r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: [],\r\n        functions: [],\r\n        program: $$[$0-2].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }\r\ncase 3:\n  \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes,\r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: $$[$0-10],\r\n        functions: $$[$0-6],\r\n        program: $$[$0-2].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }\r\ncase 4:\n  \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        packages: $$[$0-9],\r\n        requieresFunctionPrototypes: reqsPrototypes,\r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        functions: [],\r\n        program: $$[$0-2].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }\r\ncase 5: case 30: case 31:\n this.$ = $$[$0-1]; \nbreak;\ncase 6: case 11: case 21:\n this.$ = $$[$0-1].concat($$[$0]); \nbreak;\ncase 7: case 12: case 16: case 32: case 33: case 34: case 35: case 55:\n this.$ = $$[$0]; \nbreak;\ncase 8:\n this.$ = [[$$[$0-1], _$[$0-1]]]; \nbreak;\ncase 9:\n\r\n    this.$= $$[$0-2]+\".\"+$$[$0];\r\n  \nbreak;\ncase 10:\n\r\n    this.$= $$[$0-2]+\".*\";\r\n  \nbreak;\ncase 13:\n \r\n      this._$.first_line = _$[$0-4].first_line;\r\n      this._$.first_column = _$[$0-4].first_column;\r\n      this._$.last_line = _$[$0-2].last_line;\r\n      this._$.last_column = _$[$0-2].last_column;\r\n      this.$ = [{\r\n        name: $$[$0-3], \r\n        code: [\r\n          locToIR(_$[$0-3]),\r\n          ...$$[$0],\r\n          ['RET', '__DEFAULT', {\r\n            first_line: _$[$0].last_line,\r\n            first_column: _$[$0].last_column-1,\r\n            last_line: _$[$0].last_line,\r\n            last_column: _$[$0].last_column\r\n          }],\r\n        ],  \r\n        params: [], \r\n        loc: this._$, \r\n        returnType: $$[$0-4]\r\n      }];\r\n    \nbreak;\ncase 14:\n\r\n      this._$.first_line = _$[$0-5].first_line;\r\n      this._$.first_column = _$[$0-5].first_column;\r\n      this._$.last_line = _$[$0-3].last_line;\r\n      this._$.last_column = _$[$0-3].last_column;\r\n    \tlet result = [\r\n        \r\n          locToIR(_$[$0-4]),\r\n          ...$$[$0],\r\n          ['RET', '__DEFAULT', {\r\n            first_line: _$[$0].last_line,\r\n            first_column: _$[$0].last_column-1,\r\n            last_line: _$[$0].last_line,\r\n            last_column: _$[$0].last_column\r\n          }],\r\n      ];\r\n      [$$[$0-1]];\r\n    \tthis.$ = [{\r\n        name: $$[$0-4], \r\n        code: result, \r\n        params: $$[$0-2],\r\n        loc: this._$, \r\n        returnType: $$[$0-5]\r\n      }];\r\n    \nbreak;\ncase 15:\n this.$=$$[$0-2].concat($$[$0]); \nbreak;\ncase 17:\n \r\n      this.$= [{\r\n        name: $$[$0],\r\n        loc: _$[$0]\r\n      }];\r\n    \nbreak;\ncase 18:\n this.$ = \"VOID\"; \nbreak;\ncase 19:\n this.$ = \"INT\"; \nbreak;\ncase 20:\n this.$ = \"BOOL\"; \nbreak;\ncase 22: case 36:\n this.$ = []; \nbreak;\ncase 23:\n this.$ = [locToIR(_$[$0-3]), ['FORWARD']]; \nbreak;\ncase 24:\n this.$ = [locToIR(_$[$0-3]), ['LEFT']]; \nbreak;\ncase 25:\n this.$ = [locToIR(_$[$0-3]), ['PICKBUZZER']]; \nbreak;\ncase 26:\n this.$ = [locToIR(_$[$0-3]), ['LEAVEBUZZER']]; \nbreak;\ncase 27:\n this.$ = [locToIR(_$[$0-3]), ['HALT']]; \nbreak;\ncase 28:\n this.$ = [locToIR(_$[$0-1]), ['CONTINUE', _$[$0-1]]]; \nbreak;\ncase 29:\n this.$ = [locToIR(_$[$0-1]), ['BREAK', _$[$0-1]]]; \nbreak;\ncase 37:\n this.$ = [\r\n      ['RET', {\r\n        term: { \r\n          operation: \"ATOM\",\r\n          instructions:[[\"LOAD\", 0]],\r\n          dataType:\"VOID\",\r\n          atomType:\"IMPLICIT#0\"\r\n        },\r\n        loc: _$[$0-2]\r\n      }]\r\n    ]; \nbreak;\ncase 38:\n this.$ = [\r\n      ['RET', {\r\n        term: {\r\n          operation: \"ATOM\",\r\n          instructions:[[\"LOAD\", 0]],\r\n          dataType:\"VOID\",\r\n          atomType:\"IMPLICIT#0\"\r\n        },\r\n        loc: _$[$0]\r\n      }]\r\n    ]; \nbreak;\ncase 39:\n this.$ = [\r\n      ['RET', {\r\n        term: $$[$0],\r\n        loc: _$[$0-1]\r\n      }]\r\n    ]; \nbreak;\ncase 40:\n \r\n      \r\n      var loc = {\r\n        first_line: _$[$0-1].first_line,\r\n        first_column: _$[$0-1].first_column,\r\n        last_line: _$[$0].last_line,\r\n        last_column: _$[$0].last_column,\r\n      };\r\n      this.$ = [[\r\n        'CALL', \r\n        {\r\n          target: $$[$0-2],\r\n          params: [],\r\n          nameLoc: _$[$0-2], \r\n          argLoc: loc,\r\n        }\r\n      ]]; \r\n    \nbreak;\ncase 41:\n \r\n      this._$.first_column = _$[$0-3].first_column;\r\n      this._$.first_line = _$[$0-3].first_line;\r\n      this._$.last_column = _$[$0].last_column;\r\n      this._$.last_line = _$[$0].last_line;\r\n      this.$ = [[\r\n        'CALL', \r\n        {\r\n          target: $$[$0-3], \r\n          params: $$[$0-1],\r\n          nameLoc: _$[$0-3], \r\n          argLoc: loc,\r\n        }\r\n      ]];  \r\n    \nbreak;\ncase 42:\n \r\n      this.$ = $$[$0-2].concat([\r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: $$[$0].loc,\r\n          totalLoc: $$[$0].totalLoc,\r\n        } \r\n      ]);\r\n    \nbreak;\ncase 43:\n \r\n      this.$ = [\r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: $$[$0].loc,\r\n          totalLoc: $$[$0].totalLoc,\r\n        } \r\n      ]; \r\n    \nbreak;\ncase 44:\n \r\n      const skipTag = UniqueTag('iskip');\r\n      this.$ = [[\r\n        \"IF\",\r\n        {\r\n          condition: $$[$0-2][0],\r\n          line: locToIR(_$[$0-4]),\r\n          skipTrueTag: skipTag,\r\n          trueCase: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 45:\n \r\n      const toElse = UniqueTag('ielse');\r\n      const skipElse = UniqueTag('iskipelse');\r\n      this.$ = [[\r\n        \"IF\",\r\n        {\r\n          condition: $$[$0-4][0],\r\n          line: locToIR(_$[$0-6]),\r\n          skipTrueTag: toElse,\r\n          skipFalseTag: skipElse,\r\n          trueCase: $$[$0-2],\r\n          falseCase: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 46:\n \r\n      const repeatTag = UniqueTag('lrepeat');\r\n      const endTag = UniqueTag('lend');\r\n      this.$ = [[\r\n        'WHILE',  \r\n        {\r\n          condition:   $$[$0-2][0],\r\n          line:         locToIR(_$[$0-4]),\r\n          repeatTag:    repeatTag,\r\n          endTag:       endTag,\r\n          instructions: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 47:\n \r\n      const repeatEnd = UniqueTag('rend');\r\n      const repeatLoop = UniqueTag('rloop');\r\n      const continueLoop = UniqueTag('rcontinue');\r\n      this.$ = [[\r\n        \"REPEAT\",\r\n        {\r\n          line:       locToIR(_$[$0-4]),\r\n          loopCount:  $$[$0-2][0],\r\n          repeatTag:  repeatLoop,\r\n          continueTag: continueLoop,\r\n          endTag:     repeatEnd,\r\n          instructions: $$[$0]\r\n        }\r\n      ]]; \r\n    \nbreak;\ncase 48:\n \r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"OR\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      }; \r\n    \nbreak;\ncase 49:\n      \r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"AND\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 50:\n \r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"EQ\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$,\r\n        dataType:\"BOOL\"\r\n      };\r\n    \nbreak;\ncase 51:\n\r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"LT\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 52:\n\r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"LTE\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 53:\n \r\n      this._$ = mergeLocs(_$[$0-1], _$[$0]);\r\n      this.$ = {\r\n        term: $$[$0],       \r\n        operation: \"NOT\",\r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 54:\n \r\n      this.$ = { \r\n        term: $$[$0-1],\r\n        operation: \"PARENTHESIS\",\r\n        dataType: $$[$0-1].dataType,\r\n        loc: $$[$0-1].loc,\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 56:\n \r\n      this.$ = [[\r\n        'TERM', \r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'BOOL',\r\n          loc: $$[$0].loc,\r\n          totalLoc: $$[$0].totalLoc\r\n        }    \r\n      ]];\r\n    \nbreak;\ncase 57:\n \r\n      this.$ = [[\r\n        'TERM', \r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: $$[$0].loc,\r\n          totalLoc: $$[$0].totalLoc\r\n        }    \r\n      ]];\r\n    \nbreak;\ncase 58:\n \r\n      this._$ = mergeLocs(_$[$0-3], _$[$0]);\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0-1].concat([['NOT']]),\r\n        dataType: \"BOOL\",\r\n        atomType:\"IS_ZERO\",\r\n        loc: _$[$0-3],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 59:\n \r\n      this._$ = mergeLocs(_$[$0-3], _$[$0]);\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: [\r\n          ['LOAD', 999999999],\r\n          ...$$[$0-1],\r\n          [\"LT\"]\r\n        ],\r\n        dataType: \"BOOL\",\r\n        atomType:\"IS_INFINITE\",\r\n        loc: _$[$0-3],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 60:\n \r\n      this._$ = _$[$0];\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0].code,\r\n        atomType: $$[$0].name,\r\n        dataType: \"BOOL\",\r\n        loc: this._$,\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 61:\n \r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0-2].code,\r\n        atomType: $$[$0-2].name,\r\n        dataType: \"BOOL\",\r\n        loc: _$[$0-2],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 62:\n\r\n      this._$ = _$[$0];\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0].code,\r\n        atomType: $$[$0].data,\r\n        dataType: \"INT\",\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      };\r\n    \nbreak;\ncase 63:\n \r\n      const callIR = $$[$0];\r\n      const callData = callIR[0][1];\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: [...callIR, ['LRET']],\r\n        dataType: \"$\"+callData.target,\r\n        atomType:\"CALL\",\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      };\r\n    \nbreak;\ncase 64:\n \r\n      const ir = [[\r\n        'VAR', \r\n        {\r\n          target:$$[$0], \r\n          loc: _$[$0],\r\n          couldBeFunction: false,\r\n        }\r\n      ]];        \r\n      this._$=_$[$0];\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: ir,\r\n        dataType: \"$\"+$$[$0],\r\n        atomType: `VAR#${$$[$0]}`,\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      }; \r\n    \nbreak;\ncase 65:\n \r\n      this.$ = {\r\n        name: \"IFNFWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['MASK'], ['AND'], ['NOT']]\r\n      }; \r\n    \nbreak;\ncase 66:\n \r\n      this.$ = {\r\n        name: \"IFFWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['MASK'], ['AND']]\r\n      }; \r\n    \nbreak;\ncase 67:\n \r\n      this.$ = {\r\n        name: \"IFNLWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTL'], ['MASK'], ['AND'], ['NOT']]\r\n      }; \r\n    \nbreak;\ncase 68:\n \r\n      this.$ = {\r\n        name: \"IFLWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTL'], ['MASK'], ['AND']]\r\n      };\r\n    \nbreak;\ncase 69:\n \r\n      this.$ = {\r\n        name: \"IFNRWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTR'], ['MASK'], ['AND'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 70:\n \r\n      this.$ = {\r\n        name: \"IFRWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTR'], ['MASK'], ['AND']]\r\n      };\r\n    \nbreak;\ncase 71:\n \r\n      this.$ = {\r\n        name: \"IFWBUZZER\",\r\n        code: [['WORLDBUZZERS'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 72:\n \r\n      this.$ = {\r\n        name: \"IFNWBUZZER\",\r\n        code: [['WORLDBUZZERS'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 73:\n \r\n      this.$ = {\r\n        name: \"IFBBUZZER\",\r\n        code: [['BAGBUZZERS'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 74:\n\r\n      this.$ = {\r\n        name: \"IFNBBUZZER\",\r\n        code: [['BAGBUZZERS'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 75:\n \r\n      this.$ = {\r\n        name: \"IFW\",\r\n        code: [['ORIENTATION'], ['LOAD', 0], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 76:\n\r\n      this.$ = {\r\n        name: \"IFN\",\r\n        code: [['ORIENTATION'], ['LOAD', 1], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 77:\n\r\n      this.$ = {\r\n        name: \"IFE\",\r\n        code: [['ORIENTATION'], ['LOAD', 2], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 78:\n\r\n      this.$ = {\r\n        name: \"IFS\",\r\n        code: [['ORIENTATION'], ['LOAD', 3], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 79:\n\r\n      this.$ = {\r\n        name: \"IFNW\",\r\n        code: [['ORIENTATION'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 80:\n\r\n      this.$ = {\r\n        name: \"IFNN\",\r\n        code: [['ORIENTATION'], ['LOAD', 1], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 81:\n \r\n      this.$ = {\r\n        name: \"IFNE\",\r\n        code: [['ORIENTATION'], ['LOAD', 2], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 82:\n\r\n      this.$ = {\r\n        name: \"IFNS\",\r\n        code: [['ORIENTATION'], ['LOAD', 3], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 83:\n \r\n      this.$ = {\r\n        data: `NUMBER#${$$[$0]}`, \r\n        code: [['LOAD', $$[$0]]]\r\n      };\r\n    \nbreak;\ncase 84:\n \r\n      this.$ = {\r\n        data: \"INC\",\r\n        code: $$[$0-1].concat([['INC', 1]])\r\n      };\r\n    \nbreak;\ncase 85:\n \r\n      this.$ = {\r\n        data: \"DEC\",\r\n        code: $$[$0-1].concat([['DEC', 1]])\r\n      };\r\n    \nbreak;\ncase 86:\n \r\n      this.$ = {\r\n        data: `INC#${$$[$0-1]}`,\r\n        code: $$[$0-3].concat([['INC', $$[$0-1]]])\r\n      }; \r\n    \nbreak;\ncase 87:\n \r\n      this.$ = {\r\n        data: `DEC#${$$[$0-1]}`,\r\n        code: $$[$0-3].concat([['DEC', $$[$0-1]]])\r\n      };\r\n    \nbreak;\ncase 88:\n this.$ = parseInt(yytext); \nbreak;\ncase 89:\n this.$ = yytext; \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],13:3,15:4,16:$V0},{1:[3]},{5:[1,6]},{4:[1,7],15:8,16:$V0},o($V1,[2,7]),{17:9,19:[1,10]},{6:[1,11]},{5:[1,12]},o($V1,[2,6]),{18:[1,13]},{20:[1,14]},{5:[1,16],7:15,22:17,23:18,28:$V2,29:$V3,30:$V4},{6:[1,22]},o($V1,[2,8]),{19:[1,23],21:[1,24]},{5:[1,25],22:26,23:18,28:$V2,29:$V3,30:$V4},{8:[1,27]},o($V5,[2,12]),{19:$V6,24:28},{19:[2,18]},{19:[2,19]},{19:[2,20]},{5:[1,31],7:30,22:17,23:18,28:$V2,29:$V3,30:$V4},{18:[2,9]},{18:[2,10]},{8:[1,32]},o($V5,[2,11]),{9:[1,33]},{8:[1,34]},o($V7,[2,89]),{5:[1,35],22:26,23:18,28:$V2,29:$V3,30:$V4},{8:[1,36]},{9:[1,37]},{6:$V8,10:38},{9:[1,40],19:$V6,24:43,25:41,26:42},{8:[1,44]},{9:[1,45]},{6:$V8,10:46},{11:[1,47]},o($V9,[2,22],{14:48}),{6:$V8,10:49},{9:[1,50]},{9:[2,16],27:[1,51]},o($Va,[2,17]),{9:[1,52]},{6:$V8,10:53},{11:[1,54]},{12:[1,55]},{6:$V8,10:70,11:[1,56],18:$Vb,19:$V6,24:73,31:57,32:$Vc,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,38:$Vi,39:65,40:66,41:67,42:68,43:69,44:$Vj,47:$Vk,50:$Vl,51:$Vm},o($V5,[2,13]),{6:$V8,10:77},{19:$V6,24:43,25:78,26:42},{6:$V8,10:79},{11:[1,80]},{12:[1,81]},{1:[2,2]},o([5,6,11,18,19,28,29,30,32,33,34,35,36,37,38,44,47,49,50,51],[2,5]),o($V9,[2,21]),{8:[1,82]},{8:[1,83]},{8:[1,84]},{8:[1,85]},{8:[1,86]},{18:[1,87]},{18:[1,88]},{18:[1,89]},{18:[1,90]},o($Vn,[2,32]),o($Vn,[2,33]),o($Vn,[2,34]),o($Vn,[2,35]),o($Vn,[2,36]),{8:[1,91],18:[2,38],19:$V6,24:100,40:99,45:92,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VM},{8:[1,124]},{8:[1,125]},{8:[1,126]},o($V5,[2,14]),{9:[2,15]},{11:[1,127]},{12:[1,128]},{1:[2,1]},{9:[1,129]},{9:[1,130]},{9:[1,131]},{9:[1,132]},{9:[1,133]},o($Vn,[2,28]),o($Vn,[2,29]),o($Vn,[2,30]),o($Vn,[2,31]),{8:$VN,9:[1,134],19:$V6,24:100,40:99,45:135,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{18:[2,39],53:$VO,54:$VP,55:$VQ,56:$VR,57:$VS},{8:$VN,19:$V6,24:100,40:99,45:142,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},o($VT,[2,55]),{8:[1,143]},{8:[1,144]},o($VT,[2,60],{8:[1,145]}),o($VT,[2,62]),o($VT,[2,63]),o($VT,[2,64],{8:$VM}),o($V7,[2,65]),o($V7,[2,66]),o($V7,[2,67]),o($V7,[2,68]),o($V7,[2,69]),o($V7,[2,70]),o($V7,[2,71]),o($V7,[2,72]),o($V7,[2,73]),o($V7,[2,74]),o($V7,[2,75]),o($V7,[2,76]),o($V7,[2,77]),o($V7,[2,78]),o($V7,[2,79]),o($V7,[2,80]),o($V7,[2,81]),o($V7,[2,82]),o($VT,[2,83]),{8:[1,146]},{8:[1,147]},o($VT,[2,88]),{8:$VN,9:[1,148],19:$V6,24:100,40:99,45:150,46:149,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VN,19:$V6,24:100,40:99,45:152,48:151,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VN,19:$V6,24:100,40:99,45:152,48:153,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VN,19:$V6,24:100,40:99,45:155,52:154,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{12:[1,156]},{1:[2,4]},{18:[1,157]},{18:[1,158]},{18:[1,159]},{18:[1,160]},{18:[1,161]},{18:[2,37]},{9:[1,162],53:$VO,54:$VP,55:$VQ,56:$VR,57:$VS},{8:$VN,19:$V6,24:100,40:99,45:135,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VN,19:$V6,24:100,40:99,45:163,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VN,19:$V6,24:100,40:99,45:164,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VN,19:$V6,24:100,40:99,45:165,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VN,19:$V6,24:100,40:99,45:166,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VN,19:$V6,24:100,40:99,45:167,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},o($VT,[2,53]),{8:$VN,19:$V6,24:100,40:99,45:155,52:168,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VN,19:$V6,24:100,40:99,45:155,52:169,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{9:[1,170]},{8:$VN,19:$V6,24:100,40:99,45:155,52:171,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{8:$VN,19:$V6,24:100,40:99,45:155,52:172,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},o($VT,[2,40]),{9:[1,173],27:[1,174]},o($Va,[2,43],{53:$VO,54:$VP,55:$VQ,56:$VR,57:$VS}),{9:[1,175]},{9:[2,56],53:$VO,54:$VP,55:$VQ,56:$VR,57:$VS},{9:[1,176]},{9:[1,177]},o($Va,[2,57],{53:$VO,54:$VP,55:$VQ,56:$VR,57:$VS}),{1:[2,3]},o($Vn,[2,23]),o($Vn,[2,24]),o($Vn,[2,25]),o($Vn,[2,26]),o($Vn,[2,27]),o($VT,[2,54]),o([9,18,27,53],[2,48],{54:$VP,55:$VQ,56:$VR,57:$VS}),o($VU,[2,49],{55:$VQ,56:$VR,57:$VS}),o($VU,[2,50],{56:$VR,57:$VS}),o($VV,[2,51]),o($VV,[2,52]),{9:[1,178]},{9:[1,179]},o($VT,[2,61]),{9:[1,180],27:[1,181]},{9:[1,182],27:[1,183]},o($VT,[2,41]),{8:$VN,19:$V6,24:100,40:99,45:184,58:$Vo,59:94,60:$Vp,61:$Vq,62:97,63:98,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:$VI,82:119,83:$VJ,84:$VK,85:$VL},{6:$V8,10:70,18:$Vb,19:$V6,24:73,31:185,32:$Vc,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,38:$Vi,39:65,40:66,41:67,42:68,43:69,44:$Vj,47:$Vk,50:$Vl,51:$Vm},{6:$V8,10:70,18:$Vb,19:$V6,24:73,31:186,32:$Vc,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,38:$Vi,39:65,40:66,41:67,42:68,43:69,44:$Vj,47:$Vk,50:$Vl,51:$Vm},{6:$V8,10:70,18:$Vb,19:$V6,24:73,31:187,32:$Vc,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,38:$Vi,39:65,40:66,41:67,42:68,43:69,44:$Vj,47:$Vk,50:$Vl,51:$Vm},o($VT,[2,58]),o($VT,[2,59]),o($VT,[2,84]),{82:188,85:$VL},o($VT,[2,85]),{82:189,85:$VL},o($Va,[2,42],{53:$VO,54:$VP,55:$VQ,56:$VR,57:$VS}),o($V9,[2,44],{49:[1,190]}),o($Vn,[2,46]),o($Vn,[2,47]),{9:[1,191]},{9:[1,192]},{6:$V8,10:70,18:$Vb,19:$V6,24:73,31:193,32:$Vc,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,38:$Vi,39:65,40:66,41:67,42:68,43:69,44:$Vj,47:$Vk,50:$Vl,51:$Vm},o($VT,[2,86]),o($VT,[2,87]),o($Vn,[2,45])],\ndefaultActions: {19:[2,18],20:[2,19],21:[2,20],23:[2,9],24:[2,10],55:[2,2],78:[2,15],81:[2,1],128:[2,4],134:[2,37],156:[2,3]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    // _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: lexer.yylloc, // Implement fix: https://github.com/zaach/jison/pull/356\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n\r\nconst COMPILER= \"RKJ 1.0.0\";\r\nconst LANG = \"ReKarel Java\";\r\nconst VarsAsFuncs = false;\r\nconst reqsPrototypes = false;\r\n//Tag counter\r\nlet tagCnt = 1;\r\n\r\n\r\nfunction UniqueTag(tag) {\r\n  return `${tag}.${tagCnt++}`;\r\n}\r\nfunction resetCompiler(tag) {\r\n  tagCnt = 1;\r\n}\r\n\r\nfunction mergeLocs(first, second) {\r\n  return {\r\n    first_line: first.first_line,\r\n    first_column: first.first_column,\r\n    last_line: second.last_line,\r\n    last_column: second.last_column,\r\n  }\r\n}\r\n\r\nfunction locToIR(loc) {\r\n  return [\r\n    \"LINE\",\r\n    loc.first_line - 1,\r\n    loc.first_column\r\n  ]\r\n}\r\n\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nswitch($avoiding_name_collisions) {\ncase 0:/* ignore */\nbreak;\ncase 1:/* ignore */\nbreak;\ncase 2:/* ignore */\nbreak;\ncase 3: return 4; \ncase 4: return 5; \ncase 5: return 28; \ncase 6: return 16; \ncase 7: return 28; \ncase 8: return 29; \ncase 9: return 30; \ncase 10: return 44; \ncase 11: return 36; \ncase 12: return 33; \ncase 13: return 32; \ncase 14: return 34; \ncase 15: return 35; \ncase 16: return 37; \ncase 17: return 38; \ncase 18: return 50; \ncase 19: return 51; \ncase 20: return 84; \ncase 21: return 83; \ncase 22: return 60; \ncase 23: return 61; \ncase 24: return 64; \ncase 25: return 65; \ncase 26: return 66; \ncase 27: return 67; \ncase 28: return 68; \ncase 29: return 69; \ncase 30: return 70; \ncase 31: return 71; \ncase 32: return 72; \ncase 33: return 73; \ncase 34: return 75; \ncase 35: return 77; \ncase 36: return 76; \ncase 37: return 74; \ncase 38: return 79; \ncase 39: return 81; \ncase 40: return 80; \ncase 41: return 78; \ncase 42: return 49; \ncase 43: return 47; \ncase 44: return 58; \ncase 45: return 53; \ncase 46: return 54; \ncase 47: return 54; \ncase 48: return 8; \ncase 49: return 9; \ncase 50: return 6; \ncase 51: return 11; \ncase 52: return 18; \ncase 53: return 20; \ncase 54: return 21; \ncase 55: return 27; \ncase 56: return 55; \ncase 57: return 57; \ncase 58: return 56; \ncase 59: return 85; \ncase 60: return 19; \ncase 61: return 12; \n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\/\\/[^\\n]*)/,/^(?:\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)/,/^(?:class\\b)/,/^(?:program\\b)/,/^(?:define\\b)/,/^(?:import\\b)/,/^(?:void\\b)/,/^(?:int\\b)/,/^(?:bool\\b)/,/^(?:return\\b)/,/^(?:turnoff\\b)/,/^(?:turnleft\\b)/,/^(?:move\\b)/,/^(?:pickbeeper\\b)/,/^(?:putbeeper\\b)/,/^(?:continue\\b)/,/^(?:break\\b)/,/^(?:while\\b)/,/^(?:iterate\\b)/,/^(?:pred\\b)/,/^(?:succ\\b)/,/^(?:iszero\\b)/,/^(?:isinfinite\\b)/,/^(?:frontIsClear\\b)/,/^(?:frontIsBlocked\\b)/,/^(?:leftIsClear\\b)/,/^(?:leftIsBlocked\\b)/,/^(?:rightIsClear\\b)/,/^(?:rightIsBlocked\\b)/,/^(?:nextToABeeper\\b)/,/^(?:notNextToABeeper\\b)/,/^(?:anyBeepersInBeeperBag\\b)/,/^(?:noBeepersInBeeperBag\\b)/,/^(?:facingNorth\\b)/,/^(?:facingSouth\\b)/,/^(?:facingEast\\b)/,/^(?:facingWest\\b)/,/^(?:notFacingNorth\\b)/,/^(?:notFacingSouth\\b)/,/^(?:notFacingEast\\b)/,/^(?:notFacingWest\\b)/,/^(?:else\\b)/,/^(?:if\\b)/,/^(?:!)/,/^(?:\\|\\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{)/,/^(?:\\})/,/^(?:;)/,/^(?:\\.)/,/^(?:\\*)/,/^(?:,)/,/^(?:==)/,/^(?:<=)/,/^(?:<)/,/^(?:[0-9]+)/,/^(?:[A-Za-zÀ-ÖØ-öø-ÿ_][A-Za-zÀ-ÖØ-öø-ÿ0-9_-]*)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\nfunction javaParser$1() {\n    return kareljava.parse.apply(kareljava, arguments);\n}\n\n/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar karelpascal = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,16],$V2=[1,17],$V3=[1,18],$V4=[1,13],$V5=[1,14],$V6=[1,15],$V7=[5,13],$V8=[1,21],$V9=[9,15],$Va=[2,28],$Vb=[1,29],$Vc=[1,30],$Vd=[1,31],$Ve=[1,32],$Vf=[1,33],$Vg=[1,34],$Vh=[1,35],$Vi=[1,41],$Vj=[1,42],$Vk=[1,45],$Vl=[1,46],$Vm=[1,47],$Vn=[1,58],$Vo=[9,15,49],$Vp=[9,15,49,57],$Vq=[1,62],$Vr=[1,61],$Vs=[1,64],$Vt=[1,65],$Vu=[1,70],$Vv=[1,71],$Vw=[1,72],$Vx=[1,73],$Vy=[1,74],$Vz=[1,75],$VA=[1,76],$VB=[1,77],$VC=[1,78],$VD=[1,79],$VE=[1,80],$VF=[1,81],$VG=[1,82],$VH=[1,83],$VI=[1,84],$VJ=[1,85],$VK=[1,86],$VL=[1,87],$VM=[1,89],$VN=[1,90],$VO=[1,91],$VP=[1,92],$VQ=[7,29,30,31,32,33,34],$VR=[1,109],$VS=[1,110],$VT=[1,111],$VU=[1,112],$VV=[1,113],$VW=[9,15,23,28,49,56,57,59,62,63,64,65,66,67],$VX=[23,28],$VY=[9,15,23,28,49,56,57,59,62,63,64],$VZ=[9,15,23,28,49,56,57,59,62,63,64,65];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"program\":3,\"import_list\":4,\"BEGINPROG\":5,\"def_list\":6,\"BEGINEXEC\":7,\"expr_list\":8,\"ENDEXEC\":9,\"ENDPROG\":10,\"EOF\":11,\"import\":12,\"IMPORT\":13,\"package\":14,\";\":15,\"var\":16,\".\":17,\"*\":18,\"def\":19,\"prototype_type\":20,\"(\":21,\"paramList\":22,\")\":23,\"funct_type\":24,\"AS\":25,\"expr\":26,\"param\":27,\",\":28,\"DEF_INT\":29,\"DEF_BOOL\":30,\"DEF\":31,\"PROTO_INT\":32,\"PROTO_BOOL\":33,\"PROTO\":34,\"genexpr\":35,\"FORWARD\":36,\"LEFT\":37,\"PICKBUZZER\":38,\"LEAVEBUZZER\":39,\"HALT\":40,\"CONTINUE\":41,\"BREAK\":42,\"return\":43,\"call\":44,\"cond\":45,\"loop\":46,\"repeat\":47,\"BEGIN\":48,\"END\":49,\"RET\":50,\"term\":51,\"parameteredCall\":52,\"int_termList\":53,\"IF\":54,\"bool_term\":55,\"THEN\":56,\"ELSE\":57,\"WHILE\":58,\"DO\":59,\"REPEAT\":60,\"int_term\":61,\"TIMES\":62,\"OR\":63,\"AND\":64,\"==\":65,\"<\":66,\"<=\":67,\"NOT\":68,\"clause\":69,\"IFZ\":70,\"IFINF\":71,\"bool_fun\":72,\"integer\":73,\"IFNFWALL\":74,\"IFFWALL\":75,\"IFNLWALL\":76,\"IFLWALL\":77,\"IFNRWALL\":78,\"IFRWALL\":79,\"IFWBUZZER\":80,\"IFNWBUZZER\":81,\"IFBBUZZER\":82,\"IFNBBUZZER\":83,\"IFW\":84,\"IFN\":85,\"IFE\":86,\"IFS\":87,\"IFNW\":88,\"IFNN\":89,\"IFNE\":90,\"IFNS\":91,\"int_literal\":92,\"INC\":93,\"DEC\":94,\"NUM\":95,\"VAR\":96,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error},\nproductions_: [0,[3,8],[3,7],[3,7],[3,6],[4,2],[4,1],[12,3],[14,3],[14,3],[6,3],[6,2],[19,2],[19,5],[19,4],[19,7],[22,3],[22,1],[27,1],[24,1],[24,1],[24,1],[20,1],[20,1],[20,1],[8,3],[8,1],[35,1],[35,0],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,3],[43,1],[43,2],[44,1],[44,1],[52,4],[53,3],[53,1],[45,4],[45,6],[46,4],[47,4],[51,3],[51,3],[51,3],[51,3],[51,3],[51,2],[51,3],[51,1],[55,1],[61,1],[69,4],[69,4],[69,1],[69,1],[69,1],[69,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[73,1],[73,4],[73,4],[73,6],[73,6],[92,1],[16,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes, \r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: $$[$0-7],\r\n        functions: $$[$0-5],\r\n        program: $$[$0-3].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }; \r\ncase 2:\n \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes, \r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: $$[$0-6],\r\n        functions: [],\r\n        program: $$[$0-3].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }; \r\ncase 3:\n \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes,  \r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: [],\r\n        functions: $$[$0-5],\r\n        program: $$[$0-3].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }; \r\ncase 4:\n \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes, \r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: [],\r\n        functions: [],\r\n        program: $$[$0-3].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }; \r\ncase 5:\n this.$ = $$[$0-1].concat($$[$0]); \nbreak;\ncase 6: case 17: case 26: case 27: case 36: case 37: case 38: case 39: case 40: case 45: case 60:\n this.$ = $$[$0]; \nbreak;\ncase 7:\n this.$ = [[$$[$0-1], _$[$0-1]]]; \nbreak;\ncase 8:\n\r\n    this.$= $$[$0-2]+\".\"+$$[$0];\r\n  \nbreak;\ncase 9:\n\r\n    this.$= $$[$0-2]+\".*\";\r\n  \nbreak;\ncase 10:\n this.$ = $$[$0-2].concat($$[$0-1]); \nbreak;\ncase 11: case 41:\n this.$ = $$[$0-1]; \nbreak;\ncase 12:\n \r\n      this._$.first_line = _$[$0-1].first_line;\r\n      this._$.first_column = _$[$0-1].first_column;\r\n      this._$.last_line = _$[$0].last_line;\r\n      this._$.last_column = _$[$0].last_column;\r\n      this.$ = [{\r\n        name: $$[$0], \r\n        code: null, \r\n        params: [],  \r\n        loc: this._$,\r\n        returnType: $$[$0-1]\r\n      }]; \r\n    \nbreak;\ncase 13:\n \r\n      this._$.first_line = _$[$0-4].first_line;\r\n      this._$.first_column = _$[$0-4].first_column;\r\n      this._$.last_line = _$[$0].last_line;\r\n      this._$.last_column = _$[$0].last_column;\r\n      this.$ = [{\r\n        name: $$[$0-3], \r\n        code: null, \r\n        params: $$[$0-1],  \r\n        loc: this._$,\r\n        returnType: $$[$0-4]\r\n      }]; \r\n      \nbreak;\ncase 14:\n \r\n      this._$.first_line = _$[$0-3].first_line;\r\n      this._$.first_column = _$[$0-3].first_column;\r\n      this._$.last_line = _$[$0-2].last_line;\r\n      this._$.last_column = _$[$0-2].last_column;\r\n\r\n      this.$ = [{\r\n        name: $$[$0-2],  \r\n        code: [\r\n          locToIR(_$[$0-2]),\r\n          ...$$[$0],\r\n          ['RET', '__DEFAULT', {\r\n            first_line: _$[$0].last_line,\r\n            first_column: _$[$0].last_column,\r\n            last_line: _$[$0].last_line,\r\n            last_column: _$[$0].last_column,\r\n          }]\r\n        ],\r\n        params: [], \r\n        loc: this._$,\r\n        returnType: $$[$0-3]\r\n      }]; \r\n    \nbreak;\ncase 15:\n\r\n      \r\n      this._$.first_line = _$[$0-6].first_line;\r\n      this._$.first_column = _$[$0-6].first_column;\r\n      this._$.last_line = _$[$0-5].last_line;\r\n      this._$.last_column = _$[$0-5].last_column;\r\n\r\n    \tthis.$ = [{\r\n        name: $$[$0-5],\r\n        code: [\r\n          locToIR(_$[$0-5]),\r\n          ...$$[$0],\r\n          ['RET', '__DEFAULT', {\r\n            first_line: _$[$0].last_line,\r\n            first_column: _$[$0].last_column,\r\n            last_line: _$[$0].last_line,\r\n            last_line: _$[$0].last_column,\r\n          }]\r\n        ],\r\n        params: $$[$0-3],\r\n        loc: this._$,        \r\n        returnType: $$[$0-6]\r\n      }];\r\n    \nbreak;\ncase 16:\n this.$=$$[$0-2].concat($$[$0]); \nbreak;\ncase 18:\n \r\n      this.$= [{\r\n        name: $$[$0],\r\n        loc: _$[$0]\r\n      }];\r\n    \nbreak;\ncase 19: case 22:\n this.$ = \"INT\"; \nbreak;\ncase 20: case 23:\n this.$ = \"BOOL\"; \nbreak;\ncase 21: case 24:\n this.$ = \"VOID\"; \nbreak;\ncase 25:\n this.$ = $$[$0-2].concat($$[$0]); \nbreak;\ncase 28:\n this.$ = []; \nbreak;\ncase 29:\n this.$ = [locToIR(_$[$0]), ['FORWARD']]; \nbreak;\ncase 30:\n this.$ = [locToIR(_$[$0]), ['LEFT']]; \nbreak;\ncase 31:\n this.$ = [locToIR(_$[$0]), ['PICKBUZZER']]; \nbreak;\ncase 32:\n this.$ = [locToIR(_$[$0]), ['LEAVEBUZZER']]; \nbreak;\ncase 33:\n this.$ = [locToIR(_$[$0]), ['HALT']]; \nbreak;\ncase 34:\n this.$ = [locToIR(_$[$0]), ['CONTINUE', _$[$0]]]; \nbreak;\ncase 35:\n this.$ = [locToIR(_$[$0]), ['BREAK', _$[$0]]]; \nbreak;\ncase 42:\n this.$ = [\r\n      ['RET', {\r\n        term: { \r\n          operation: \"ATOM\", \r\n          instructions:[[\"LOAD\", 0]],\r\n          atomType: \"IMPLICIT#0\",\r\n          dataType:\"VOID\"\r\n        },\r\n        loc: _$[$0]\r\n      }]\r\n    ]; \nbreak;\ncase 43:\n this.$ = [\r\n      ['RET', {\r\n        term: $$[$0],\r\n        loc: _$[$0-1]\r\n      }]\r\n    ]; \nbreak;\ncase 44:\n \r\n      this.$ = [\r\n        [\r\n          'CALL', \r\n          {\r\n            target:$$[$0], \r\n            params: [],\r\n            nameLoc: _$[$0], \r\n            argLoc: _$[$0]\r\n          }\r\n        ]\r\n      ];\r\n    \nbreak;\ncase 46:\n \r\n      this.$ = [\r\n        [\r\n          'CALL', \r\n          {\r\n            target: $$[$0-3],\r\n            params: $$[$0-1],\r\n            nameLoc: _$[$0-3], \r\n            argLoc: _$[$0-1],\r\n          }\r\n        ]\r\n      ]; \r\n    \nbreak;\ncase 47:\n \r\n      this.$ = $$[$0-2].concat([\r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: _$[$0],\r\n          totalLoc: _$[$0]\r\n        } \r\n      ]);\r\n    \nbreak;\ncase 48:\n \r\n      this.$ = [\r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: _$[$0],\r\n          totalLoc: _$[$0]\r\n        } \r\n      ]; \r\n    \nbreak;\ncase 49:\n \r\n      const skipTag = UniqueTag('iskip');\r\n      this.$ = [[\r\n        \"IF\",\r\n        {\r\n          condition: $$[$0-2][0],\r\n          line: locToIR(_$[$0-3]),\r\n          skipTrueTag: skipTag,\r\n          trueCase: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 50:\n \r\n      const toElse = UniqueTag('ielse');\r\n      const skipElse = UniqueTag('iskipelse');\r\n      this.$ = [[\r\n        \"IF\",\r\n        {\r\n          condition: $$[$0-4][0],\r\n          line: locToIR(_$[$0-5]),\r\n          skipTrueTag: toElse,\r\n          skipFalseTag: skipElse,\r\n          trueCase: $$[$0-2],\r\n          falseCase: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 51:\n \r\n      const repeatTag = UniqueTag('lrepeat');\r\n      const endTag = UniqueTag('lend');\r\n      this.$ = [[\r\n        'WHILE',  \r\n        {\r\n          condition:   $$[$0-2][0],\r\n          line:         locToIR(_$[$0-3]),\r\n          repeatTag:    repeatTag,\r\n          endTag:       endTag,\r\n          instructions: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 52:\n \r\n      const repeatEnd = UniqueTag('rend');\r\n      const repeatLoop = UniqueTag('rloop');\r\n      const continueLoop = UniqueTag('rcontinue');\r\n      this.$ = [[\r\n        \"REPEAT\",\r\n        {\r\n          line:        locToIR(_$[$0-3]),\r\n          loopCount:   $$[$0-2][0],\r\n          repeatTag:   repeatLoop,\r\n          endTag:      repeatEnd,\r\n          continueTag: continueLoop,\r\n          instructions: $$[$0]\r\n        }\r\n      ]]; \r\n    \nbreak;\ncase 53:\n this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"OR\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$ \r\n      }; \nbreak;\ncase 54:\n \r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"AND\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 55:\n \r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"EQ\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 56:\n \r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"LT\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 57:\n \r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"LTE\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 58:\n \r\n      this.$ = {\r\n        term: $$[$0],       \r\n        operation: \"NOT\",\r\n        dataType:\"BOOL\" ,\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n      \nbreak;\ncase 59:\n \r\n      this.$ = { \r\n        term: $$[$0-1],\r\n        operation: \"PARENTHESIS\",\r\n        dataType: $$[$0-1].dataType,\r\n        loc: $$[$0-1].loc,\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 61:\n \r\n      this.$ = [[\r\n        'TERM', \r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'BOOL',\r\n          loc: _$[$0],\r\n          totalLoc: _$[$0]\r\n        }    \r\n      ]];\r\n    \nbreak;\ncase 62:\n \r\n      this.$ = [[\r\n        'TERM', \r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: _$[$0],\r\n          totalLoc: _$[$0]\r\n        }    \r\n      ]];\r\n    \nbreak;\ncase 63:\n \r\n       this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0-1].concat([['NOT']]),\r\n        dataType: \"BOOL\",\r\n        atomType: \"IS_ZERO\",\r\n        loc: _$[$0-3],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 64:\n        \r\n      this._$.first_line = _$[$0-3].first_line;\r\n      this._$.first_column = _$[$0-3].first_column;\r\n      this._$.last_line = _$[$0].last_line;\r\n      this._$.last_column = _$[$0].last_column;\r\n\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: [\r\n          ['LOAD', 999999999],\r\n          ...$$[$0-1],\r\n          [\"LT\"]\r\n        ],\r\n        dataType: \"BOOL\",\r\n        atomType:\"IS_INFINITE\",\r\n        loc: _$[$0-3],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 65:\n \r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0].code,\r\n        atomType: $$[$0].name,\r\n        dataType: \"BOOL\",\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      }; \r\n    \nbreak;\ncase 66:\n\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0].code,\r\n        atomType: $$[$0].data,\r\n        dataType: \"INT\",\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      }; \r\n      \r\n    \nbreak;\ncase 67:\n \r\n        const ir = [[\r\n          'VAR',\r\n          {\r\n            target: $$[$0], \r\n            loc: _$[$0], \r\n            couldBeFunction: true\r\n          }\r\n        ]]; \r\n        this.$ = {\r\n          operation: \"ATOM\",\r\n          instructions: ir,\r\n          dataType: \"$\"+$$[$0],\r\n          atomType: `VAR#${$$[$0]}`,\r\n          loc: _$[$0],\r\n          totalLoc: _$[$0]\r\n        }; \r\n      \nbreak;\ncase 68:\n \r\n      const callIR = $$[$0];\r\n      const callData = callIR[0][1];\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: [...callIR, ['LRET']],\r\n        dataType: \"$\"+callData.target,\r\n        atomType: \"CALL\",\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      };\r\n    \nbreak;\ncase 69:\n\r\n      this.$ = {\r\n        name: \"IFNFWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['MASK'], ['AND'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 70:\n\r\n      this.$ = {\r\n        name: \"IFFWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['MASK'], ['AND']]\r\n      };\r\n    \nbreak;\ncase 71:\n\r\n      this.$ = {\r\n        name: \"IFNLWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTL'], ['MASK'], ['AND'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 72:\n\r\n      this.$ = {\r\n        name: \"IFLWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTL'], ['MASK'], ['AND']]\r\n      };\r\n    \nbreak;\ncase 73:\n\r\n      this.$ = {\r\n        name: \"IFNRWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTR'], ['MASK'], ['AND'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 74:\n\r\n      this.$ = {\r\n        name: \"IFRWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTR'], ['MASK'], ['AND']]\r\n      };\r\n    \nbreak;\ncase 75:\n\r\n      this.$ = {\r\n        name: \"IFWBUZZER\",\r\n        code: [['WORLDBUZZERS'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 76:\n\r\n      this.$ = {\r\n        name: \"IFNWBUZZER\",\r\n        code: [['WORLDBUZZERS'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 77:\n\r\n      this.$ = {\r\n        name: \"IFBBUZZER\",\r\n        code: [['BAGBUZZERS'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 78:\n\r\n      this.$ = {\r\n        name: \"IFNBBUZZER\",\r\n        code: [['BAGBUZZERS'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 79:\n\r\n      this.$ = {\r\n        name: \"IFW\",\r\n        code: [['ORIENTATION'], ['LOAD', 0], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 80:\n\r\n      this.$ = {\r\n        name: \"IFN\",\r\n        code: [['ORIENTATION'], ['LOAD', 1], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 81:\n\r\n      this.$ = {\r\n        name: \"IFE\",\r\n        code: [['ORIENTATION'], ['LOAD', 2], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 82:\n\r\n      this.$ = {\r\n        name: \"IFS\",\r\n        code: [['ORIENTATION'], ['LOAD', 3], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 83:\n\r\n      this.$ = {\r\n        name: \"IFNW\",\r\n        code: [['ORIENTATION'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 84:\n\r\n      this.$ = {\r\n        name: \"IFNN\",\r\n        code: [['ORIENTATION'], ['LOAD', 1], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 85:\n\r\n      this.$ = {\r\n        name: \"IFNE\",\r\n        code: [['ORIENTATION'], ['LOAD', 2], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 86:\n\r\n      this.$ = {\r\n        name: \"IFNS\",\r\n        code: [['ORIENTATION'], ['LOAD', 3], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 87:\n \r\n      this.$ = {\r\n        data: `NUMBER#${$$[$0]}`,\r\n        code: [['LOAD',  $$[$0]]]\r\n      }; \r\n    \nbreak;\ncase 88:\n \r\n      this.$ = {\r\n        data: \"INC\",\r\n        code: $$[$0-1].concat([['INC', 1]])\r\n      };\r\n    \nbreak;\ncase 89:\n \r\n      this.$ = {\r\n        data: \"DEC\",\r\n        code: $$[$0-1].concat([['DEC', 1]])\r\n      };\r\n    \nbreak;\ncase 90:\n \r\n      this.$ = {\r\n        data: `INC#${$$[$0-1]}`,\r\n        code: $$[$0-3].concat([['INC', $$[$0-1]]])\r\n      };\r\n    \nbreak;\ncase 91:\n \r\n      this.$ = {\r\n        data: `DEC#${$$[$0-1]}`,\r\n        code: $$[$0-3].concat([['DEC', $$[$0-1]]])\r\n      };\r\n    \nbreak;\ncase 92:\n this.$ = parseInt(yytext); \nbreak;\ncase 93:\n this.$ = yytext.toLowerCase(); \nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],12:4,13:$V0},{1:[3]},{5:[1,6],12:7,13:$V0},{6:8,7:[1,9],19:10,20:11,24:12,29:$V1,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6},o($V7,[2,6]),{14:19,16:20,96:$V8},{6:22,7:[1,23],19:10,20:11,24:12,29:$V1,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6},o($V7,[2,5]),{7:[1,24],19:25,20:11,24:12,29:$V1,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6},o($V9,$Va,{8:26,35:27,26:28,43:36,44:37,45:38,46:39,47:40,16:43,52:44,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,48:$Vi,50:$Vj,54:$Vk,58:$Vl,60:$Vm,96:$V8}),{15:[1,48]},{16:49,96:$V8},{16:50,96:$V8},{96:[2,22]},{96:[2,23]},{96:[2,24]},{96:[2,19]},{96:[2,20]},{96:[2,21]},{15:[1,51]},{17:[1,52]},o([9,15,17,21,23,25,28,49,56,57,59,62,63,64,65,66,67],[2,93]),{7:[1,53],19:25,20:11,24:12,29:$V1,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6},o($V9,$Va,{35:27,26:28,43:36,44:37,45:38,46:39,47:40,16:43,52:44,8:54,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,48:$Vi,50:$Vj,54:$Vk,58:$Vl,60:$Vm,96:$V8}),o($V9,$Va,{35:27,26:28,43:36,44:37,45:38,46:39,47:40,16:43,52:44,8:55,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,48:$Vi,50:$Vj,54:$Vk,58:$Vl,60:$Vm,96:$V8}),{15:[1,56]},{9:[1,57],15:$Vn},o($Vo,[2,26]),o($Vo,[2,27]),o($Vp,[2,29]),o($Vp,[2,30]),o($Vp,[2,31]),o($Vp,[2,32]),o($Vp,[2,33]),o($Vp,[2,34]),o($Vp,[2,35]),o($Vp,[2,36]),o($Vp,[2,37]),o($Vp,[2,38]),o($Vp,[2,39]),o($Vp,[2,40]),o([15,49],$Va,{35:27,26:28,43:36,44:37,45:38,46:39,47:40,16:43,52:44,8:59,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,48:$Vi,50:$Vj,54:$Vk,58:$Vl,60:$Vm,96:$V8}),o($Vp,[2,42],{51:60,69:63,72:66,73:67,16:68,52:69,92:88,21:$Vq,68:$Vr,70:$Vs,71:$Vt,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,93:$VM,94:$VN,95:$VO,96:$V8}),o($Vp,[2,44],{21:$VP}),o($Vp,[2,45]),{16:68,21:$Vq,51:94,52:69,55:93,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{16:68,21:$Vq,51:94,52:69,55:95,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{16:68,21:$Vq,51:97,52:69,61:96,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},o($VQ,[2,11]),{15:[2,12],21:[1,98]},{21:[1,100],25:[1,99]},o($V7,[2,7]),{16:101,18:[1,102],96:$V8},o($V9,$Va,{35:27,26:28,43:36,44:37,45:38,46:39,47:40,16:43,52:44,8:103,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,48:$Vi,50:$Vj,54:$Vk,58:$Vl,60:$Vm,96:$V8}),{9:[1,104],15:$Vn},{9:[1,105],15:$Vn},o($VQ,[2,10]),{10:[1,106]},o($Vo,$Va,{26:28,43:36,44:37,45:38,46:39,47:40,16:43,52:44,35:107,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,48:$Vi,50:$Vj,54:$Vk,58:$Vl,60:$Vm,96:$V8}),{15:$Vn,49:[1,108]},o($Vp,[2,43],{63:$VR,64:$VS,65:$VT,66:$VU,67:$VV}),{16:68,21:$Vq,51:114,52:69,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{16:68,21:$Vq,51:115,52:69,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},o($VW,[2,60]),{21:[1,116]},{21:[1,117]},o($VW,[2,65]),o($VW,[2,66]),o($VW,[2,67],{21:$VP}),o($VW,[2,68]),o($VW,[2,69]),o($VW,[2,70]),o($VW,[2,71]),o($VW,[2,72]),o($VW,[2,73]),o($VW,[2,74]),o($VW,[2,75]),o($VW,[2,76]),o($VW,[2,77]),o($VW,[2,78]),o($VW,[2,79]),o($VW,[2,80]),o($VW,[2,81]),o($VW,[2,82]),o($VW,[2,83]),o($VW,[2,84]),o($VW,[2,85]),o($VW,[2,86]),o($VW,[2,87]),{21:[1,118]},{21:[1,119]},o($VW,[2,92]),{16:68,21:$Vq,51:121,52:69,53:120,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{56:[1,122]},o([56,59],[2,61],{63:$VR,64:$VS,65:$VT,66:$VU,67:$VV}),{59:[1,123]},{62:[1,124]},o([23,28,62],[2,62],{63:$VR,64:$VS,65:$VT,66:$VU,67:$VV}),{16:127,22:125,27:126,96:$V8},{16:43,26:128,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,43:36,44:37,45:38,46:39,47:40,48:$Vi,50:$Vj,52:44,54:$Vk,58:$Vl,60:$Vm,96:$V8},{16:127,22:129,27:126,96:$V8},{15:[2,8]},{15:[2,9]},{9:[1,130],15:$Vn},{10:[1,131]},{10:[1,132]},{11:[1,133]},o($Vo,[2,25]),o($Vp,[2,41]),{16:68,21:$Vq,51:134,52:69,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{16:68,21:$Vq,51:135,52:69,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{16:68,21:$Vq,51:136,52:69,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{16:68,21:$Vq,51:137,52:69,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{16:68,21:$Vq,51:138,52:69,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},o($VW,[2,58]),{23:[1,139],63:$VR,64:$VS,65:$VT,66:$VU,67:$VV},{16:68,21:$Vq,51:97,52:69,61:140,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{16:68,21:$Vq,51:97,52:69,61:141,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{16:68,21:$Vq,51:97,52:69,61:142,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{16:68,21:$Vq,51:97,52:69,61:143,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},{23:[1,144],28:[1,145]},o($VX,[2,48],{63:$VR,64:$VS,65:$VT,66:$VU,67:$VV}),{16:43,26:146,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,43:36,44:37,45:38,46:39,47:40,48:$Vi,50:$Vj,52:44,54:$Vk,58:$Vl,60:$Vm,96:$V8},{16:43,26:147,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,43:36,44:37,45:38,46:39,47:40,48:$Vi,50:$Vj,52:44,54:$Vk,58:$Vl,60:$Vm,96:$V8},{16:43,26:148,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,43:36,44:37,45:38,46:39,47:40,48:$Vi,50:$Vj,52:44,54:$Vk,58:$Vl,60:$Vm,96:$V8},{23:[1,149]},{23:[2,17],28:[1,150]},o($VX,[2,18]),{15:[2,14]},{23:[1,151]},{10:[1,152]},{11:[1,153]},{11:[1,154]},{1:[2,4]},o([9,15,23,28,49,56,57,59,62,63],[2,53],{64:$VS,65:$VT,66:$VU,67:$VV}),o($VY,[2,54],{65:$VT,66:$VU,67:$VV}),o($VY,[2,55],{66:$VU,67:$VV}),o($VZ,[2,56]),o($VZ,[2,57]),o($VW,[2,59]),{23:[1,155]},{23:[1,156]},{23:[1,157],28:[1,158]},{23:[1,159],28:[1,160]},o($VW,[2,46]),{16:68,21:$Vq,51:161,52:69,68:$Vr,69:63,70:$Vs,71:$Vt,72:66,73:67,74:$Vu,75:$Vv,76:$Vw,77:$Vx,78:$Vy,79:$Vz,80:$VA,81:$VB,82:$VC,83:$VD,84:$VE,85:$VF,86:$VG,87:$VH,88:$VI,89:$VJ,90:$VK,91:$VL,92:88,93:$VM,94:$VN,95:$VO,96:$V8},o($Vo,[2,49],{57:[1,162]}),o($Vp,[2,51]),o($Vp,[2,52]),{15:[2,13]},{16:127,22:163,27:126,96:$V8},{25:[1,164]},{11:[1,165]},{1:[2,2]},{1:[2,3]},o($VW,[2,63]),o($VW,[2,64]),o($VW,[2,88]),{92:166,95:$VO},o($VW,[2,89]),{92:167,95:$VO},o($VX,[2,47],{63:$VR,64:$VS,65:$VT,66:$VU,67:$VV}),{16:43,26:168,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,43:36,44:37,45:38,46:39,47:40,48:$Vi,50:$Vj,52:44,54:$Vk,58:$Vl,60:$Vm,96:$V8},{23:[2,16]},{16:43,26:169,36:$Vb,37:$Vc,38:$Vd,39:$Ve,40:$Vf,41:$Vg,42:$Vh,43:36,44:37,45:38,46:39,47:40,48:$Vi,50:$Vj,52:44,54:$Vk,58:$Vl,60:$Vm,96:$V8},{1:[2,1]},{23:[1,170]},{23:[1,171]},o($Vp,[2,50]),{15:[2,15]},o($VW,[2,90]),o($VW,[2,91])],\ndefaultActions: {13:[2,22],14:[2,23],15:[2,24],16:[2,19],17:[2,20],18:[2,21],101:[2,8],102:[2,9],128:[2,14],133:[2,4],149:[2,13],153:[2,2],154:[2,3],163:[2,16],165:[2,1],169:[2,15]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    // _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: lexer.yylloc, // Implement fix: https://github.com/zaach/jison/pull/356\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n\r\nconst COMPILER= \"RKP 1.0.0\";\r\nconst LANG = \"ReKarel Pascal\";\r\nconst VarsAsFuncs = true;\r\nconst reqsPrototypes = false;\r\n\r\nlet tagCnt = 1;\r\n\r\nfunction UniqueTag(tag) {\r\n  return `${tag}.${tagCnt++}`;\r\n}\r\nfunction resetCompiler(tag) {\r\n  tagCnt = 1;\r\n}\r\n\r\nfunction locToIR(loc) {\r\n  return [\r\n    \"LINE\",\r\n    loc.first_line - 1,\r\n    loc.first_column\r\n  ]\r\n}\r\n\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"flex\":true,\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nswitch($avoiding_name_collisions) {\ncase 0:/* ignore */\nbreak;\ncase 1:/* ignore */\nbreak;\ncase 2:/* ignore */\nbreak;\ncase 3: return 5; \ncase 4: return 7; \ncase 5: return 7; \ncase 6: return 9; \ncase 7: return 9; \ncase 8: return 10; \ncase 9: return 31; \ncase 10: return 31; \ncase 11: return 31; \ncase 12: return 13; \ncase 13: return 34; \ncase 14: return 34; \ncase 15: return 32; \ncase 16: return 32; \ncase 17: return 29; \ncase 18: return 29; \ncase 19: return 33; \ncase 20: return 33; \ncase 21: return 30; \ncase 22: return 30; \ncase 23: return 50; \ncase 24: return 50; \ncase 25: return 50; \ncase 26: return 25; \ncase 27: return 40; \ncase 28: return 40; \ncase 29: return 37; \ncase 30: return 36; \ncase 31: return 38; \ncase 32: return 39; \ncase 33: return 41; \ncase 34: return 41; \ncase 35: return 42; \ncase 36: return 48; \ncase 37: return 49; \ncase 38: return 56; \ncase 39: return 58; \ncase 40: return 59; \ncase 41: return 60; \ncase 42: return 62; \ncase 43: return 94; \ncase 44: return 93; \ncase 45: return 70; \ncase 46: return 70; \ncase 47: return 71; \ncase 48: return 74; \ncase 49: return 75; \ncase 50: return 76; \ncase 51: return 77; \ncase 52: return 78; \ncase 53: return 79; \ncase 54: return 80; \ncase 55: return 81; \ncase 56: return 82; \ncase 57: return 82; \ncase 58: return 83; \ncase 59: return 83; \ncase 60: return 85; \ncase 61: return 87; \ncase 62: return 86; \ncase 63: return 84; \ncase 64: return 89; \ncase 65: return 91; \ncase 66: return 90; \ncase 67: return 88; \ncase 68: return 57; \ncase 69: return 57; \ncase 70: return 54; \ncase 71: return 68; \ncase 72: return 63; \ncase 73: return 63; \ncase 74: return 64; \ncase 75: return 64; \ncase 76: return 21; \ncase 77: return 23; \ncase 78: return 15; \ncase 79: return 17; \ncase 80: return 28; \ncase 81: return 18; \ncase 82: return 65; \ncase 83: return 67; \ncase 84: return 66; \ncase 85: return 95; \ncase 86: return 96; \ncase 87: return 11; \ncase 88:console.log(yy_.yytext);\nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:\\{[^}]*\\})/i,/^(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\))/i,/^(?:iniciar-programa)/i,/^(?:inicia-ejecucion)/i,/^(?:inicia-ejecución)/i,/^(?:termina-ejecucion)/i,/^(?:termina-ejecución)/i,/^(?:finalizar-programa)/i,/^(?:define-nueva-instruccion)/i,/^(?:define-nueva-instrucción)/i,/^(?:define)/i,/^(?:usa)/i,/^(?:define-prototipo-instruccion)/i,/^(?:define-prototipo-instrucción)/i,/^(?:define-prototipo-calculo)/i,/^(?:define-prototipo-cálculo)/i,/^(?:define-calculo)/i,/^(?:define-cálculo)/i,/^(?:define-prototipo-condicion)/i,/^(?:define-prototipo-condición)/i,/^(?:define-condicion)/i,/^(?:define-condición)/i,/^(?:sal-de-instruccion)/i,/^(?:sal-de-instrucción)/i,/^(?:regresa)/i,/^(?:como)/i,/^(?:apagate)/i,/^(?:apágate)/i,/^(?:gira-izquierda)/i,/^(?:avanza)/i,/^(?:coge-zumbador)/i,/^(?:deja-zumbador)/i,/^(?:continua)/i,/^(?:continúa)/i,/^(?:rompe)/i,/^(?:inicio)/i,/^(?:fin)/i,/^(?:entonces)/i,/^(?:mientras)/i,/^(?:hacer)/i,/^(?:repetir)/i,/^(?:veces)/i,/^(?:precede)/i,/^(?:sucede)/i,/^(?:si-es-cero)/i,/^(?:es-cero)/i,/^(?:es-infinito)/i,/^(?:frente-libre)/i,/^(?:frente-bloqueado)/i,/^(?:izquierda-libre)/i,/^(?:izquierda-bloqueada)/i,/^(?:derecha-libre)/i,/^(?:derecha-bloqueada)/i,/^(?:junto-a-zumbador)/i,/^(?:no-junto-a-zumbador)/i,/^(?:algun-zumbador-en-la-mochila)/i,/^(?:algún-zumbador-en-la-mochila)/i,/^(?:ningun-zumbador-en-la-mochila)/i,/^(?:ningún-zumbador-en-la-mochila)/i,/^(?:orientado-al-norte)/i,/^(?:orientado-al-sur)/i,/^(?:orientado-al-este)/i,/^(?:orientado-al-oeste)/i,/^(?:no-orientado-al-norte)/i,/^(?:no-orientado-al-sur)/i,/^(?:no-orientado-al-este)/i,/^(?:no-orientado-al-oeste)/i,/^(?:sino)/i,/^(?:si-no)/i,/^(?:si)/i,/^(?:no)/i,/^(?:o)/i,/^(?:u)/i,/^(?:y)/i,/^(?:e)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:;)/i,/^(?:\\.)/i,/^(?:,)/i,/^(?:\\*)/i,/^(?:==)/i,/^(?:<=)/i,/^(?:<)/i,/^(?:[0-9]+)/i,/^(?:[A-Za-zÀ-ÖØ-öø-ÿ_][A-Za-zÀ-ÖØ-öø-ÿ0-9_-]*)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\nfunction pascalParser$1 () {\n    return karelpascal.parse.apply(karelpascal, arguments);\n}\n\nfunction UnitePackages(packages) {\n    const booleans = new Map();\n    const numbers = new Map();\n    for (const pack of packages) {\n        pack.numberVariables.forEach((value, key, _) => {\n            numbers.set(key, value);\n        });\n        pack.booleanVariables.forEach((value, key, _) => {\n            booleans.set(key, value);\n        });\n    }\n    return {\n        booleanVariables: booleans,\n        numberVariables: numbers\n    };\n}\n\nconst javaNumbers = new Map();\nconst javaBooleans = new Map();\njavaNumbers.set(\"beepersInBeeperBag\", [[\"BAGBUZZERS\"]]);\njavaNumbers.set(\"beepersOnFloor\", [[\"WORLDBUZZERS\"]]);\njavaNumbers.set(\"currentRow\", [[\"ROW\"]]);\njavaNumbers.set(\"currentColumn\", [[\"COLUMN\"]]);\njavaBooleans.set(\"true\", [[\"LOAD\", 1]]);\njavaBooleans.set(\"false\", [[\"LOAD\", 0]]);\nconst rekarelGlobalsJava = {\n    booleanVariables: javaBooleans,\n    numberVariables: javaNumbers\n};\nconst pascalNumbers = new Map();\nconst pascalBooleans = new Map();\npascalNumbers.set(\"zumbadores-en-la-mochila\", [[\"BAGBUZZERS\"]]);\npascalNumbers.set(\"zumbadores-del-piso\", [[\"WORLDBUZZERS\"]]);\npascalNumbers.set(\"columna-actual\", [[\"COLUMN\"]]);\npascalNumbers.set(\"fila-actual\", [[\"ROW\"]]);\npascalBooleans.set(\"verdadero\", [[\"LOAD\", 1]]);\npascalBooleans.set(\"falso\", [[\"LOAD\", 0]]);\nconst rekarelGlobalsPascal = {\n    booleanVariables: pascalBooleans,\n    numberVariables: pascalNumbers\n};\n\nconst java = [rekarelGlobalsJava];\nconst JavaPackages = {\n    \"rekarel.globals\": rekarelGlobalsJava,\n    \"rekarel.*\": UnitePackages(java)\n};\nconst pascal = [rekarelGlobalsPascal];\nconst PascalPackages = {\n    \"rekarel.globales\": rekarelGlobalsPascal,\n    \"rekarel.*\": UnitePackages(pascal)\n};\n\n/**\n * Represents a table with all the definitions. It maps identifiers to functions and variables\n */\nclass DefinitionTable {\n    constructor(variablesCanBeFunctions) {\n        this.functions = new Map();\n        this.variables = new Map();\n        this.variablesCanBeFunctions = variablesCanBeFunctions;\n        this.tagCounter = 0;\n    }\n    /**\n     * Checks the dataType that a variable is or a function returns.\n     * @param identifier The identifier\n     * @returns The data type the identifier is linked to\n     *\n     * @public\n     */\n    getType(identifier) {\n        if (this.variables.has(identifier)) {\n            return this.variables.get(identifier).dataType;\n        }\n        if (this.functions.has(identifier)) {\n            return this.functions.get(identifier).returnType;\n        }\n        return \"undefined\";\n    }\n    /**\n     * Register a function from\n     * @param func The Function data\n     */\n    registerFunction(func) {\n        this.functions.set(func.name, {\n            arguments: func.params,\n            location: 0,\n            returnType: func.returnType\n        });\n    }\n    /**\n     * Tests if a function is in the definition\n     * @param name Function name\n     * @returns true if the function exists, otherwise false\n     */\n    hasFunction(name) {\n        return this.functions.has(name);\n    }\n    /**\n     * Gets the Function data\n     * @param name Function name\n     * @returns Function data, or undefined if this does not exist.\n     */\n    getFunction(name) {\n        return this.functions.get(name);\n    }\n    /**\n     *\n     * @param target Function name\n     * @param location References which instruction of the program is the first instruction of this program used by the CALL instruction,\n     */\n    setFunctionLoc(target, location) {\n        this.functions.get(target).location = location;\n    }\n    /**\n     * Registers a variable\n     * @param name Variable name\n     * @param val Variable data\n     */\n    registerVar(name, val) {\n        this.variables.set(name, val);\n    }\n    /**\n     * Checks if a variable is defined\n     * @param name The variable name\n     * @returns true if the variable exists, otherwise false\n     */\n    hasVar(name) {\n        return this.variables.has(name);\n    }\n    /**\n     * Gets the variable data\n     * @param name variable name\n     * @returns The variable data, or undefined if it does not exist\n     */\n    getVar(name) {\n        return this.variables.get(name);\n    }\n    /**\n     * Gets a unique tag in the format of 'name.number'\n     * @param name a hint to be included in the unique tag\n     * @returns the unique tag\n     *\n     * @example\n     * getUniqueTag('a')\n     *   > 'a.0'\n     * getUniqueTag('a')\n     *   > 'a.1'\n     * getUniqueTag('b')\n     *   > 'a.2'\n     *\n     */\n    getUniqueTag(name) {\n        return `${name}.${this.tagCounter++}`;\n    }\n}\n\nvar KarelNumbers;\n(function (KarelNumbers) {\n    /**\n     * The minimum number supported by Karel\n     */\n    KarelNumbers.minimum = -999999999;\n    /**\n     * The maximum number supported by Karel\n     */\n    KarelNumbers.maximum = 999999999;\n    /**\n     * This is a number that is considered infinite by the runtime. The exact value of this constant is not guaranteed to remain stable\n     *\n     * To check if a number is infinite you should not check against this value ever, but rather check with the KarelNumbers.isInfinite method\n     */\n    KarelNumbers.a_infinite = 1000000005;\n    /**\n     * Checks if a number is infinite or not\n     * @param x Number to check\n     */\n    function isInfinite(x) {\n        return x > KarelNumbers.maximum;\n    }\n    KarelNumbers.isInfinite = isInfinite;\n})(KarelNumbers || (KarelNumbers = {}));\n\n/**\n * Namespace holding the compilation error types and enums\n * An ErrorStatus is formatted the following way:\n * @param error - An CompilationError.Errors representing the error type\n * @param loc - A YYLoc representing the location of the error\n * @param line - number representing the line where the error happened\n */\nvar CompilationError;\n(function (CompilationError) {\n    (function (Errors) {\n        Errors[Errors[\"BINARY_OPERATOR_TYPE_ERROR\"] = 0] = \"BINARY_OPERATOR_TYPE_ERROR\";\n        Errors[Errors[\"CALL_TYPE\"] = 1] = \"CALL_TYPE\";\n        Errors[Errors[\"COMPARISON_TYPE\"] = 2] = \"COMPARISON_TYPE\";\n        Errors[Errors[\"FUNCTION_ILLEGAL_NAME\"] = 3] = \"FUNCTION_ILLEGAL_NAME\";\n        Errors[Errors[\"FUNCTION_REDEFINITION\"] = 4] = \"FUNCTION_REDEFINITION\";\n        Errors[Errors[\"ILLEGAL_BREAK\"] = 5] = \"ILLEGAL_BREAK\";\n        Errors[Errors[\"ILLEGAL_CONTINUE\"] = 6] = \"ILLEGAL_CONTINUE\";\n        Errors[Errors[\"NO_EXPLICIT_RETURN\"] = 7] = \"NO_EXPLICIT_RETURN\";\n        Errors[Errors[\"NUMBER_TOO_LARGE\"] = 8] = \"NUMBER_TOO_LARGE\";\n        Errors[Errors[\"PARAMETER_ILLEGAL_NAME\"] = 9] = \"PARAMETER_ILLEGAL_NAME\";\n        Errors[Errors[\"PARAMETER_REDEFINITION\"] = 10] = \"PARAMETER_REDEFINITION\";\n        Errors[Errors[\"PROTOTYPE_PARAMETERS_MISS_MATCH\"] = 11] = \"PROTOTYPE_PARAMETERS_MISS_MATCH\";\n        Errors[Errors[\"PROTOTYPE_TYPE_MISS_MATCH\"] = 12] = \"PROTOTYPE_TYPE_MISS_MATCH\";\n        Errors[Errors[\"PROTOTYPE_REDEFINITION\"] = 13] = \"PROTOTYPE_REDEFINITION\";\n        Errors[Errors[\"RETURN_TYPE\"] = 14] = \"RETURN_TYPE\";\n        Errors[Errors[\"TOO_FEW_PARAMS_IN_CALL\"] = 15] = \"TOO_FEW_PARAMS_IN_CALL\";\n        Errors[Errors[\"TOO_MANY_PARAMS_IN_CALL\"] = 16] = \"TOO_MANY_PARAMS_IN_CALL\";\n        Errors[Errors[\"TYPE_ERROR\"] = 17] = \"TYPE_ERROR\";\n        Errors[Errors[\"UNDEFINED_FUNCTION\"] = 18] = \"UNDEFINED_FUNCTION\";\n        Errors[Errors[\"UNDEFINED_FUNCTION_OR_VARIABLE\"] = 19] = \"UNDEFINED_FUNCTION_OR_VARIABLE\";\n        Errors[Errors[\"UNARY_OPERATOR_TYPE_ERROR\"] = 20] = \"UNARY_OPERATOR_TYPE_ERROR\";\n        Errors[Errors[\"UNKNOWN_MODULE\"] = 21] = \"UNKNOWN_MODULE\";\n        Errors[Errors[\"UNKNOWN_PACKAGE\"] = 22] = \"UNKNOWN_PACKAGE\";\n        Errors[Errors[\"UNKNOWN_SYNTAX\"] = 23] = \"UNKNOWN_SYNTAX\";\n        Errors[Errors[\"UNKNOWN_VARIABLE\"] = 24] = \"UNKNOWN_VARIABLE\";\n        Errors[Errors[\"VOID_COMPARISON\"] = 25] = \"VOID_COMPARISON\";\n    })(CompilationError.Errors || (CompilationError.Errors = {}));\n})(CompilationError || (CompilationError = {}));\n\n/**\n * Resolves a Term\n * @throws If the AST is not type correct\n * @param tree The ast expression to solve\n * @param table Definition table\n * @param yy Requiered to emmit compilation error\n * @param scope.expectedReturn The type of the return in the current scope\n * @returns Returns the dataType the term resolved to.\n */\nfunction resolveTerm(tree, definitions, scope, target, tags, yy) {\n    if (tree.operation === \"ATOM\") {\n        resolveListWithASTs(tree.instructions, definitions, scope, target, tags, yy);\n        const atomData = tree.atomType.split(\"#\");\n        if (atomData.length > 1 &&\n            (atomData[0] === \"NUMBER\"\n                || atomData[0] === \"INC\"\n                || atomData[0] === \"DEC\")) {\n            const literal = atomData[1];\n            if (literal.length > KarelNumbers.maximum.toString().length\n                || Number(literal) > KarelNumbers.maximum) {\n                yy.parser.parseError(`The number is to large. It must not exceed ${KarelNumbers.maximum}, but it is ${literal}`, {\n                    error: CompilationError.Errors.NUMBER_TOO_LARGE,\n                    line: tree.loc.first_line - 1,\n                    loc: tree.loc\n                });\n            }\n        }\n        if (tree.dataType.startsWith(\"$\")) {\n            const termType = tree.dataType.substring(1);\n            if (scope.parameters.some(e => e.name === termType)) {\n                return \"INT\";\n            }\n            return definitions.getType(tree.dataType.substring(1));\n        }\n        return tree.dataType;\n    }\n    if (tree.operation === \"AND\" || tree.operation === \"OR\") {\n        //Resolve left\n        const leftType = resolveTerm(tree.left, definitions, scope, target, tags, yy);\n        // Add short circuit\n        target.push([\"DUP\"]);\n        if (tree.operation === \"OR\") {\n            target.push([\"NOT\"]);\n        }\n        const shortCircuit = definitions.getUniqueTag(\"shortCircuit\");\n        target.push([\"TJZ\", shortCircuit]);\n        // Resolve right\n        const rightType = resolveTerm(tree.right, definitions, scope, target, tags, yy);\n        // Add short circuit tag\n        if (leftType !== \"BOOL\") {\n            yy.parser.parseError(`${tree.operation} operator uses booleans terms only, left is of type: ${leftType}`, {\n                error: CompilationError.Errors.BINARY_OPERATOR_TYPE_ERROR,\n                operator: tree.operation,\n                loc: tree.loc,\n                line: tree.loc.first_line - 1,\n                expectedType: \"BOOL\",\n                actualType: leftType,\n                direction: \"LEFT\"\n            });\n        }\n        if (rightType !== \"BOOL\") {\n            yy.parser.parseError(`${tree.operation} operator uses booleans terms only, right is of type: ${rightType}`, {\n                error: CompilationError.Errors.BINARY_OPERATOR_TYPE_ERROR,\n                operator: tree.operation,\n                loc: tree.loc,\n                line: tree.loc.first_line - 1,\n                expectedType: \"BOOL\",\n                actualType: rightType,\n                direction: \"RIGHT\"\n            });\n        }\n        target.push([tree.operation]);\n        resolveListWithASTs([[\"TAG\", shortCircuit]], definitions, scope, target, tags, yy);\n        return tree.dataType;\n    }\n    if (tree.operation === \"EQ\") {\n        const leftType = resolveTerm(tree.left, definitions, scope, target, tags, yy);\n        const rightType = resolveTerm(tree.right, definitions, scope, target, tags, yy);\n        if (leftType !== rightType) {\n            yy.parser.parseError(`An equality comparison cannot be performed between type ${leftType} and ${rightType}`, {\n                error: CompilationError.Errors.COMPARISON_TYPE,\n                loc: tree.loc,\n                line: tree.loc.first_line - 1,\n                leftType: leftType,\n                rightType: rightType\n            });\n        }\n        if (leftType === \"VOID\") {\n            yy.parser.parseError(`An equality comparison cannot be performed on VOID`, {\n                error: CompilationError.Errors.VOID_COMPARISON,\n                loc: tree.loc,\n                line: tree.loc.first_line - 1,\n                leftType: leftType,\n                rightType: rightType\n            });\n        }\n        target.push([tree.operation]);\n        return tree.dataType;\n    }\n    if (tree.operation === \"LT\" || tree.operation === \"LTE\") {\n        const leftType = resolveTerm(tree.left, definitions, scope, target, tags, yy);\n        const rightType = resolveTerm(tree.right, definitions, scope, target, tags, yy);\n        if (leftType !== \"INT\") {\n            yy.parser.parseError(`${tree.operation} operator uses integer terms only, left is of type: ${leftType}`, {\n                error: CompilationError.Errors.BINARY_OPERATOR_TYPE_ERROR,\n                loc: tree.loc,\n                operator: tree.operation,\n                line: tree.loc.first_line - 1,\n                direction: \"LEFT\",\n                expectedType: \"INT\",\n                actualType: leftType\n            });\n        }\n        if (rightType !== \"INT\") {\n            yy.parser.parseError(`${tree.operation} operator uses integer terms only, right is of type: ${rightType}`, {\n                error: CompilationError.Errors.BINARY_OPERATOR_TYPE_ERROR,\n                loc: tree.loc,\n                operator: tree.operation,\n                direction: \"RIGHT\",\n                line: tree.loc.first_line - 1,\n                expectedType: \"INT\",\n                actualType: rightType\n            });\n        }\n        target.push([tree.operation]);\n        return tree.dataType;\n    }\n    if (tree.operation === \"NOT\") {\n        const termType = resolveTerm(tree.term, definitions, scope, target, tags, yy);\n        if (termType !== \"BOOL\") {\n            yy.parser.parseError(`${tree.operation} operator uses a boolean terms only, but tried to negate a term of type: ${termType}`, {\n                error: CompilationError.Errors.UNARY_OPERATOR_TYPE_ERROR,\n                loc: tree.loc,\n                operator: tree.operation,\n                line: tree.loc.first_line - 1,\n                expectedType: \"BOOL\",\n                actualType: termType\n            });\n        }\n        target.push([tree.operation]);\n        return tree.dataType;\n    }\n    if (tree.operation === \"PASS\") {\n        const termType = resolveTerm(tree.term, definitions, scope, target, tags, yy);\n        if (termType !== tree.dataType) {\n            yy.parser.parseError(`Expected a term of type ${tree.dataType}, but got ${termType}`, {\n                error: CompilationError.Errors.TYPE_ERROR,\n                loc: tree.totalLoc,\n                line: tree.totalLoc.first_line - 1,\n                expectedType: tree.dataType,\n                actualType: termType\n            });\n        }\n        return tree.dataType;\n    }\n    if (tree.operation === \"PARENTHESIS\") {\n        const termType = resolveTerm(tree.term, definitions, scope, target, tags, yy);\n        return termType;\n    }\n}\n/**\n * Resolves a variable into the SemiSimple Instructions\n *\n * If the language has active the flag VariablesCanBeFunctions (such as pascal),\n * the it may attempt to resolve it to a parameter-less function call\n *\n * @param data the Variable IR\n * @param definitions Table of definitions\n * @param scope Scope data\n * @param target target where the SemiSimple Instructions are appended to\n * @param yy to emit compilation errors\n *\n *\n * @throws\n * CompilationError.Errors.UNKNOWN_VARIABLE | CompilationError.Errors.UNDEFINED_FUNCTION\n *\n * if the variable is not defined\n *\n */\nfunction resolveVar(data, definitions, scope, target, yy) {\n    const parameterIdx = scope.parameters.findIndex(e => data.target === e.name);\n    if (parameterIdx !== -1) {\n        target.push([\"PARAM\", scope.parameters.length - parameterIdx - 1]);\n        return;\n    }\n    if (definitions.hasVar(data.target)) {\n        const IRs = definitions.getVar(data.target).instructions;\n        for (const instruction of IRs) {\n            target.push(instruction);\n        }\n        return;\n    }\n    if (data.couldBeFunction) {\n        resolveCall$2({\n            nameLoc: data.loc,\n            params: [],\n            target: data.target,\n            expectedType: data.expectedType,\n        }, definitions, scope, target, {}, yy);\n        target.push([\"LRET\"]);\n        return;\n    }\n    yy.parser.parseError(\"Unknown variable or parameter: \" + data.target, {\n        error: CompilationError.Errors.UNKNOWN_VARIABLE,\n        variable: data.target,\n        line: data.loc.first_line - 1,\n        loc: data.loc\n    });\n}\n/**\n * Resolves a call into the SemiSimple Instructions\n * It resolves its parameters and formats it properly for the VM\n *\n * @param data the Call IR\n * @param definitions Table of definitions\n * @param scope Scope data\n * @param target target where the SemiSimple Instructions are appended to\n * @param tags A record of tags\n * @param yy to emit compilation errors\n *\n *\n * @throws\n * CompilationError.Errors.UNDEFINED_FUNCTION\n * If the function is not defined\n */\nfunction resolveCall$2(data, definitions, scope, target, tags, yy) {\n    for (const parameter of data.params) {\n        resolveTerm(parameter, definitions, scope, target, tags, yy);\n    }\n    target.push([\"LOAD\", data.params.length]);\n    target.push([\"LINE\", data.nameLoc.first_line - 1, data.nameLoc.first_column]);\n    if (!definitions.hasFunction(data.target)) {\n        yy.parser.parseError(\"Undefined function: \" + data.target, {\n            error: CompilationError.Errors.UNDEFINED_FUNCTION,\n            functionName: data.target,\n            line: data.nameLoc.first_line - 1,\n            loc: data.nameLoc\n        });\n        return null;\n    }\n    target.push([\"CALL\", data]);\n    target.push([\n        \"LINE\",\n        data.nameLoc.first_line - 1,\n        data.nameLoc.first_column + data.target.length\n    ]);\n}\n/**\n * Resolves a return\n *\n * @param data the Return IR\n * @param definitions Table of definitions\n * @param scope Scope data\n * @param target target where the SemiSimple Instructions are appended to\n * @param tags A record of tags\n * @param yy to emit compilation errors\n *\n *\n * @throws\n * CompilationError.Errors.RETURN_TYPE\n * If the return type is not correct\n */\nfunction resolveReturn(data, definitions, scope, target, tags, yy) {\n    const retType = resolveTerm(data.term, definitions, scope, target, tags, yy);\n    if (scope.expectedReturn !== retType) {\n        yy.parser.parseError(`Cannot return a type: ${retType}, in a function of type: ${scope.expectedReturn}`, {\n            error: CompilationError.Errors.RETURN_TYPE,\n            line: data.loc.first_line - 1,\n            loc: data.loc,\n            expectedType: scope.expectedReturn,\n            actualType: retType\n        });\n    }\n    target.push([\"SRET\"]);\n    target.push([\"LINE\", data.loc.first_line - 1, data.loc.first_column]);\n    target.push([\"RET\", data]);\n}\n/**\n * Resolves a repeat loop\n * @param data The repeat AST\n * @param definitions Table of definitions\n * @param scope Scope data\n * @param target the SemiSimple Instruction array where instructions are inserted\n * @param tags Available tags record\n * @param yy For compilation error purposes\n *\n * @throws If inner blocks fail to be resolved\n */\nfunction resolveRepeat(data, definitions, scope, target, tags, yy) {\n    // Add line marker\n    target.push(data.line);\n    // Add load counter\n    resolveTerm(data.loopCount[1], definitions, scope, target, tags, yy);\n    // Add counter logic\n    resolveListWithASTs([\n        ['TAG', data.repeatTag],\n        ['DUP'],\n        ['LOAD', 0],\n        ['LTE'],\n        ['NOT'],\n        ['TJZ', data.endTag]\n    ], definitions, scope, target, tags, yy);\n    const loopScope = scope.withContinueBreakTarget(data.continueTag, data.endTag);\n    // Add loop body\n    resolveListWithASTs(data.instructions, definitions, loopScope, target, tags, yy);\n    // Add loop end logic\n    resolveListWithASTs([\n        ['TAG', data.continueTag],\n        ['DEC', 1],\n        ['TJMP', data.repeatTag],\n        ['TAG', data.endTag],\n        ['POP'],\n    ], definitions, scope, target, tags, yy);\n}\n/**\n * Resolves a while AST\n * @param data While data\n * @param definitions  table of definitions\n * @param scope Scope data\n * @param target Target where SemiSimpleInstructions are emitted to\n * @param tags Available tags\n * @param yy Parser errors\n *\n * @throws\n */\nfunction resolveWhile(data, definitions, scope, target, tags, yy) {\n    // Add repeat tag\n    resolveListWithASTs([\n        ['TAG', data.repeatTag],\n    ], definitions, scope, target, tags, yy);\n    // Add line marker\n    target.push(data.line);\n    // Add condition check\n    resolveTerm(data.condition[1], definitions, scope, target, tags, yy);\n    // Add skip logic\n    resolveListWithASTs([\n        ['TJZ', data.endTag]\n    ], definitions, scope, target, tags, yy);\n    const whileScope = scope.withContinueBreakTarget(data.repeatTag, data.endTag);\n    // Add loop body\n    resolveListWithASTs(data.instructions, definitions, whileScope, target, tags, yy);\n    // Add loop end logic\n    resolveListWithASTs([\n        ['TJMP', data.repeatTag],\n        ['TAG', data.endTag],\n    ], definitions, scope, target, tags, yy);\n}\n/**\n * Resolves a conditional\n * @param data Conditional data\n * @param definitions Table of definitions\n * @param scope Scope info\n * @param target Target where the SemiSimple instructions are emitted to\n * @param tags Tags available\n * @param yy Parser errors\n * @returns Flow data\n */\nfunction resolveConditional(data, definitions, scope, target, tags, yy) {\n    let trueReturns = false, falseReturns = false;\n    // Add line marker\n    target.push(data.line);\n    resolveTerm(data.condition[1], definitions, scope, target, tags, yy);\n    resolveListWithASTs([[\"TJZ\", data.skipTrueTag]], definitions, scope, target, tags, yy);\n    trueReturns = resolveListWithASTs(data.trueCase, definitions, scope, target, tags, yy).explicitReturn;\n    if (data.skipFalseTag) {\n        resolveListWithASTs([[\"TJMP\", data.skipFalseTag]], definitions, scope, target, tags, yy);\n    }\n    resolveListWithASTs([[\"TAG\", data.skipTrueTag]], definitions, scope, target, tags, yy);\n    if (data.skipFalseTag && data.falseCase) {\n        falseReturns = resolveListWithASTs(data.falseCase, definitions, scope, target, tags, yy).explicitReturn;\n        resolveListWithASTs([[\"TAG\", data.skipFalseTag]], definitions, scope, target, tags, yy);\n    }\n    return {\n        explicitReturn: trueReturns && falseReturns\n    };\n}\n/**\n * @throws Iterates through an IR list and resolve any AST it finds\n * @param tree The ast expression to solve\n * @param definitions Definition table\n * @param yy Required to emit compilation error\n * @returns Returns the equivalent AST into IRInstructions without AST\n */\nfunction resolveListWithASTs(IRInstructions, definitions, scope, target, tags, yy) {\n    const info = {\n        explicitReturn: false\n    };\n    for (const instruction of IRInstructions) {\n        // Fixme: All vars should be in terms\n        if (instruction[0] === \"VAR\") {\n            resolveVar(instruction[1], definitions, scope, target, yy);\n            continue;\n        }\n        if (instruction[0] === \"FORWARD\") {\n            target.push(['WORLDWALLS']);\n            target.push(['ORIENTATION']);\n            target.push(['MASK']);\n            target.push(['AND']);\n            target.push(['NOT']);\n            target.push(['EZ', 'WALL']);\n            target.push(instruction);\n            continue;\n        }\n        if (instruction[0] === \"PICKBUZZER\") {\n            target.push(['WORLDBUZZERS']);\n            target.push(['EZ', 'WORLDUNDERFLOW']);\n            target.push(instruction);\n            continue;\n        }\n        if (instruction[0] === \"LEAVEBUZZER\") {\n            target.push(['BAGBUZZERS']);\n            target.push(['EZ', 'BAGUNDERFLOW']);\n            target.push(instruction);\n            continue;\n        }\n        if (instruction[0] === \"TERM\") {\n            resolveTerm(instruction[1], definitions, scope, target, tags, yy);\n            continue;\n        }\n        if (instruction[0] === \"TAG\") {\n            tags[instruction[1]] = target.length;\n            continue;\n        }\n        if (instruction[0] === \"CALL\") {\n            resolveCall$2(instruction[1], definitions, scope, target, tags, yy);\n            continue;\n        }\n        if (instruction[0] === \"RET\") {\n            if (instruction[1] === \"__DEFAULT\") {\n                //set SRET to 0\n                target.push([\"LOAD\", 0]);\n                target.push([\"SRET\"]);\n                target.push([\n                    \"LINE\",\n                    instruction[2].first_line - 1,\n                    instruction[2].first_column\n                ]);\n                target.push(instruction);\n                continue;\n            }\n            resolveReturn(instruction[1], definitions, scope, target, tags, yy);\n            info.explicitReturn = true;\n            continue;\n        }\n        if (instruction[0] === \"REPEAT\") {\n            resolveRepeat(instruction[1], definitions, scope, target, tags, yy);\n            continue;\n        }\n        if (instruction[0] === \"WHILE\") {\n            resolveWhile(instruction[1], definitions, scope, target, tags, yy);\n            continue;\n        }\n        if (instruction[0] === \"IF\") {\n            const ifInfo = resolveConditional(instruction[1], definitions, scope, target, tags, yy);\n            if (ifInfo.explicitReturn) {\n                info.explicitReturn = true;\n            }\n            continue;\n        }\n        if (instruction[0] === \"CONTINUE\") {\n            if (scope.continueTarget == null) {\n                yy.parser.parseError(\"Cannot use continue in this scope\", {\n                    error: CompilationError.Errors.ILLEGAL_CONTINUE,\n                    loc: instruction[1],\n                    line: instruction[1].first_line - 1\n                });\n            }\n            target.push([\"TJMP\", scope.continueTarget]);\n            continue;\n        }\n        if (instruction[0] === \"BREAK\") {\n            if (scope.breakTarget == null) {\n                yy.parser.parseError(\"Cannot use break in this scope\", {\n                    error: CompilationError.Errors.ILLEGAL_BREAK,\n                    loc: instruction[1],\n                    line: instruction[1].first_line - 1\n                });\n            }\n            target.push([\"TJMP\", scope.breakTarget]);\n            continue;\n        }\n        target.push(instruction);\n    }\n    return info;\n}\n\n/**\n * A readonly class containing the scope data\n */\nclass Scope {\n    constructor(data) {\n        this.parameters = data.parameters;\n        this.expectedReturn = data.expectedReturn;\n        this.continueTarget = data.continueTarget;\n        this.breakTarget = data.breakTarget;\n    }\n    /**\n     * Creates a copy of itself, with the continue Target modified\n     * @param continueTarget The new continue target\n     * @returns A new Scope with the same values, except for continue target\n     */\n    withContinueTarget(continueTarget) {\n        return new Scope({\n            parameters: this.parameters,\n            expectedReturn: this.expectedReturn,\n            continueTarget: continueTarget,\n            breakTarget: this.breakTarget\n        });\n    }\n    /**\n     * Creates a copy of itself, with the break Target modified\n     * @param breakTarget The new break target\n     * @returns A new Scope with the same values, except for break target\n     */\n    withBreakTarget(breakTarget) {\n        return new Scope({\n            parameters: this.parameters,\n            expectedReturn: this.expectedReturn,\n            continueTarget: this.continueTarget,\n            breakTarget: breakTarget\n        });\n    }\n    /**\n     * Creates a copy of itself, changing the continue and break target\n     * @param continueTarget The new continue target\n     * @param breakarget The new break target\n     * @returns A new Scope with modified values\n     */\n    withContinueBreakTarget(continueTarget, breakTarget) {\n        return new Scope({\n            parameters: this.parameters,\n            expectedReturn: this.expectedReturn,\n            continueTarget: continueTarget,\n            breakTarget: breakTarget\n        });\n    }\n}\n/**\n * The default scope used in the main program\n */\nconst MAIN_SCOPE = new Scope({\n    expectedReturn: \"VOID\",\n    parameters: []\n});\n\n/**\n * Contains debug data emitted by the compiler. Useful to debug a Karel Program\n */\nclass DebugData {\n}\n\n/**\n * Checks that functions calls are valid, not defined multiple times and prototypes match\n * @param data The IR generated by the parser\n * @param bundle The bundle generated by the packages\n * @param definitionTable The definition table to populate\n * @returns A boolean if it compiled successfully, it should never return false and not throw\n */\nfunction validateAndGetFunctionDefinitions(data, definitionTable) {\n    const yy = data.yy;\n    const prototypes = new Map();\n    for (const func of data.functions) {\n        //Check that the parameters do not overload a global\n        for (const parameter of func.params) {\n            if (definitionTable.hasVar(parameter.name)) {\n                yy.parser.parseError(\"Cannot name a parameter as a global variable\", {\n                    error: CompilationError.Errors.PARAMETER_ILLEGAL_NAME,\n                    parameterName: parameter.name,\n                    line: parameter.loc.first_line - 1,\n                    loc: parameter.loc\n                });\n                return false;\n            }\n        }\n        // Check that the function does not shadow a variable\n        if (definitionTable.hasVar(func.name)) {\n            yy.parser.parseError(\"Cannot name a function as a global variable\", {\n                error: CompilationError.Errors.FUNCTION_ILLEGAL_NAME,\n                functionName: func.name,\n                line: func.loc.first_line - 1,\n                loc: func.loc\n            });\n            return false;\n        }\n        //Check if current func is a prototype\n        if (func.code == null) {\n            if (prototypes.has(func.name)) {\n                yy.parser.parseError(\"Prototype redefinition: \" + func.name, {\n                    error: CompilationError.Errors.PROTOTYPE_REDEFINITION,\n                    prototypeName: func.name,\n                    line: func.loc.first_line - 1,\n                    loc: func.loc,\n                });\n                return false;\n            }\n            prototypes.set(func.name, {\n                argCount: func.params.length,\n                defined: false,\n                returnType: func.returnType\n            });\n            continue;\n        }\n        if (!prototypes.has(func.name)) {\n            prototypes.set(func.name, {\n                argCount: func.params.length,\n                defined: false,\n                returnType: func.returnType\n            });\n        }\n        const proto = prototypes.get(func.name);\n        if (proto.defined) {\n            yy.parser.parseError(\"Function redefinition: \" + func.name, {\n                error: CompilationError.Errors.FUNCTION_REDEFINITION,\n                functionName: func.name,\n                line: func.loc.first_line - 1,\n                loc: func.loc,\n            });\n            return false;\n        }\n        if (proto.argCount !== func.params.length) {\n            yy.parser.parseError(\"Prototype parameter mismatch: \" + func.name, {\n                error: CompilationError.Errors.PROTOTYPE_PARAMETERS_MISS_MATCH,\n                line: func.loc.first_line - 1,\n                loc: func.loc,\n                functionName: func.name,\n                functionParamCount: func.params.length,\n                prototypeParamCount: proto.argCount\n            });\n            return false;\n        }\n        if (proto.returnType !== func.returnType) {\n            yy.parser.parseError(\"Prototype type mismatch: \" + func.name, {\n                error: CompilationError.Errors.PROTOTYPE_TYPE_MISS_MATCH,\n                line: func.loc.first_line - 1,\n                loc: func.loc,\n                functionName: func.name,\n                functionType: func.returnType,\n                prototypeType: proto.returnType\n            });\n            return false;\n        }\n        prototypes.set(func.name, {\n            argCount: func.params.length,\n            defined: true,\n            returnType: func.returnType\n        });\n        definitionTable.registerFunction(func);\n        for (const instruction of func.code) {\n            if (data.requieresFunctionPrototypes && instruction[0] === \"CALL\") {\n                //This check is only needed if declaration order mater, for languages like C or Pascal\n                //Checks that the function called at this time has been declared above.\n                const data = instruction[1];\n                if (!prototypes.has(data.target)) {\n                    yy.parser.parseError(\"Undefined function: \" + data.target, {\n                        error: CompilationError.Errors.UNDEFINED_FUNCTION,\n                        functionName: data.target,\n                        line: data.nameLoc.first_line - 1,\n                        loc: data.nameLoc\n                    });\n                    return false;\n                }\n            }\n        }\n    }\n    //Validate parameters\n    for (const func of data.functions) {\n        func.params.forEach((param, idx) => {\n            if (definitionTable.hasVar(param.name) || definitionTable.hasFunction(param.name)) {\n                yy.parser.parseError(`Cannot name parameter ${param.name} as it is already used by a variable or function`, {\n                    error: CompilationError.Errors.PARAMETER_ILLEGAL_NAME,\n                    line: param.loc.first_line - 1,\n                    loc: param.loc,\n                    parameterName: param.name\n                });\n            }\n            const first = func.params.findIndex(p => p.name === param.name);\n            if (first !== idx) {\n                yy.parser.parseError(`Parameter ${param.name} was already declared in the function`, {\n                    error: CompilationError.Errors.PARAMETER_REDEFINITION,\n                    line: param.loc.first_line - 1,\n                    loc: param.loc,\n                    parameterName: param.name\n                });\n            }\n        });\n    }\n    return true;\n}\n/**\n * This functions  populates the definitionTable with the data\n * @throws Compilation error if it imports and invalid package\n * @param data IntermediateRepresentation Object\n * @param definitions Table of definitions to be populated\n */\nfunction loadPackages(data, definitions) {\n    const compPackages = data.language === \"ReKarel Java\" ? JavaPackages : PascalPackages;\n    const yy = data.yy;\n    for (const pack of data.packages) {\n        const packageName = pack[0].split(\".\")[0];\n        const moduleName = pack[0].split(\".\")[1];\n        if (packageName !== \"rekarel\") {\n            yy.parser.parseError(\"Package not recognized: \" + pack[0], {\n                error: CompilationError.Errors.UNKNOWN_PACKAGE,\n                package: packageName,\n                module: moduleName,\n                full: pack[0],\n                loc: pack[1],\n                line: pack[1].first_line - 1,\n            });\n        }\n        if (!compPackages[pack[0]]) {\n            yy.parser.parseError(\"Module not found: \" + pack[0], {\n                error: CompilationError.Errors.UNKNOWN_MODULE,\n                package: packageName,\n                module: moduleName,\n                full: pack[0],\n                loc: pack[1],\n                line: pack[1].first_line - 1,\n            });\n        }\n        const packObject = compPackages[pack[0]];\n        for (let [varName, varVal] of packObject.numberVariables) {\n            definitions.registerVar(varName, {\n                instructions: varVal,\n                dataType: \"INT\",\n            });\n        }\n        for (let [varName, varVal] of packObject.booleanVariables) {\n            definitions.registerVar(varName, {\n                instructions: varVal,\n                dataType: \"BOOL\",\n            });\n        }\n    }\n}\n/**\n * Resolves AST instructions, Tags and TJMP.\n * @throws If there's a type error\n * @param IRInstructions The instructions to resolve\n * @param yy Compiler information, used to throw compilation errors\n * @param definitions Table of global definitions\n * @param parameters Parameters of the scope\n * @param expectedReturn The return type of the current scope\n * @returns The IR with the complex IR resolved into simple IR\n */\nfunction resolveComplexIR(IRInstructions, yy, definitions, scope, func) {\n    let result = [];\n    const tags = {};\n    //Resolve AST and populate tags\n    let info = resolveListWithASTs(IRInstructions, definitions, scope, result, tags, yy);\n    // Check for explicit returns\n    if (scope.expectedReturn !== \"VOID\" && !info.explicitReturn) {\n        yy.parser.parseError(`Explicit return is required in function ${func.name}`, {\n            error: CompilationError.Errors.NO_EXPLICIT_RETURN,\n            loc: func.loc,\n            line: func.loc.first_line - 1,\n            functionName: func.name,\n            returnType: scope.expectedReturn,\n        });\n    }\n    // Resolve TJMP to JMP\n    return result.map((instruction, idx) => {\n        if (instruction[0] === \"TJMP\") {\n            const delta = tags[instruction[1]] - idx - 1;\n            return [\"JMP\", delta];\n        }\n        if (instruction[0] === \"TJZ\") {\n            const delta = tags[instruction[1]] - idx - 1;\n            return [\"JZ\", delta];\n        }\n        return instruction;\n    });\n}\n/**\n * Generates the program using the Abstract Syntax Tree (IR OBject) result of the syntax analysis. Processes the Grammatical analysis\n * @param data IRObject containing the output of the syntax analysis tool (such as JISON)\n * @param exportDebug Flag that specifies if the DebugData should be included\n * @returns A tuple with the program and debugData\n */\nfunction generateOpcodesFromIR(data, exportDebug) {\n    const definitions = new DefinitionTable(data.variablesCanBeFunctions);\n    const debugData = new DebugData();\n    // Step 1 - Populate global definitions, and check for repeated definitions\n    loadPackages(data, definitions);\n    if (!validateAndGetFunctionDefinitions(data, definitions))\n        throw new Error(\"This should not be reachable, it should have thrown before\");\n    // Step 2 - Resolve all AST/tags, such as terms.\n    let IRProgram = resolveComplexIR(data.program, data.yy, definitions, MAIN_SCOPE);\n    // Step 3 - Resolve all AST/tags from functions and Generate a single IR array.\n    for (const func of data.functions) {\n        if (func.code == null) {\n            //Skip prototypes\n            continue;\n        }\n        definitions.setFunctionLoc(func.name, IRProgram.length);\n        const functionScope = new Scope({\n            parameters: func.params,\n            expectedReturn: func.returnType\n        });\n        const code = resolveComplexIR(func.code, data.yy, definitions, functionScope, func);\n        IRProgram = IRProgram.concat(code);\n    }\n    //Step 4: Generate opcode. Resolve CALL into correct opcode\n    const program = [];\n    for (const instruction of IRProgram) {\n        if (instruction[0] === \"CALL\") {\n            const iData = instruction[1];\n            if (!definitions.hasFunction(iData.target)) {\n                data.yy.parser.parseError(\"Undefined function: \" + iData.target, {\n                    error: CompilationError.Errors.UNDEFINED_FUNCTION,\n                    functionName: iData.target,\n                    line: iData.nameLoc.first_line - 1,\n                    loc: iData.nameLoc\n                });\n                return null;\n            }\n            const targetFunc = definitions.getFunction(iData.target);\n            if (targetFunc.arguments.length < iData.params.length) {\n                const extraParam = iData.params[iData.params.length - targetFunc.arguments.length - 1];\n                data.yy.parser.parseError(`Too many parameters in call to function ${iData.target}, expected ${targetFunc.arguments.length}, got ${iData.params.length}`, {\n                    error: CompilationError.Errors.TOO_MANY_PARAMS_IN_CALL,\n                    line: extraParam.totalLoc.first_line - 1,\n                    loc: extraParam.totalLoc,\n                    functionName: iData.target,\n                    expectedParams: iData.params.length,\n                    actualParams: targetFunc.arguments.length\n                });\n            }\n            if (targetFunc.arguments.length > iData.params.length) {\n                data.yy.parser.parseError(`Too few parameters in call to function ${iData.target}, expected ${targetFunc.arguments.length}, got ${iData.params.length}`, {\n                    error: CompilationError.Errors.TOO_FEW_PARAMS_IN_CALL,\n                    line: iData.nameLoc.first_line - 1,\n                    loc: iData.nameLoc,\n                    funcName: iData.target,\n                    expectedParams: iData.params.length,\n                    actualParams: targetFunc.arguments.length\n                });\n            }\n            if (iData.expectedType != null && iData.expectedType !== targetFunc.returnType) {\n                data.yy.parser.parseError(`Expected a function of type ${iData.expectedType}, but ${iData.target} is ${targetFunc.returnType}`, {\n                    error: CompilationError.Errors.CALL_TYPE,\n                    line: iData.nameLoc.first_line - 1,\n                    loc: iData.nameLoc,\n                    funcName: iData.target,\n                    expectedCallType: iData.expectedType,\n                    functionType: targetFunc.returnType\n                });\n            }\n            program.push([\n                \"CALL\",\n                targetFunc.location,\n                iData.target,\n            ]);\n            continue;\n        }\n        if (instruction[0] === \"RET\") {\n            program.push([\"RET\"]);\n            continue;\n        }\n        program.push(instruction);\n    }\n    if (exportDebug) {\n        debugData.definitions = definitions;\n        return [program, debugData];\n    }\n    return [program, null];\n}\n\nconst javaParser = javaParser$1;\nconst pascalParser = pascalParser$1;\n/**\n * Uses the first line of text to detect the language\n * @param code Source code\n * @returns Java, pascal or unknown\n */\nfunction detectLanguage(code) {\n    let rules = [\n        /^\\s+/,\n        /^\\/\\/[^\\n]*/,\n        /^#[^\\n]*/,\n        /^(?:\\/\\*(?:[^*]|\\*[^)])*\\*\\/)/,\n        /^{[^}]*}/,\n        /^\\(\\*([^*]|\\*[^)])*\\*\\)/,\n        /^[^a-zA-Z0-9_-]+/,\n        /^[a-zA-Z0-9_-]+/,\n    ];\n    let i = 0;\n    while (i < code.length) {\n        for (let j = 0; j < rules.length; j++) {\n            let m = rules[j].exec(code.substring(i));\n            if (m !== null) {\n                if (j == rules.length - 1) {\n                    // el primer token de verdad.\n                    if (m[0] == 'class' || m[0] == 'import') {\n                        return 'java';\n                    }\n                    else if (m[0].toLowerCase() == 'iniciar-programa' || m[0].toLowerCase() == 'usa') {\n                        return 'pascal';\n                    }\n                    else {\n                        return 'unknown';\n                    }\n                }\n                else {\n                    // comentario o no-token.\n                    i += m[0].length;\n                    break;\n                }\n            }\n        }\n    }\n    return 'unknown';\n}\n/**\n * This function produces the program for the VM from a source code\n * @param code the source code, which may be either java or pascal\n * @param exportDebug If true, it returns the DebugData, otherwise the DebugData is null. It may increase compilation resource consumption. If not present it is false\n * @returns A tuple array containing the compiled program and the debug data (or null)\n *\n * @throws On compilation error. Check the error.status for information on the error\n *\n * @public\n */\nfunction compile(code, exportDebug = false) {\n    let lang = detectLanguage(code);\n    let compiler = null;\n    switch (lang) {\n        case 'java':\n            compiler = javaCompiler;\n            break;\n        case 'pascal':\n            compiler = pascalCompiler;\n            break;\n        default:\n            let errorStatus = {\n                error: CompilationError.Errors.UNKNOWN_SYNTAX,\n                line: 0,\n                loc: {\n                    first_column: 0, first_line: 1, last_column: 0, last_line: 1\n                }\n            };\n            let error = new Error(\"Unknown syntax, the start of the file must be either 'class' or 'iniciar-programa'\");\n            // @ts-ignore Adding extra error data\n            error.hash = errorStatus;\n            throw error;\n    }\n    const result = compiler(code, exportDebug);\n    return result;\n}\n/**\n * This function produces the program for the VM from a Karel Java source code\n * @param code the source code, which must be Java\n * @param exportDebug If true, it returns the DebugData, otherwise the DebugData is null. It may increase compilation resource consumption. If not present it is false\n * @returns A tuple array containing the compiled program and the debug data (or null)\n */\nfunction javaCompiler(code, exportDebug = false) {\n    const IR = javaParser(code);\n    return generateOpcodesFromIR(IR, exportDebug);\n}\n/**\n * This function produces the program for the VM from a Karel Pascal source code\n * @param code the source code, which must be Pascal\n * @param exportDebug If true, it returns the DebugData, otherwise the DebugData is null. It may increase compilation resource consumption. If not present it is false\n * @returns A tuple array containing the compiled program and the debug data (or null)\n */\nfunction pascalCompiler(code, exportDebug = false) {\n    const IR = pascalParser(code);\n    return generateOpcodesFromIR(IR, exportDebug);\n}\n\nclass KarelRuntimeEvent extends Event {\n    constructor(type, runtime, details) {\n        super(type);\n        this.details = details;\n        this.runtime = runtime;\n    }\n}\nclass KarelRuntimeEventTarget {\n    constructor() {\n        this.listeners = {};\n    }\n    addEventListener(type, callback) {\n        if (!this.listeners.hasOwnProperty(type)) {\n            this.listeners[type] = [];\n        }\n        this.listeners[type].push(callback);\n    }\n    dispatchEvent(event) {\n        if (!this.listeners.hasOwnProperty(event.type)) {\n            return false;\n        }\n        for (const listener of this.listeners[event.type]) {\n            listener(event);\n        }\n        return true;\n    }\n    removeEventListener(type, callback) {\n        if (!this.listeners.hasOwnProperty(type)) {\n            return;\n        }\n        const index = this.listeners[type].indexOf(callback);\n        if (index === -1)\n            return;\n        this.listeners[type] = this.listeners[type].splice(index, 1);\n    }\n    fireEvent(type, runtime, data) {\n        const evt = new KarelRuntimeEvent(type, runtime, data);\n        this.dispatchEvent(evt);\n    }\n}\n\n/**\n * The Opcodes that conform the instruction set of Karel\n */\nvar OpCodeID;\n(function (OpCodeID) {\n    OpCodeID[OpCodeID[\"HALT\"] = 0] = \"HALT\";\n    OpCodeID[OpCodeID[\"LINE\"] = 1] = \"LINE\";\n    OpCodeID[OpCodeID[\"LEFT\"] = 2] = \"LEFT\";\n    OpCodeID[OpCodeID[\"WORLDWALLS\"] = 3] = \"WORLDWALLS\";\n    OpCodeID[OpCodeID[\"ORIENTATION\"] = 4] = \"ORIENTATION\";\n    OpCodeID[OpCodeID[\"ROTL\"] = 5] = \"ROTL\";\n    OpCodeID[OpCodeID[\"ROTR\"] = 6] = \"ROTR\";\n    OpCodeID[OpCodeID[\"MASK\"] = 7] = \"MASK\";\n    OpCodeID[OpCodeID[\"NOT\"] = 8] = \"NOT\";\n    OpCodeID[OpCodeID[\"AND\"] = 9] = \"AND\";\n    OpCodeID[OpCodeID[\"OR\"] = 10] = \"OR\";\n    OpCodeID[OpCodeID[\"EQ\"] = 11] = \"EQ\";\n    OpCodeID[OpCodeID[\"EZ\"] = 12] = \"EZ\";\n    OpCodeID[OpCodeID[\"JZ\"] = 13] = \"JZ\";\n    OpCodeID[OpCodeID[\"JMP\"] = 14] = \"JMP\";\n    OpCodeID[OpCodeID[\"FORWARD\"] = 15] = \"FORWARD\";\n    OpCodeID[OpCodeID[\"WORLDBUZZERS\"] = 16] = \"WORLDBUZZERS\";\n    OpCodeID[OpCodeID[\"BAGBUZZERS\"] = 17] = \"BAGBUZZERS\";\n    OpCodeID[OpCodeID[\"PICKBUZZER\"] = 18] = \"PICKBUZZER\";\n    OpCodeID[OpCodeID[\"LEAVEBUZZER\"] = 19] = \"LEAVEBUZZER\";\n    OpCodeID[OpCodeID[\"LOAD\"] = 20] = \"LOAD\";\n    OpCodeID[OpCodeID[\"POP\"] = 21] = \"POP\";\n    OpCodeID[OpCodeID[\"DUP\"] = 22] = \"DUP\";\n    OpCodeID[OpCodeID[\"DEC\"] = 23] = \"DEC\";\n    OpCodeID[OpCodeID[\"INC\"] = 24] = \"INC\";\n    OpCodeID[OpCodeID[\"CALL\"] = 25] = \"CALL\";\n    OpCodeID[OpCodeID[\"RET\"] = 26] = \"RET\";\n    OpCodeID[OpCodeID[\"PARAM\"] = 27] = \"PARAM\";\n    OpCodeID[OpCodeID[\"SRET\"] = 28] = \"SRET\";\n    OpCodeID[OpCodeID[\"LRET\"] = 29] = \"LRET\";\n    OpCodeID[OpCodeID[\"LT\"] = 30] = \"LT\";\n    OpCodeID[OpCodeID[\"LTE\"] = 31] = \"LTE\";\n    OpCodeID[OpCodeID[\"COLUMN\"] = 32] = \"COLUMN\";\n    OpCodeID[OpCodeID[\"ROW\"] = 33] = \"ROW\";\n})(OpCodeID || (OpCodeID = {}));\n/**\n * Converts from String mnemonic to numeric opcode\n * @param literal Opcode Literal\n * @returns The opcode numeric value, or -1 if the literal is not valid\n */\nfunction getOpCodeID(literal) {\n    if (literal in OpCodeID) {\n        return OpCodeID[literal];\n    }\n    return -1;\n}\n\n/**\n * Runtime Errors types\n */\nvar ErrorType;\n(function (ErrorType) {\n    ErrorType[\"INSTRUCTION\"] = \"INSTRUCTION\";\n    ErrorType[\"INSTRUCTION_LEFT\"] = \"INSTRUCTION_LEFT\";\n    ErrorType[\"INSTRUCTION_FORWARD\"] = \"INSTRUCTION_FORWARD\";\n    ErrorType[\"INSTRUCTION_PICKBUZZER\"] = \"INSTRUCTION_PICKBUZZER\";\n    ErrorType[\"INSTRUCTION_LEAVEBUZZER\"] = \"INSTRUCTION_LEAVEBUZZER\";\n    ErrorType[\"STACK\"] = \"STACK\";\n    ErrorType[\"WALL\"] = \"WALL\";\n    ErrorType[\"WORLDUNDERFLOW\"] = \"WORLDUNDERFLOW\";\n    ErrorType[\"WORLDOVERFLOW\"] = \"WORLDOVERFLOW\";\n    ErrorType[\"BAGUNDERFLOW\"] = \"BAGUNDERFLOW\";\n    ErrorType[\"BAGOVERFLOW\"] = \"BAGOVERFLOW\";\n    ErrorType[\"INVALIDOPCODE\"] = \"INVALIDOPCODE\";\n    ErrorType[\"STACKMEMORY\"] = \"STACKMEMORY\";\n    ErrorType[\"CALLSIZE\"] = \"CALLSIZE\";\n    ErrorType[\"INTEGEROVERFLOW\"] = \"INTEGEROVERFLOW\";\n    ErrorType[\"INTEGERUNDERFLOW\"] = \"INTEGERUNDERFLOW\";\n})(ErrorType || (ErrorType = {}));\n/**\n * Runtime error codes\n */\nvar RuntimeErrorCodes;\n(function (RuntimeErrorCodes) {\n    RuntimeErrorCodes[RuntimeErrorCodes[\"WALL\"] = 16] = \"WALL\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"WORLDUNDERFLOW\"] = 17] = \"WORLDUNDERFLOW\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"BAGUNDERFLOW\"] = 18] = \"BAGUNDERFLOW\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"STACK\"] = 19] = \"STACK\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"STACKMEMORY\"] = 20] = \"STACKMEMORY\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"CALLSIZE\"] = 21] = \"CALLSIZE\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"INTEGEROVERFLOW\"] = 22] = \"INTEGEROVERFLOW\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"INTEGERUNDERFLOW\"] = 23] = \"INTEGERUNDERFLOW\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"WORLDOVERFLOW\"] = 24] = \"WORLDOVERFLOW\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"BAGOVERFLOW\"] = 25] = \"BAGOVERFLOW\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"INSTRUCTION\"] = 48] = \"INSTRUCTION\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"INSTRUCTION_LEFT\"] = 49] = \"INSTRUCTION_LEFT\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"INSTRUCTION_FORWARD\"] = 50] = \"INSTRUCTION_FORWARD\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"INSTRUCTION_PICKBUZZER\"] = 51] = \"INSTRUCTION_PICKBUZZER\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"INSTRUCTION_LEAVEBUZZER\"] = 52] = \"INSTRUCTION_LEAVEBUZZER\";\n    RuntimeErrorCodes[RuntimeErrorCodes[\"INVALIDOPCODE\"] = -1] = \"INVALIDOPCODE\";\n})(RuntimeErrorCodes || (RuntimeErrorCodes = {}));\n\n/**\n * A class that holds the state of computation and executes opcodes.\n *\n * The Karel Virtual Machine is a simple, stack-based virtual machine with\n * a small number of opcodes, based loosely on the Java Virtual Machine.\n * All opcodes are represented as an array where the first element is the\n * opcode name, followed by zero, one or two parameters.\n */\nclass Runtime {\n    constructor(world) {\n        this._world = world;\n        this.debug = false;\n        this.disableStackEvents = false;\n        this._eventController = new KarelRuntimeEventTarget();\n        this.load([['HALT']]);\n    }\n    /**\n     * The world that this runtime is linked to this runtime\n     * @readonly\n     */\n    get world() {\n        return this._world;\n    }\n    /**\n     * The current state of the execution. Stores the registers and memory of an execution\n     * @readonly\n    */\n    get state() {\n        return this._state;\n    }\n    /**\n     * Event controller that fires and notifies the listeners of any event\n     * @readonly\n     */\n    get eventController() {\n        return this._eventController;\n    }\n    /**\n     * Loads the runtime with an opcode\n     * @param opcodes The program as given by the compiler\n     */\n    load(opcodes) {\n        let error_mapping = ['WALL', 'WORLDUNDERFLOW', 'BAGUNDERFLOW', 'INSTRUCTION'];\n        this._rawOpcodes = opcodes;\n        let function_map = {};\n        this._functionNames = [];\n        let function_idx = 0;\n        this._program = new Int32Array(new ArrayBuffer(opcodes.length * 3 * 4));\n        for (let i = 0; i < opcodes.length; i++) {\n            const currentOpcode = opcodes[i];\n            this._program[3 * i] = getOpCodeID(currentOpcode[0]);\n            if (currentOpcode.length > 1) {\n                this._program[3 * i + 1] = currentOpcode[1];\n            }\n            if (currentOpcode[0] == \"LINE\") {\n                this._program[3 * i + 2] = currentOpcode[2];\n            }\n            if (currentOpcode[0] == 'CALL') {\n                if (!function_map.hasOwnProperty(currentOpcode[2])) {\n                    function_map[currentOpcode[2]] = function_idx;\n                    this._functionNames[function_idx++] = currentOpcode[2];\n                }\n                this._program[3 * i + 2] = function_map[currentOpcode[2]];\n            }\n            else if (currentOpcode[0] == 'EZ') {\n                this._program[3 * i + 1] = error_mapping.indexOf(currentOpcode[1]);\n                if (this._program[3 * i + 1] == -1) {\n                    throw new Error('Invalid error: ' + currentOpcode[1]);\n                }\n            }\n        }\n        this.reset();\n    }\n    /**\n     * Starts the execution\n     * @private\n     */\n    _start() {\n        this._state.clean = false;\n        this._eventController.fireEvent('start', this, {\n            type: \"start\",\n            target: this,\n            world: this._world\n        });\n    }\n    /**\n     * Resets the state. **Does not** reset the world\n     */\n    reset() {\n        this._state = {\n            pc: 0,\n            sp: -1,\n            fp: -1,\n            line: -1,\n            column: -1,\n            ic: 0,\n            ret: 0,\n            stack: new Int32Array(new ArrayBuffer((0xffff * 16 + 40) * 4)),\n            stackSize: 0,\n            stackMemory: 0,\n            // Instruction counts\n            moveCount: 0,\n            turnLeftCount: 0,\n            pickBuzzerCount: 0,\n            leaveBuzzerCount: 0,\n            // Flags\n            jumped: false,\n            running: true,\n            clean: true\n        };\n        if (this.debug) {\n            this._eventController.fireEvent('debug', this, {\n                type: \"debug\",\n                target: this,\n                message: JSON.stringify(this._rawOpcodes),\n                debugType: 'program',\n            });\n        }\n    }\n    /**\n     * Runs the program until the next Line instruction or until it stops running.\n     * @returns {boolean} true if the code is still running after the step performed\n     */\n    step() {\n        while (this._state.running) {\n            try {\n                if (this._program[3 * this._state.pc] == OpCodeID.LINE) {\n                    this.next();\n                    break;\n                }\n                this.next();\n            }\n            finally {\n                if (!this._state.running) {\n                    this._eventController.fireEvent('stop', this, {\n                        type: \"stop\",\n                        target: this,\n                        world: this._world,\n                    });\n                }\n            }\n        }\n        return this._state.running;\n    }\n    /**\n     * Executes the instruction at the program counter.\n     * * @returns {boolean} true if the code is still running after the instruction executed\n     */\n    next() {\n        if (this._state.clean) {\n            this._start();\n        }\n        if (!this._state.running)\n            return;\n        let world = this._world;\n        if (this._state.ic >= world.maxInstructions) {\n            this._state.running = false;\n            this._state.error = ErrorType.INSTRUCTION;\n            return false;\n        }\n        else if (this._state.stackSize >= this._world.maxStackSize) {\n            this._state.running = false;\n            this._state.error = ErrorType.STACK;\n            return false;\n        }\n        let rot;\n        let di = [0, 1, 0, -1];\n        let dj = [-1, 0, 1, 0];\n        let paramCount, newSP, op1, op2, fname, params, line, fromFName, npc, tmp;\n        try {\n            if (this.debug) {\n                this._eventController.fireEvent('debug', this, {\n                    type: \"debug\",\n                    target: this,\n                    message: JSON.stringify(this._program[3 * this._state.pc] +\n                        ' ' +\n                        this._rawOpcodes[this._state.pc]),\n                    debugType: 'opcode',\n                });\n            }\n            switch (this._program[3 * this._state.pc]) {\n                case OpCodeID.HALT: {\n                    this._state.running = false;\n                    break;\n                }\n                case OpCodeID.LINE: {\n                    this._state.line = this._program[3 * this._state.pc + 1];\n                    this._state.column = this._program[3 * this._state.pc + 2];\n                    break;\n                }\n                case OpCodeID.LEFT: {\n                    this._state.ic++;\n                    this._world.orientation--;\n                    if (this._world.orientation < 0) {\n                        this._world.orientation = 3;\n                    }\n                    this._world.dirty = true;\n                    this._state.turnLeftCount++;\n                    if (this._world.maxTurnLeft >= 0 &&\n                        this._state.turnLeftCount > this._world.maxTurnLeft) {\n                        this._state.running = false;\n                        this._state.error = ErrorType.INSTRUCTION_LEFT;\n                        this._state.errorData = {\n                            type: ErrorType.INSTRUCTION,\n                            instruction: 'LEFT'\n                        };\n                    }\n                    break;\n                }\n                case OpCodeID.WORLDWALLS: {\n                    this._state.stack[++this._state.sp] = world.walls(world.i, world.j);\n                    break;\n                }\n                case OpCodeID.ORIENTATION: {\n                    this._state.stack[++this._state.sp] = world.orientation;\n                    break;\n                }\n                case OpCodeID.ROTL: {\n                    rot = this._state.stack[this._state.sp] - 1;\n                    if (rot < 0) {\n                        rot = 3;\n                    }\n                    this._state.stack[this._state.sp] = rot;\n                    break;\n                }\n                case OpCodeID.ROTR: {\n                    rot = this._state.stack[this._state.sp] + 1;\n                    if (rot > 3) {\n                        rot = 0;\n                    }\n                    this._state.stack[this._state.sp] = rot;\n                    break;\n                }\n                case OpCodeID.MASK: {\n                    this._state.stack[this._state.sp] = 1 << this._state.stack[this._state.sp];\n                    break;\n                }\n                case OpCodeID.NOT: {\n                    this._state.stack[this._state.sp] =\n                        this._state.stack[this._state.sp] === 0 ? 1 : 0;\n                    break;\n                }\n                case OpCodeID.AND: {\n                    op2 = this._state.stack[this._state.sp--];\n                    op1 = this._state.stack[this._state.sp--];\n                    this._state.stack[++this._state.sp] = op1 & op2 ? 1 : 0;\n                    break;\n                }\n                case OpCodeID.OR: {\n                    op2 = this._state.stack[this._state.sp--];\n                    op1 = this._state.stack[this._state.sp--];\n                    this._state.stack[++this._state.sp] = op1 | op2 ? 1 : 0;\n                    break;\n                }\n                case OpCodeID.EQ: {\n                    op2 = this._state.stack[this._state.sp--];\n                    op1 = this._state.stack[this._state.sp--];\n                    if (KarelNumbers.isInfinite(op1)) {\n                        this._state.stack[++this._state.sp] = KarelNumbers.isInfinite(op2) ? 1 : 0;\n                    }\n                    else if (KarelNumbers.isInfinite(op2)) {\n                        this._state.stack[++this._state.sp] = 0;\n                    }\n                    else {\n                        this._state.stack[++this._state.sp] = op1 == op2 ? 1 : 0;\n                    }\n                    break;\n                }\n                case OpCodeID.EZ: {\n                    if (this._state.stack[this._state.sp--] === 0) {\n                        this._state.error = [ErrorType.WALL, ErrorType.WORLDUNDERFLOW, ErrorType.BAGUNDERFLOW][this._program[3 * this._state.pc + 1]];\n                        this._state.running = false;\n                    }\n                    break;\n                }\n                case OpCodeID.JZ: {\n                    this._state.ic++;\n                    if (this._state.stack[this._state.sp--] === 0) {\n                        this._state.pc += this._program[3 * this._state.pc + 1];\n                    }\n                    break;\n                }\n                case OpCodeID.JMP: {\n                    this._state.ic++;\n                    this._state.pc += this._program[3 * this._state.pc + 1];\n                    break;\n                }\n                case OpCodeID.FORWARD: {\n                    this._state.ic++;\n                    this._world.i += di[this._world.orientation];\n                    this._world.j += dj[this._world.orientation];\n                    this._world.dirty = true;\n                    this._state.moveCount++;\n                    if (this._world.maxMove >= 0 &&\n                        this._state.moveCount > this._world.maxMove) {\n                        this._state.running = false;\n                        this._state.error = ErrorType.INSTRUCTION_FORWARD;\n                        this._state.errorData = {\n                            type: ErrorType.INSTRUCTION,\n                            instruction: 'FORWARD'\n                        };\n                    }\n                    break;\n                }\n                case OpCodeID.WORLDBUZZERS: {\n                    this._state.stack[++this._state.sp] = this._world.buzzers(world.i, world.j);\n                    break;\n                }\n                case OpCodeID.BAGBUZZERS: {\n                    this._state.stack[++this._state.sp] = this._world.bagBuzzers;\n                    break;\n                }\n                case OpCodeID.PICKBUZZER: {\n                    this._state.ic++;\n                    tmp = this._world.bagBuzzers;\n                    this._world.pickBuzzer(this._world.i, this._world.j);\n                    if (!KarelNumbers.isInfinite(tmp)) {\n                        if (this._world.bagBuzzers > KarelNumbers.maximum) {\n                            this._state.running = false;\n                            this._state.error = ErrorType.BAGOVERFLOW;\n                        }\n                    }\n                    this._state.pickBuzzerCount++;\n                    if (this._world.maxPickBuzzer >= 0 &&\n                        this._state.pickBuzzerCount > this._world.maxPickBuzzer &&\n                        this._state.running // Gives priority to bag overflow\n                    ) {\n                        this._state.running = false;\n                        this._state.error = ErrorType.INSTRUCTION_PICKBUZZER;\n                        this._state.errorData = {\n                            type: ErrorType.INSTRUCTION,\n                            instruction: 'PICKBUZZER'\n                        };\n                    }\n                    break;\n                }\n                case OpCodeID.LEAVEBUZZER: {\n                    this._state.ic++;\n                    tmp = this._world.buzzers(this._world.i, this._world.j);\n                    this._world.leaveBuzzer(this._world.i, this._world.j);\n                    if (!KarelNumbers.isInfinite(tmp)) {\n                        if (this._world.buzzers(this._world.i, this._world.j) > KarelNumbers.maximum) {\n                            this._state.running = false;\n                            this._state.error = ErrorType.WORLDOVERFLOW;\n                        }\n                    }\n                    this._state.leaveBuzzerCount++;\n                    if (this._world.maxLeaveBuzzer >= 0 &&\n                        this._state.leaveBuzzerCount > this._world.maxLeaveBuzzer &&\n                        this._state.running // If world overflow flag was rised, that takes priority over this error.\n                    ) {\n                        this._state.running = false;\n                        this._state.error = ErrorType.INSTRUCTION_LEAVEBUZZER;\n                        this._state.errorData = {\n                            type: ErrorType.INSTRUCTION,\n                            instruction: 'LEAVEBUZZER'\n                        };\n                    }\n                    break;\n                }\n                case OpCodeID.LOAD: {\n                    this._state.stack[++this._state.sp] = this._program[3 * this._state.pc + 1];\n                    break;\n                }\n                case OpCodeID.POP: {\n                    this._state.sp--;\n                    break;\n                }\n                case OpCodeID.DUP: {\n                    this._state.stack[++this._state.sp] = this._state.stack[this._state.sp - 1];\n                    break;\n                }\n                case OpCodeID.DEC: {\n                    if (!KarelNumbers.isInfinite(this._state.stack[this._state.sp])) {\n                        this._state.stack[this._state.sp] -= this._program[3 * this._state.pc + 1];\n                        this.validateNumber(this._state.stack[this._state.sp]);\n                    }\n                    break;\n                }\n                case OpCodeID.INC: {\n                    if (!KarelNumbers.isInfinite(this._state.stack[this._state.sp])) {\n                        this._state.stack[this._state.sp] += this._program[3 * this._state.pc + 1];\n                        this.validateNumber(this._state.stack[this._state.sp]);\n                    }\n                    break;\n                }\n                case OpCodeID.CALL: {\n                    this._state.ic++;\n                    // sp, pc, param\n                    paramCount = this._state.stack[this._state.sp--];\n                    newSP = this._state.sp - paramCount;\n                    fname = this._functionNames[this._program[3 * this._state.pc + 2]];\n                    this._state.stack[++this._state.sp] = this._state.fp;\n                    this._state.stack[++this._state.sp] = newSP;\n                    this._state.stack[++this._state.sp] = this._state.pc;\n                    this._state.stack[++this._state.sp] = paramCount;\n                    this._state.fp = newSP + 1 + paramCount;\n                    this._state.pc = this._program[3 * this._state.pc + 1];\n                    this._state.jumped = true;\n                    this._state.stackSize++;\n                    this._state.stackMemory += Math.max(1, paramCount);\n                    if (this._state.stackSize >= this._world.maxStackSize) {\n                        this._state.running = false;\n                        this._state.error = ErrorType.STACK;\n                    }\n                    else if (this._state.stackMemory >= this._world.maxStackMemory) {\n                        this._state.running = false;\n                        this._state.error = ErrorType.STACKMEMORY;\n                    }\n                    else if (paramCount > this._world.maxCallSize) {\n                        this._state.running = false;\n                        this._state.error = ErrorType.CALLSIZE;\n                    }\n                    else if (!this.disableStackEvents) {\n                        this._eventController.fireEvent('call', this, {\n                            type: \"call\",\n                            function: fname,\n                            params: this._state.stack.subarray(this._state.fp - paramCount, this._state.fp),\n                            line: this._state.line,\n                            target: this,\n                        });\n                    }\n                    break;\n                }\n                case OpCodeID.RET: {\n                    if (this._state.fp < 0) {\n                        this._state.running = false;\n                        break;\n                    }\n                    paramCount = this._state.stack[this._state.fp + 3];\n                    this._state.pc = this._state.stack[this._state.fp + 2];\n                    this._state.sp = this._state.stack[this._state.fp + 1];\n                    this._state.fp = this._state.stack[this._state.fp];\n                    this._state.stackSize--;\n                    this._state.stackMemory -= Math.max(1, paramCount);\n                    ;\n                    if (!this.disableStackEvents) {\n                        params = this._state.stack.subarray(0, 0);\n                        fromFName = this._functionNames[this._program[3 * this._state.pc + 2]];\n                        fname = \"N/A\";\n                        line = -2;\n                        if (this._state.stackSize >= 1) {\n                            npc = this._state.stack[this._state.fp + 2]; //Get the function name from the function that called me\n                            fname = this._functionNames[this._program[3 * npc + 2]];\n                            line = this._program[3 * (npc + 1) + 1]; //Get line. A call always is LINE -> LOAD PARAM -> CALL -> LINE\n                            paramCount = this._state.stack[this._state.fp + 3];\n                            params = this._state.stack.subarray(this._state.fp - paramCount, this._state.fp);\n                        }\n                        this._eventController.fireEvent('return', this, {\n                            type: \"return\",\n                            target: this,\n                            params: params,\n                            function: fname,\n                            fromFunction: fromFName,\n                            line: line,\n                            returnValue: this._state.ret\n                        });\n                    }\n                    break;\n                }\n                case OpCodeID.PARAM: {\n                    this._state.stack[++this._state.sp] =\n                        this._state.stack[this._state.fp - 1 - this._program[3 * this._state.pc + 1]];\n                    break;\n                }\n                case OpCodeID.SRET: {\n                    this._state.ret = this._state.stack[this._state.sp--];\n                    break;\n                }\n                case OpCodeID.LRET: {\n                    this._state.stack[++this._state.sp] = this._state.ret;\n                    break;\n                }\n                case OpCodeID.LT: {\n                    op2 = this._state.stack[this._state.sp--];\n                    op1 = this._state.stack[this._state.sp--];\n                    if (KarelNumbers.isInfinite(op1)) {\n                        this._state.stack[++this._state.sp] = 0;\n                    }\n                    else if (KarelNumbers.isInfinite(op2)) {\n                        this._state.stack[++this._state.sp] = 1;\n                    }\n                    else {\n                        this._state.stack[++this._state.sp] = op1 < op2 ? 1 : 0;\n                    }\n                    break;\n                }\n                case OpCodeID.LTE: {\n                    op2 = this._state.stack[this._state.sp--];\n                    op1 = this._state.stack[this._state.sp--];\n                    if (KarelNumbers.isInfinite(op1)) {\n                        this._state.stack[++this._state.sp] = KarelNumbers.isInfinite(op2) ? 1 : 0;\n                    }\n                    else if (KarelNumbers.isInfinite(op2)) {\n                        this._state.stack[++this._state.sp] = 1;\n                    }\n                    else {\n                        this._state.stack[++this._state.sp] = op1 <= op2 ? 1 : 0;\n                    }\n                    break;\n                }\n                case OpCodeID.ROW:\n                    this._state.stack[++this._state.sp] = this._world.i;\n                    break;\n                case OpCodeID.COLUMN:\n                    this._state.stack[++this._state.sp] = this._world.j;\n                    break;\n                default: {\n                    this._state.running = false;\n                    if (this.debug) {\n                        this._eventController.fireEvent('debug', this, {\n                            type: \"debug\",\n                            target: this,\n                            message: 'Missing opcode ' + this._rawOpcodes[this._state.pc][0],\n                            debugType: 'opcode',\n                        });\n                    }\n                    this._state.error = ErrorType.INVALIDOPCODE;\n                    this._state.errorData = {\n                        type: ErrorType.INSTRUCTION,\n                        instruction: OpCodeID[this._program[this._state.pc * 3]]\n                    };\n                    return false;\n                }\n            }\n            if (this._state.jumped) {\n                this._state.jumped = false;\n            }\n            else {\n                this._state.pc++;\n            }\n            if (this.debug) {\n                let copy = {\n                    pc: this._state.pc,\n                    stackSize: this._state.stackSize,\n                    expressionStack: Array.from(this._state.stack.slice(this._state.fp + 4, this._state.sp + 1)),\n                    line: this._state.line,\n                    ic: this._state.ic,\n                    running: this._state.running,\n                };\n                this._eventController.fireEvent('debug', this, {\n                    type: \"debug\",\n                    target: this,\n                    message: JSON.stringify(copy),\n                    debugType: 'state',\n                });\n            }\n        }\n        catch (e) {\n            this._state.running = false;\n            console.error(e);\n            console.log(e.stack);\n            throw e;\n        }\n        return true;\n    }\n    /**\n     * Validates a number and if it is over the top it stops the runtime and rises the related error\n     * @param number Number to validate\n     * @returns\n     */\n    validateNumber(number) {\n        if (number < KarelNumbers.minimum) {\n            this._state.running = false;\n            this._state.error = ErrorType.INTEGERUNDERFLOW;\n            return;\n        }\n        if (number > KarelNumbers.maximum) {\n            this._state.running = false;\n            this._state.error = ErrorType.INTEGEROVERFLOW;\n            return;\n        }\n    }\n}\n\n/**\n * Dump flags, they change what is emitted to the output of an world\n */\nvar DumpTypes;\n(function (DumpTypes) {\n    DumpTypes[\"DUMP_WORLD\"] = \"mundo\";\n    DumpTypes[\"DUMP_POSITION\"] = \"posicion\";\n    DumpTypes[\"DUMP_ORIENTATION\"] = \"orientacion\";\n    DumpTypes[\"DUMP_INSTRUCTIONS\"] = \"instrucciones\";\n    DumpTypes[\"DUMP_ALL_BUZZERS\"] = \"universo\";\n    DumpTypes[\"DUMP_BAG\"] = \"mochila\";\n    DumpTypes[\"DUMP_MOVE\"] = \"avanza\";\n    DumpTypes[\"DUMP_LEFT\"] = \"gira_izquierda\";\n    DumpTypes[\"DUMP_PICK_BUZZER\"] = \"coge_zumbador\";\n    DumpTypes[\"DUMP_LEAVE_BUZZER\"] = \"deja_zumbador\";\n})(DumpTypes || (DumpTypes = {}));\n/**\n * Maps errors to their output message\n */\nvar ERROR_MAPPING;\n(function (ERROR_MAPPING) {\n    ERROR_MAPPING[\"BAGUNDERFLOW\"] = \"ZUMBADOR INVALIDO MOCHILA\";\n    ERROR_MAPPING[\"BAGOVERFLOW\"] = \"DEMASIADOS ZUMBADORES (MOCHILA)\";\n    ERROR_MAPPING[\"WALL\"] = \"MOVIMIENTO INVALIDO\";\n    ERROR_MAPPING[\"WORLDUNDERFLOW\"] = \"ZUMBADOR INVALIDO MUNDO\";\n    ERROR_MAPPING[\"WORLDOVERFLOW\"] = \"DEMASIADOS ZUMBADORES (MUNDO)\";\n    ERROR_MAPPING[\"STACK\"] = \"STACK OVERFLOW\";\n    ERROR_MAPPING[\"INTEGEROVERFLOW\"] = \"INTEGER OVERFLOW\";\n    ERROR_MAPPING[\"INTEGERUNDERFLOW\"] = \"INTEGER UNDERFLOW\";\n    ERROR_MAPPING[\"INSTRUCTION\"] = \"LIMITE DE INSTRUCCIONES GENERAL\";\n    ERROR_MAPPING[\"INSTRUCTION_LEFT\"] = \"LIMITE DE INSTRUCCIONES IZQUIERDA\";\n    ERROR_MAPPING[\"INSTRUCTION_FORWARD\"] = \"LIMITE DE INSTRUCCIONES AVANZA\";\n    ERROR_MAPPING[\"INSTRUCTION_PICKBUZZER\"] = \"LIMITE DE INSTRUCCIONES COGE_ZUMBADOR\";\n    ERROR_MAPPING[\"INSTRUCTION_LEAVEBUZZER\"] = \"LIMITE DE INSTRUCCIONES DEJA_ZUMBADOR\";\n    ERROR_MAPPING[\"STACKMEMORY\"] = \"LIMITE DE MEMORIA DEL STACK\";\n    ERROR_MAPPING[\"CALLSIZE\"] = \"LIMITE DE LONGITUD DE LLAMADA\";\n})(ERROR_MAPPING || (ERROR_MAPPING = {}));\n/**\n * Represents a Karel World, it keeps track of both the starting state and the current state\n * Contains information such as beepers, walls, Karel position, etc.\n */\nclass World {\n    constructor(w, h) {\n        this.init(w, h);\n    }\n    /**\n     *  Height of the world\n     * @readonly\n     */\n    get h() {\n        return this._h;\n    }\n    /**\n     *  Width of the world\n     * @readonly\n     */\n    get w() {\n        return this._w;\n    }\n    /**\n     * Runtime linked to this world\n     * @readonly\n     */\n    get runtime() {\n        return this._runtime;\n    }\n    /**\n     * Maximum number of instructions that a program can execute.\n     * @throws {Error} If modified once the runtime has stepped, consider resetting the runtime.\n     */\n    get maxInstructions() {\n        return this._maxInstructions;\n    }\n    set maxInstructions(value) {\n        if (!this._runtime.state.clean) {\n            throw new Error(\"Cannot modify maxInstructions once the runtime has stepped, consider resetting the runtime\");\n        }\n        this._maxInstructions = value;\n    }\n    /**\n     * Maximum number of moves that a program can execute.\n     * @throws {Error} If modified once the runtime has stepped, consider resetting the runtime.\n     */\n    get maxMove() {\n        return this._maxMove;\n    }\n    set maxMove(value) {\n        if (!this._runtime.state.clean) {\n            throw new Error(\"Cannot modify maxMove once the runtime has stepped, consider resetting the runtime\");\n        }\n        this._maxMove = value;\n    }\n    /**\n     * Maximum number of turn left that a program can execute.\n     * @throws {Error} If modified once the runtime has stepped, consider resetting the runtime.\n     */\n    get maxTurnLeft() {\n        return this._maxTurnLeft;\n    }\n    set maxTurnLeft(value) {\n        if (!this._runtime.state.clean) {\n            throw new Error(\"Cannot modify maxTurnLeft once the runtime has stepped, consider resetting the runtime\");\n        }\n        this._maxTurnLeft = value;\n    }\n    /**\n     * Maximum number of pick buzzer that a program can execute.\n     * @throws {Error} If modified once the runtime has stepped, consider resetting the runtime.\n     */\n    get maxPickBuzzer() {\n        return this._maxPickBuzzer;\n    }\n    set maxPickBuzzer(value) {\n        if (!this._runtime.state.clean) {\n            throw new Error(\"Cannot modify maxPickBuzzer once the runtime has stepped, consider resetting the runtime\");\n        }\n        this._maxPickBuzzer = value;\n    }\n    /**\n     * Maximum number of leave buzzer that a program can execute.\n     * @throws {Error} If modified once the runtime has stepped, consider resetting the runtime.\n     */\n    get maxLeaveBuzzer() {\n        return this._maxLeaveBuzzer;\n    }\n    set maxLeaveBuzzer(value) {\n        if (!this._runtime.state.clean) {\n            throw new Error(\"Cannot modify maxLeaveBuzzer once the runtime has stepped, consider resetting the runtime\");\n        }\n        this._maxLeaveBuzzer = value;\n    }\n    /**\n     *  Maximum number of functions allowed to be simultaneously in the stack\n     * @throws {Error} If modified once the runtime has stepped, consider resetting the runtime.\n     */\n    get maxStackSize() {\n        return this._maxStackSize;\n    }\n    set maxStackSize(value) {\n        if (!this._runtime.state.clean) {\n            throw new Error(\"Cannot modify maxStackSize once the runtime has stepped, consider resetting the runtime\");\n        }\n        this._maxStackSize = value;\n    }\n    /**\n     * Maximum stack memory. A call consumes max(1, number of parameters) memory\n     * @throws {Error} If modified once the runtime has stepped, consider resetting the runtime.\n     */\n    get maxStackMemory() {\n        return this._maxStackMemory;\n    }\n    set maxStackMemory(value) {\n        if (!this._runtime.state.clean) {\n            throw new Error(\"Cannot modify maxStackMemory once the runtime has stepped, consider resetting the runtime\");\n        }\n        this._maxStackMemory = value;\n    }\n    /**\n     * Maximum number of parameters a call can have\n     * @throws {Error} If modified once the runtime has stepped, consider resetting the runtime.\n     */\n    get maxCallSize() {\n        return this._maxCallSize;\n    }\n    set maxCallSize(value) {\n        if (!this._runtime.state.clean) {\n            throw new Error(\"Cannot modify maxCallSize once the runtime has stepped, consider resetting the runtime\");\n        }\n        this._maxCallSize = value;\n    }\n    /**\n     * Starts all internal variables\n     * @param w width of the world\n     * @param h height of the world\n     */\n    init(w, h) {\n        this._w = w;\n        this._h = h;\n        this._runtime = new Runtime(this);\n        this._createMaps();\n        this.clear();\n    }\n    /**\n     * Creates and reserves the memory for the arrays\n     * @private\n     */\n    _createMaps() {\n        if (ArrayBuffer) {\n            let len = (this._w + 2) * (this._h + 2);\n            this._map = new Int32Array(new ArrayBuffer(len * 4));\n            this._currentMap = new Int32Array(new ArrayBuffer(len * 4));\n            this._wallMap = new Uint8Array(new ArrayBuffer(len));\n        }\n        else {\n            this._map = [];\n            this._currentMap = [];\n            this._wallMap = [];\n            for (let i = 0; i <= this._h; i++) {\n                for (let j = 0; j <= this._w; j++) {\n                    this._map.push(0);\n                    this._currentMap.push(0);\n                    this._wallMap.push(0);\n                }\n            }\n        }\n    }\n    /**\n     * Changes the size of the world\n     * @param w New width\n     * @param h New Height\n     */\n    resize(w, h) {\n        // Eliminamos las paredes del borde\n        for (let i = 1; i <= this._h; i++) {\n            this._wallMap[this._w * i + 1] &= ~(1 << 0);\n            this._wallMap[this._w * (i + 1)] &= ~(1 << 2);\n        }\n        for (let j = 1; j <= this._w; j++) {\n            this._wallMap[this._w * this._h + j] &= ~(1 << 1);\n            this._wallMap[this._w + j] &= ~(1 << 3);\n        }\n        let oldW = this._w;\n        let oldH = this._h;\n        let oldMap = this._map;\n        //   let oldCurrentMap = this.oldCurrentMap;\n        let oldWallMap = this._wallMap;\n        let oldDumpCells = this._dumpCells;\n        this._w = w;\n        this._h = h;\n        this._createMaps();\n        this.addBorderWalls();\n        // Copiamos todas las paredes y zumbadores\n        for (let i = 1; i <= oldH; i++) {\n            for (let j = 1; j <= oldW; j++) {\n                this.setCellWalls(i, j, oldWallMap[oldW * i + j]);\n                this.setBuzzers(i, j, oldMap[oldW * i + j]);\n            }\n        }\n        // Vaciamos dumpCells y la llenamos de nuevo\n        this._dumpCells = new Set();\n        let di = 0, dj = 0;\n        for (const oldDump of oldDumpCells) {\n            di = Math.floor(oldDump / (oldW + 1));\n            dj = oldDump % (oldW + 1);\n            if (di <= this._h && dj <= this._w) {\n                this.setDumpCell(di, dj, true);\n            }\n        }\n        // Checamos si karel sigue dentro del mundo\n        if (this.start_i > this._h)\n            this.start_i = this.i = this._h;\n        if (this.start_j > this._w)\n            this.start_j = this.j = this._w;\n        this.dirty = true;\n    }\n    /**\n     * Sets all values to their default.\n     */\n    clear() {\n        for (let i = 0; i < this._wallMap.length; i++) {\n            this._wallMap[i] = 0;\n        }\n        for (let i = 0; i < this._map.length; i++) {\n            this._map[i] = this._currentMap[i] = 0;\n        }\n        this.addBorderWalls();\n        this.orientation = 1;\n        this.startOrientation = 1;\n        this.start_i = 1;\n        this.i = 1;\n        this.start_j = 1;\n        this.j = 1;\n        this.startBagBuzzers = 0;\n        this.bagBuzzers = 0;\n        this._dumps = {};\n        this._dumpCells = new Set();\n        this._maxInstructions = 10000000;\n        this._maxMove = -1;\n        this._maxTurnLeft = -1;\n        this._maxPickBuzzer = -1;\n        this._maxLeaveBuzzer = -1;\n        this._maxStackSize = 65000;\n        this._maxStackMemory = 65000;\n        this._maxCallSize = 5;\n        this.worldName = 'mundo_0';\n        this.programName = 'p1';\n        this.targetVersion = \"1.1\";\n        this.dirty = true;\n    }\n    /**\n     * Returns the wall mask at a location\n     * @param i row\n     * @param j column\n     * @returns Wall Mask\n     */\n    walls(i, j) {\n        if (0 > i || i > this._h || 0 > j || j > this._w)\n            return 0;\n        return this._wallMap[this._w * i + j];\n    }\n    /**\n     * Sets the current walls at the current position\n     *\n     * Does not set modifies the neighboring cells, so it allows \"one way\" walls.\n     *\n     * It cannot destroy border walls\n     *\n     * @param i Row\n     * @param j Column\n     * @param wallMask Value of the mask\n     */\n    setWallMask(i, j, wallMask) {\n        let newMask = wallMask;\n        if (wallMask < 0 ||\n            wallMask >= 16 ||\n            1 > i ||\n            i > this.h ||\n            1 > j ||\n            j > this.w) {\n            return;\n        }\n        //This ifs avoid removing outer world walls\n        if (j == 1)\n            newMask |= 1 << 0;\n        if (i == 1)\n            newMask |= 1 << 3;\n        if (i == this.h)\n            newMask |= 1 << 1;\n        if (j == this.w)\n            newMask |= 1 << 2;\n        this._wallMap[this.w * i + j] = newMask;\n    }\n    /**\n     * Toggles a wall in the specified orientation. It keeps the border walls and toggles the corresponding neighbor wall\n     *\n     * @param i row\n     * @param j column\n     * @param orientation number, they're [west, north, east, south]\n     */\n    toggleWall(i, j, orientation) {\n        if ((j == 1 && orientation === 0) ||\n            (i == 1 && orientation == 3) ||\n            (i == this._h && orientation == 1) ||\n            (j == this._w && orientation == 2)) {\n            return;\n        }\n        if (orientation < 0 ||\n            orientation >= 4 ||\n            1 > i ||\n            i > this._h ||\n            1 > j ||\n            j > this._w) {\n            return;\n        }\n        this._wallMap[this._w * i + j] ^= 1 << orientation;\n        // Needed to prevent Karel from traversing walls from one direction, but not\n        // from the other side.\n        if (orientation === 0 && j > 1) {\n            this._wallMap[this._w * i + (j - 1)] ^= 1 << 2;\n        }\n        else if (orientation === 1 && i < this._h) {\n            this._wallMap[this._w * (i + 1) + j] ^= 1 << 3;\n        }\n        else if (orientation === 2 && j < this._w) {\n            this._wallMap[this._w * i + (j + 1)] ^= 1 << 0;\n        }\n        else if (orientation === 3 && i > 1) {\n            this._wallMap[this._w * (i - 1) + j] ^= 1 << 1;\n        }\n        this.dirty = true;\n    }\n    /**\n     * Adds the border walls\n     */\n    addBorderWalls() {\n        for (let i = 1; i <= this._h; i++) {\n            this.addWall(i, 1, 0);\n            this.addWall(i, this._w, 2);\n        }\n        for (let j = 1; j <= this._w; j++) {\n            this.addWall(this._h, j, 1);\n            this.addWall(1, j, 3);\n        }\n    }\n    /**\n     * Adds the walls set in the wellMask to the specified cell and the corresponding neighbor's wall.\n     * @param i row\n     * @param j column\n     * @param wallMask Walls (lsb to msb is West, North, East, South)\n     */\n    setCellWalls(i, j, wallMask) {\n        for (let pos = 0; pos < 4; pos++) {\n            if (wallMask & (1 << pos))\n                this.addWall(i, j, pos);\n        }\n    }\n    /**\n     * Adds a wall in to the specified cell and the corresponding neighbor's wall\n     * @param i row\n     * @param j column\n     * @param orientation Wall number (0-West, 1-North, 2-East, 3-South)\n     */\n    addWall(i, j, orientation) {\n        if (orientation < 0 ||\n            orientation >= 4 ||\n            1 > i ||\n            i > this._h ||\n            1 > j ||\n            j > this._w)\n            return;\n        this._wallMap[this._w * i + j] |= 1 << orientation;\n        // Needed to prevent Karel from traversing walls from one direction, but not\n        // from the other side.\n        if (orientation === 0 && j > 1)\n            this._wallMap[this._w * i + (j - 1)] |= 1 << 2;\n        else if (orientation === 1 && i < this._h)\n            this._wallMap[this._w * (i + 1) + j] |= 1 << 3;\n        else if (orientation === 2 && j < this._w)\n            this._wallMap[this._w * i + (j + 1)] |= 1 << 0;\n        else if (orientation === 3 && i > 1)\n            this._wallMap[this._w * (i - 1) + j] |= 1 << 1;\n        this.dirty = true;\n    }\n    /**\n     * Set the amount of buzzers in a cell in both the **start** and **current** state\n     * @param i row\n     * @param j column\n     * @param count Number of beepers\n     */\n    setBuzzers(i, j, count) {\n        if (0 >= i || i > this._h || 0 >= j || j > this._w)\n            return;\n        this._map[this._w * i + j] =\n            this._currentMap[this._w * i + j] =\n                count > KarelNumbers.maximum ? KarelNumbers.a_infinite : count;\n        this.dirty = true;\n    }\n    /**\n     * Gets the amount of buzzers at a cell in the **current** state\n     * @param i cell row\n     * @param j cell column\n     * @returns beeper amount\n     */\n    buzzers(i, j) {\n        if (0 >= i || i > this._h || 0 >= j || j > this._w)\n            return 0;\n        return this._currentMap[this._w * i + j];\n    }\n    /**\n     * Gets the amount of buzzers at a cell in the **starting** state\n     * @param i cell row\n     * @param j cell column\n     * @returns beeper amount\n     */\n    startBuzzers(i, j) {\n        if (0 >= i || i > this._h || 0 >= j || j > this._w)\n            return 0;\n        return this._map[this._w * i + j];\n    }\n    /**\n     * Reduces in one the **current** cell and increases in one the **current** beeperBag. Respects infinite cells and bag.\n     * @param i cell\n     * @param j row\n     */\n    pickBuzzer(i, j) {\n        if (0 >= i || i > this._h || 0 >= j || j > this._w)\n            return;\n        if (!KarelNumbers.isInfinite(this._currentMap[this._w * i + j])) {\n            this._currentMap[this._w * i + j]--;\n        }\n        if (!KarelNumbers.isInfinite(this.bagBuzzers)) {\n            this.bagBuzzers++;\n        }\n        this.dirty = true;\n    }\n    /**\n     * Increases in one the **current** cell and reduces  in one the **current** beeperBag. Respects infinite cells and bag\n     * @param i cell\n     * @param j row\n     */\n    leaveBuzzer(i, j) {\n        if (0 >= i || i > this._h || 0 >= j || j > this._w)\n            return;\n        if (!KarelNumbers.isInfinite(this._currentMap[this._w * i + j])) {\n            this._currentMap[this._w * i + j]++;\n        }\n        if (!KarelNumbers.isInfinite(this.bagBuzzers)) {\n            this.bagBuzzers--;\n        }\n        this.dirty = true;\n    }\n    /**\n     * Adds or removes a cell to the dump list\n     * @param i row\n     * @param j column\n     * @param dumpState True if it should be added, false if not\n     */\n    setDumpCell(i, j, dumpState) {\n        if (0 >= i || i > this._h || 0 >= j || j > this._w)\n            return;\n        let pos = i * (this._w + 1) + j;\n        if (dumpState) {\n            this._dumpCells.add(pos);\n        }\n        else {\n            this._dumpCells.delete(pos);\n        }\n        this._dumps[DumpTypes.DUMP_WORLD] = this._dumpCells.size !== 0;\n    }\n    /**\n     * Alternates a cell if it is dumped or not\n     * @param i row\n     * @param j column\n     */\n    toggleDumpCell(i, j) {\n        if (0 >= i || i > this._h || 0 >= j || j > this._w)\n            return;\n        let pos = i * (this._w + 1) + j;\n        if (this._dumpCells.has(pos)) {\n            this._dumpCells.delete(pos);\n        }\n        else {\n            this._dumpCells.add(pos);\n        }\n        this._dumps[DumpTypes.DUMP_WORLD] = this._dumpCells.size !== 0;\n    }\n    /**\n     * Returns if a cell is in the dumped list\n     * @param i row\n     * @param j column\n     */\n    getDumpCell(i, j) {\n        if (i <= 0 || j <= 0 || i > this._h || j > this._w) {\n            return false;\n        }\n        let dumpPos = i * (this._w + 1) + j;\n        return this._dumpCells.has(dumpPos);\n    }\n    /**\n     * Returns the number of cell explicitly dumped\n     * @returns The number of cells dumped\n     */\n    getDumpCellCount() {\n        return this._dumpCells.size;\n    }\n    /**\n     * Returns if a dump flag is set or not\n     * @param dumpFlag Flag to get\n     */\n    getDumps(dumpFlag) {\n        return this._dumps.hasOwnProperty(dumpFlag.toLowerCase()) && this._dumps[dumpFlag];\n    }\n    /**\n     * Sets or disables a dump flag\n     * @param dumpFlag Flag to set\n     * @param flagValue True if it dumps, false if not\n     */\n    setDumps(dumpFlag, flagValue) {\n        this._dumps[dumpFlag] = flagValue;\n    }\n    /**\n     * Toggles a dump flag\n     * @param dumpFlag Flag to toggle\n     */\n    toggleDumps(dumpFlag) {\n        this.setDumps(dumpFlag, !this.getDumps(dumpFlag));\n    }\n    /**\n     * Loads a world data into the this object\n     * @param doc XML document that represents the world\n     */\n    load(doc) {\n        const self = this;\n        self.clear();\n        let rules = {\n            ejecucion: function (ejecucion) {\n                let version = ejecucion.getAttribute('version');\n                if (version == null) {\n                    version = \"1.0\";\n                }\n                self.targetVersion = version;\n            },\n            mundo: function (mundo) {\n                let alto = mundo.getAttribute('alto');\n                let ancho = mundo.getAttribute('ancho');\n                if (!alto || !ancho) {\n                    return;\n                }\n                alto = parseInt(alto, 10);\n                ancho = parseInt(ancho, 10);\n                if (!alto || !ancho) {\n                    return;\n                }\n                self.resize(ancho, alto);\n            },\n            condiciones: function (condiciones) {\n                self._maxInstructions =\n                    parseInt(condiciones.getAttribute('instruccionesMaximasAEjecutar'), 10) || 10000000;\n                self._maxStackSize =\n                    parseInt(condiciones.getAttribute('longitudStack'), 10) || 65000;\n                self._maxStackMemory =\n                    parseInt(condiciones.getAttribute('memoriaStack'), 10) || 65000;\n                self._maxCallSize =\n                    parseInt(condiciones.getAttribute('llamadaMaxima'), 10) || 5;\n            },\n            comando: function (comando) {\n                let name = comando.getAttribute('nombre');\n                let val = parseInt(comando.getAttribute('maximoNumeroDeEjecuciones'), 10);\n                if (!name || !val) {\n                    return;\n                }\n                if (name == 'AVANZA') {\n                    self._maxMove = val;\n                }\n                else if (name == 'GIRA_IZQUIERDA') {\n                    self._maxTurnLeft = val;\n                }\n                else if (name == 'COGE_ZUMBADOR') {\n                    self._maxPickBuzzer = val;\n                }\n                else if (name == 'DEJA_ZUMBADOR') {\n                    self._maxLeaveBuzzer = val;\n                }\n            },\n            monton: function (monton) {\n                let i = parseInt(monton.getAttribute('y'), 10);\n                let j = parseInt(monton.getAttribute('x'), 10);\n                let zumbadores = monton.getAttribute('zumbadores');\n                if (zumbadores == 'INFINITO') {\n                    zumbadores = KarelNumbers.a_infinite;\n                }\n                else {\n                    zumbadores = parseInt(zumbadores, 10);\n                    if (isNaN(zumbadores))\n                        zumbadores = 0;\n                }\n                self.setBuzzers(i, j, zumbadores);\n            },\n            pared: function (pared) {\n                let i = parseInt(pared.getAttribute('y1'), 10) + 1;\n                let j = parseInt(pared.getAttribute('x1'), 10) + 1;\n                if (pared.getAttribute('x2')) {\n                    let j2 = parseInt(pared.getAttribute('x2'), 10) + 1;\n                    if (j2 > j) {\n                        self.addWall(i, j, 3);\n                    }\n                    else {\n                        self.addWall(i, j2, 3);\n                    }\n                }\n                else if (pared.getAttribute('y2')) {\n                    let i2 = parseInt(pared.getAttribute('y2'), 10) + 1;\n                    if (i2 > i) {\n                        self.addWall(i, j, 0);\n                    }\n                    else {\n                        self.addWall(i2, j, 0);\n                    }\n                }\n            },\n            despliega: function (despliega) {\n                self._dumps[despliega.getAttribute('tipo').toLowerCase()] = true;\n            },\n            posicionDump: function (dump) {\n                let i = parseInt(dump.getAttribute('y'), 10);\n                let j = parseInt(dump.getAttribute('x'), 10);\n                if (i <= 0 || j <= 0 || i > self._h || j > self._w) {\n                    return;\n                }\n                self._dumpCells.add(i * (self._w + 1) + j);\n            },\n            programa: function (programa) {\n                let xKarel = parseInt(programa.getAttribute('xKarel') || programa.getAttribute('xkarel'), 10);\n                let yKarel = parseInt(programa.getAttribute('yKarel') || programa.getAttribute('ykarel'), 10);\n                self.rotate(programa.getAttribute('direccionKarel') ||\n                    programa.getAttribute('direccionkarel'));\n                self.worldName =\n                    programa.getAttribute('mundoDeEjecucion') ||\n                        programa.getAttribute('mundodeejecucion');\n                self.programName = programa.getAttribute('nombre');\n                self.move(yKarel, xKarel);\n                let bagBuzzers = programa.getAttribute('mochilaKarel') ||\n                    programa.getAttribute('mochilakarel') ||\n                    0;\n                if (bagBuzzers == 'INFINITO') {\n                    self.setBagBuzzers(KarelNumbers.a_infinite);\n                }\n                else {\n                    self.setBagBuzzers(parseInt(bagBuzzers));\n                }\n            },\n        };\n        function traverse(node) {\n            let type = node.nodeName;\n            if (rules.hasOwnProperty(type)) {\n                rules[type](node);\n            }\n            for (let i = 0; i < node.childNodes.length; i++) {\n                if (node.childNodes.item(i).nodeType ===\n                    (node.ELEMENT_NODE || Node.ELEMENT_NODE)) {\n                    traverse(node.childNodes.item(i));\n                }\n            }\n        }\n        traverse(doc);\n        self.reset();\n    }\n    /**\n     * Recursively converts a js object into an XML string\n     * @param node A Object node/value\n     * @param name The object name\n     * @param indentation THe indentation for the xml\n     * @returns A XML string\n     */\n    serialize(node, name, indentation) {\n        let result = '';\n        for (let i = 0; i < indentation; i++) {\n            result += '\\t';\n        }\n        if (typeof node === 'string' || typeof node === 'number') {\n            return result + node;\n        }\n        if (Array.isArray(node)) {\n            result = '';\n            for (let i = 0; i < node.length; i++) {\n                result += this.serialize(node[i], name, indentation);\n            }\n        }\n        else {\n            let childResult = '';\n            for (let p in node) {\n                if (node.hasOwnProperty(p)) {\n                    if (p[0] == '#') {\n                        continue;\n                    }\n                    else {\n                        childResult += this.serialize(node[p], p, indentation + 1);\n                    }\n                }\n            }\n            result += '<' + name;\n            if (node.hasOwnProperty('#attributes')) {\n                for (let p in node['#attributes']) {\n                    if (node['#attributes'].hasOwnProperty(p)) {\n                        result += ' ' + p + '=\"' + node['#attributes'][p] + '\"';\n                    }\n                }\n            }\n            if (node.hasOwnProperty('#text')) {\n                result += '>' + node['#text'] + '</' + name + '>\\n';\n            }\n            else if (childResult == '') {\n                result += '/>\\n';\n            }\n            else {\n                result += '>\\n';\n                result += childResult;\n                for (let i = 0; i < indentation; i++) {\n                    result += '\\t';\n                }\n                result += '</' + name + '>\\n';\n            }\n        }\n        return result;\n    }\n    /**\n     * Generates the XML representation of the input\n     * @param targetState if \"current\", it saves the current state. If \"start\" it saves the start state\n     * @returns XML string representing the input\n     */\n    save(targetState) {\n        let result = {\n            '#attributes': {\n                version: this.targetVersion\n            },\n            condiciones: {\n                '#attributes': {\n                    instruccionesMaximasAEjecutar: this._maxInstructions,\n                    longitudStack: this._maxStackSize,\n                    memoriaStack: this._maxStackMemory,\n                    llamadaMaxima: this._maxCallSize,\n                },\n                comando: []\n            },\n            mundos: {\n                mundo: {\n                    '#attributes': { nombre: this.worldName, ancho: this._w, alto: this._h },\n                    monton: [],\n                    pared: [],\n                    posicionDump: [],\n                },\n            },\n            programas: {\n                '#attributes': {\n                    tipoEjecucion: 'CONTINUA',\n                    intruccionesCambioContexto: 1,\n                    milisegundosParaPasoAutomatico: 0,\n                },\n                programa: {\n                    '#attributes': {\n                        nombre: this.programName,\n                        ruta: '{$2$}',\n                        mundoDeEjecucion: this.worldName,\n                        xKarel: targetState === \"start\" ? this.start_j : this.j,\n                        yKarel: targetState === \"start\" ? this.start_i : this.i,\n                        direccionKarel: ['OESTE', 'NORTE', 'ESTE', 'SUR'][targetState === \"start\" ? this.startOrientation : this.orientation],\n                        mochilaKarel: KarelNumbers.isInfinite(this.bagBuzzers) ? 'INFINITO' : (targetState === \"start\" ? this.startBagBuzzers : this.bagBuzzers),\n                    },\n                    despliega: [],\n                },\n            },\n        };\n        for (let i = 1; i <= this._h; i++) {\n            for (let j = 1; j <= this._w; j++) {\n                let buzzers = targetState === \"start\" ? this.startBuzzers(i, j) : this.buzzers(i, j);\n                if (buzzers !== 0) {\n                    result.mundos.mundo.monton.push({\n                        '#attributes': {\n                            x: j,\n                            y: i,\n                            zumbadores: KarelNumbers.isInfinite(buzzers) ? 'INFINITO' : buzzers,\n                        },\n                    });\n                }\n            }\n        }\n        if (this._maxMove !== -1) {\n            result.condiciones.comando.push({\n                '#attributes': {\n                    nombre: \"AVANZA\",\n                    maximoNumeroDeEjecuciones: this._maxMove\n                }\n            });\n        }\n        if (this._maxTurnLeft !== -1) {\n            result.condiciones.comando.push({\n                '#attributes': {\n                    nombre: \"GIRA_IZQUIERDA\",\n                    maximoNumeroDeEjecuciones: this._maxTurnLeft\n                }\n            });\n        }\n        if (this._maxLeaveBuzzer !== -1) {\n            result.condiciones.comando.push({\n                '#attributes': {\n                    nombre: \"DEJA_ZUMBADOR\",\n                    maximoNumeroDeEjecuciones: this._maxLeaveBuzzer\n                }\n            });\n        }\n        if (this._maxPickBuzzer !== -1) {\n            result.condiciones.comando.push({\n                '#attributes': {\n                    nombre: \"COGE_ZUMBADOR\",\n                    maximoNumeroDeEjecuciones: this._maxPickBuzzer\n                }\n            });\n        }\n        for (let i = 1; i <= this._h; i++) {\n            for (let j = 1; j <= this._w; j++) {\n                let walls = this.walls(i, j);\n                for (let k = 2; k < 8; k <<= 1) {\n                    if (i == this._h && k == 2)\n                        continue;\n                    if (j == this._w && k == 4)\n                        continue;\n                    if ((walls & k) == k) {\n                        if (k == 2) {\n                            result.mundos.mundo.pared.push({\n                                '#attributes': { x1: j - 1, y1: i, x2: j },\n                            });\n                        }\n                        else if (k == 4) {\n                            result.mundos.mundo.pared.push({\n                                '#attributes': { x1: j, y1: i - 1, y2: i },\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        let di = 0, dj = 0;\n        for (const dumpCell of this._dumpCells) {\n            di = Math.floor(dumpCell / (this._w + 1));\n            dj = dumpCell % (this._w + 1);\n            result.mundos.mundo.posicionDump.push({\n                '#attributes': { x: di, y: dj },\n            });\n        }\n        result.mundos.mundo.posicionDump.sort((a, b) => {\n            const xDiff = a['#attributes'].x - b['#attributes'].x;\n            return xDiff !== 0 ? xDiff : a['#attributes'].y - b['#attributes'].y;\n        });\n        const dumpKeys = Object.keys(this._dumps).sort();\n        for (let p of dumpKeys) {\n            if (this._dumps.hasOwnProperty(p) && this._dumps[p]) {\n                result.programas.programa.despliega.push({\n                    '#attributes': { tipo: p.toUpperCase() },\n                });\n            }\n        }\n        return this.serialize(result, 'ejecucion', 0);\n    }\n    /**\n     * Generates the XML representation of the current state,\n     * you may need to first run the code to get the final output\n     * @returns  XML string representing the output\n    */\n    output() {\n        let result = {};\n        if (this._dumps[DumpTypes.DUMP_WORLD] || this._dumps[DumpTypes.DUMP_ALL_BUZZERS]) {\n            result.mundos = {\n                mundo: { '#attributes': { nombre: this.worldName }, linea: [] },\n            };\n            let dumpCells = {};\n            let di = 0, dj = 0;\n            for (const dumpCell of this._dumpCells) {\n                di = Math.floor(dumpCell / (this._w + 1));\n                dj = dumpCell % (this._w + 1);\n                if (!dumpCells.hasOwnProperty(di)) {\n                    dumpCells[di] = {};\n                }\n                dumpCells[di][dj] = true;\n            }\n            for (let i = this._h; i > 0; i--) {\n                let printCoordinate = true;\n                let line = '';\n                let beepers = 0;\n                for (let j = 1; j <= this._w; j++) {\n                    if ((dumpCells[i] && dumpCells[i][j]) ||\n                        this._dumps[DumpTypes.DUMP_ALL_BUZZERS]) {\n                        if (this.buzzers(i, j) !== 0) {\n                            if (printCoordinate) {\n                                line += '(' + j + ') ';\n                            }\n                            // TODO: Este es un bug en karel.exe.\n                            beepers = this.buzzers(i, j);\n                            // This is to keep forward compatibility with karel.js and karel.exe\n                            beepers = KarelNumbers.isInfinite(beepers) ? 0xffff : beepers;\n                            if (this.targetVersion === \"1.0\") {\n                                beepers = beepers & 0xffff;\n                            }\n                            line += beepers + ' ';\n                        }\n                        printCoordinate = this.buzzers(i, j) == 0;\n                    }\n                }\n                if (line !== '') {\n                    result.mundos.mundo.linea.push({\n                        '#attributes': { fila: i, compresionDeCeros: 'true' },\n                        '#text': line,\n                    });\n                }\n            }\n        }\n        result.programas = {\n            programa: { '#attributes': { nombre: this.programName } },\n        };\n        result.programas.programa['#attributes'].resultadoEjecucion = this._errorMap(this._runtime.state.error);\n        if (this._dumps[DumpTypes.DUMP_POSITION]) {\n            result.programas.programa.karel = {\n                '#attributes': { x: this.j, y: this.i },\n            };\n        }\n        if (this._dumps[DumpTypes.DUMP_ORIENTATION]) {\n            result.programas.programa.karel = result.programas.programa.karel || {\n                '#attributes': {},\n            };\n            result.programas.programa.karel['#attributes'].direccion = [\n                'OESTE',\n                'NORTE',\n                'ESTE',\n                'SUR',\n            ][this.orientation];\n        }\n        if (this._dumps[DumpTypes.DUMP_BAG]) {\n            result.programas.programa.karel = result.programas.programa.karel || {\n                '#attributes': {},\n            };\n            result.programas.programa.karel['#attributes'].mochila =\n                KarelNumbers.isInfinite(this.bagBuzzers) ? 'INFINITO' : this.bagBuzzers;\n        }\n        if (this._dumps[DumpTypes.DUMP_MOVE]) {\n            result.programas.programa.instrucciones = result.programas.programa\n                .instrucciones || { '#attributes': {} };\n            result.programas.programa.instrucciones['#attributes'].avanza =\n                this._runtime.state.moveCount;\n        }\n        if (this._dumps[DumpTypes.DUMP_LEFT]) {\n            result.programas.programa.instrucciones = result.programas.programa\n                .instrucciones || { '#attributes': {} };\n            result.programas.programa.instrucciones['#attributes'].gira_izquierda =\n                this._runtime.state.turnLeftCount;\n        }\n        if (this._dumps[DumpTypes.DUMP_PICK_BUZZER]) {\n            result.programas.programa.instrucciones = result.programas.programa\n                .instrucciones || { '#attributes': {} };\n            result.programas.programa.instrucciones['#attributes'].coge_zumbador =\n                this._runtime.state.pickBuzzerCount;\n        }\n        if (this._dumps[DumpTypes.DUMP_LEAVE_BUZZER]) {\n            result.programas.programa.instrucciones = result.programas.programa\n                .instrucciones || { '#attributes': {} };\n            result.programas.programa.instrucciones['#attributes'].deja_zumbador =\n                this._runtime.state.leaveBuzzerCount;\n        }\n        return this.serialize(result, 'resultados', 0);\n    }\n    /**\n     * Moves Karel both at the **start** and **current** state to a cell\n     * @param i row\n     * @param j column\n     */\n    move(i, j) {\n        this.i = this.start_i = i;\n        this.j = this.start_j = j;\n        this.dirty = true;\n    }\n    /**\n     * Rotates Karel both at the **start** and **current**\n     * @param orientation If set, it rotates to the specified rotation, otherwise it rotates to the left.\n     */\n    rotate(orientation) {\n        let orientations = ['OESTE', 'NORTE', 'ESTE', 'SUR'];\n        if (!orientation) {\n            orientation = orientations[(this.orientation + 3) % 4]; // +3 to make the turn to the left\n        }\n        this.orientation = this.startOrientation = Math.max(0, orientations.indexOf(orientation));\n        this.dirty = true;\n    }\n    /**\n     * Sets both the **start** and **current** state buzzer bag\n     * @param buzzers\n     */\n    setBagBuzzers(buzzers) {\n        if (isNaN(buzzers))\n            buzzers = 0;\n        this.bagBuzzers = this.startBagBuzzers = buzzers > KarelNumbers.maximum ? KarelNumbers.a_infinite : buzzers;\n        this.dirty = true;\n    }\n    /**\n     * Restores the current state to the start state\n     */\n    reset() {\n        this.orientation = this.startOrientation;\n        this.move(this.start_i, this.start_j);\n        this.bagBuzzers = this.startBagBuzzers;\n        for (let i = 0; i < this._currentMap.length; i++) {\n            this._currentMap[i] = this._map[i];\n        }\n        this._runtime.reset();\n        this.dirty = true;\n    }\n    /**\n     * Converts an error to an string output\n     * @param s error, if not set, it is understood there was no error\n     * @returns The program output\n     *\n     * @private\n     */\n    _errorMap(s) {\n        if (!s)\n            return 'FIN PROGRAMA';\n        if (ERROR_MAPPING.hasOwnProperty(s)) {\n            return ERROR_MAPPING[s];\n        }\n        else {\n            return s;\n        }\n    }\n}\n\nfunction tabs(indentation) {\n    let result = \"\";\n    for (let i = 0; i < indentation; i++) {\n        result += \"\\t\";\n    }\n    return result;\n}\n\nfunction resolveCall$1(data, transpilerData) {\n    const params = data.params.map((param) => processTerm$1(param, transpilerData)).join(\", \");\n    return `${data.target} (${params})`;\n}\nfunction processAtom$1(atom, data) {\n    const atomType = atom.atomType.split(\"#\")[0];\n    const boolFunctions = {\n        \"IFNFWALL\": \"frontIsClear\",\n        \"IFFWALL\": \"frontIsBlocked\",\n        \"IFNLWALL\": \"leftIsClear\",\n        \"IFLWALL\": \"leftIsBlocked\",\n        \"IFNRWALL\": \"rightIsClear\",\n        \"IFRWALL\": \"rightIsBlocked\",\n        \"IFWBUZZER\": \"nextToABeeper\",\n        \"IFNWBUZZER\": \"notNextToABeeper\",\n        \"IFBBUZZER\": \"anyBeepersInBeeperBag\",\n        \"IFNBBUZZER\": \"noBeepersInBeeperBag\",\n        \"IFN\": \"facingNorth\",\n        \"IFS\": \"facingSouth\",\n        \"IFE\": \"facingEast\",\n        \"IFW\": \"facingWest\",\n        \"IFNN\": \"notFacingNorth\",\n        \"IFNS\": \"notFacingSouth\",\n        \"IFNE\": \"notFacingEast\",\n        \"IFNW\": \"notFacingWest\",\n    };\n    if (atomType === \"IMPLICIT\") {\n        // Ignore implicit type\n        return \"\";\n    }\n    if (atomType === \"IS_ZERO\") {\n        const body = processTerm$1(atom.instructions[0][1], data);\n        return `iszero(${body})`;\n    }\n    if (atomType === \"IS_INFINITE\") {\n        const body = processTerm$1(atom.instructions[1][1], data);\n        return `isinfinite(${body})`;\n    }\n    if (atomType === \"NUMBER\") {\n        const argument = atom.atomType.split(\"#\")[1];\n        return argument;\n    }\n    if (atomType === \"INC\") {\n        const term = processTerm$1(atom.instructions[0][1], data);\n        if (atomType === atom.atomType) {\n            return `succ(${term})`;\n        }\n        const literal = atom.atomType.split(\"#\")[1];\n        return `succ(${term}, ${literal})`;\n    }\n    if (atomType === \"DEC\") {\n        const term = processTerm$1(atom.instructions[0][1], data);\n        if (atomType === atom.atomType) {\n            return `pred(${term})`;\n        }\n        const literal = atom.atomType.split(\"#\")[1];\n        return `pred(${term}, ${literal})`;\n    }\n    if (atomType === \"VAR\") {\n        const variable = atom.atomType.split(\"#\")[1];\n        return translateVars$1(variable, data);\n    }\n    if (atomType === \"CALL\") {\n        return resolveCall$1(atom.instructions[0][1], data);\n    }\n    if (atomType in boolFunctions) {\n        return boolFunctions[atomType];\n    }\n    return `/* UNKNOWN ATOM TYPE ${atomType}*/`;\n}\nfunction translateVars$1(word, data) {\n    if (data.hasGlobals) {\n        if (word === \"zumbadores-del-piso\") {\n            return \"beepersOnFloor\";\n        }\n        if (word === \"zumbadores-en-la-mochila\") {\n            return \"beepersInBeeperBag\";\n        }\n        if (word === \"verdadero\") {\n            return \"true\";\n        }\n        if (word === \"falso\") {\n            return \"false\";\n        }\n        if (word === \"fila-actual\") {\n            return \"currentRow\";\n        }\n        if (word === \"columna-actual\") {\n            return \"currentColumn\";\n        }\n    }\n    if (data.functions.has(word)) {\n        return `${word} ()`;\n    }\n    return word;\n}\nfunction translatePackages$1(packName) {\n    if (packName === \"rekarel.globales\") {\n        return \"rekarel.globals\";\n    }\n    return packName;\n}\nfunction processTerm$1(term, data) {\n    if (term.operation === \"ATOM\") {\n        return processAtom$1(term, data);\n    }\n    if (term.operation === \"PASS\") {\n        return processTerm$1(term.term, data);\n    }\n    if (term.operation === \"PARENTHESIS\") {\n        return `(${processTerm$1(term.term, data)})`;\n    }\n    if (term.operation === \"AND\") {\n        return `${processTerm$1(term.left, data)} && ${processTerm$1(term.right, data)}`;\n    }\n    if (term.operation === \"OR\") {\n        return `${processTerm$1(term.left, data)} || ${processTerm$1(term.right, data)}`;\n    }\n    if (term.operation === \"NOT\") {\n        return `!${processTerm$1(term.term, data)}`;\n    }\n    if (term.operation === \"EQ\") {\n        return `${processTerm$1(term.left, data)} == ${processTerm$1(term.right, data)}`;\n    }\n    if (term.operation === \"LT\") {\n        return `${processTerm$1(term.left, data)} < ${processTerm$1(term.right, data)}`;\n    }\n    if (term.operation === \"LTE\") {\n        return `${processTerm$1(term.left, data)} <= ${processTerm$1(term.right, data)}`;\n    }\n}\nfunction processIf$1(conditional, indentation, data) {\n    let result = [];\n    const condition = processTerm$1(conditional.condition[1], data);\n    result.push(`${tabs(indentation)}if (${condition}) {`);\n    result = result.concat(processInstructions$1(conditional.trueCase, indentation + 1, data));\n    if (conditional.skipFalseTag == null) {\n        result.push(`${tabs(indentation)}}`);\n        return result;\n    }\n    result.push(`${tabs(indentation)}} else {`);\n    result = result.concat(processInstructions$1(conditional.falseCase, indentation + 1, data));\n    result.push(`${tabs(indentation)}}`);\n    return result;\n}\nfunction processRepeat$1(conditional, indentation, data) {\n    let result = [];\n    const iterations = processTerm$1(conditional.loopCount[1], data);\n    result.push(`${tabs(indentation)}iterate (${iterations}) {`);\n    result = result.concat(processInstructions$1(conditional.instructions, indentation + 1, data));\n    result.push(`${tabs(indentation)}}`);\n    return result;\n}\nfunction processWhile$1(conditional, indentation, data) {\n    let result = [];\n    const condition = processTerm$1(conditional.condition[1], data);\n    result.push(`${tabs(indentation)}while (${condition}) {`);\n    result = result.concat(processInstructions$1(conditional.instructions, indentation + 1, data));\n    result.push(`${tabs(indentation)}}`);\n    return result;\n}\nfunction processInstructions$1(instructions, indentation, transpilerData) {\n    let result = [];\n    for (const instruction of instructions) {\n        if (instruction[0] === \"LINE\") {\n            continue;\n        }\n        if (instruction[0] === \"HALT\") {\n            result.push(`${tabs(indentation)}turnoff();`);\n            continue;\n        }\n        if (instruction[0] === \"LEFT\") {\n            result.push(`${tabs(indentation)}turnleft();`);\n            continue;\n        }\n        if (instruction[0] === \"FORWARD\") {\n            result.push(`${tabs(indentation)}move();`);\n            continue;\n        }\n        if (instruction[0] === \"PICKBUZZER\") {\n            result.push(`${tabs(indentation)}pickbeeper();`);\n            continue;\n        }\n        if (instruction[0] === \"LEAVEBUZZER\") {\n            result.push(`${tabs(indentation)}putbeeper();`);\n            continue;\n        }\n        if (instruction[0] === \"CALL\") {\n            const data = instruction[1];\n            result.push(`${tabs(indentation)}${resolveCall$1(data, transpilerData)};`);\n            continue;\n        }\n        if (instruction[0] === \"RET\") {\n            if (instruction[1] === \"__DEFAULT\") {\n                continue;\n            }\n            const data = instruction[1];\n            const term = processTerm$1(data.term, transpilerData);\n            if (term === \"\") {\n                result.push(`${tabs(indentation)}return;`);\n            }\n            else {\n                result.push(`${tabs(indentation)}return ${term};`);\n            }\n            continue;\n        }\n        if (instruction[0] === \"IF\") {\n            result = result.concat(processIf$1(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"REPEAT\") {\n            result = result.concat(processRepeat$1(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"WHILE\") {\n            result = result.concat(processWhile$1(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"CONTINUE\") {\n            result.push(`${tabs(indentation)}continue;`);\n            break;\n        }\n        if (instruction[0] === \"BREAK\") {\n            result.push(`${tabs(indentation)}break;`);\n            break;\n        }\n        result.push(`${tabs(indentation)}/** @PARSER Unknown intruction ${instruction[0]}*/`);\n    }\n    return result;\n}\nfunction processFunction$1(func, transpilerData) {\n    let body = processInstructions$1(func.code, 2, transpilerData).join(\"\\n\");\n    let func_type = \"define\";\n    if (func.returnType === \"INT\") {\n        func_type = \"int\";\n    }\n    else if (func.returnType === \"BOOL\") {\n        func_type = \"bool\";\n    }\n    let params = func.params.map((param) => param.name).join(\", \");\n    return `\\t${func_type} ${func.name} (${params}) {\r\n${body}\r\n\\t}\r\n`;\n}\n/**\n * Generates Java source code from an Abstract Syntax Tree (IRObject), such as the one generated by JISON\n *\n * **Notice:** This code generator does not check grammar rules, so if it gets invalid AST code,\n *  it'll generate invalid Java Code without throwing. (For example, it does not check if variables are defined)\n * @param data the AST (IRObject)\n * @returns The source code\n */\nfunction generateJavaFromIR(data) {\n    let transpilerData = {\n        hasGlobals: data.packages.findIndex((val) => translatePackages$1(val[0]) === \"rekarel.globals\") !== -1,\n        functions: new Set(data.functions.map((func) => func.name))\n    };\n    let functions = data.functions\n        .filter((func) => //Remove deprecated prototypes\n     func.code != null)\n        .map((func) => processFunction$1(func, transpilerData)).join(\"\\n\");\n    // remove extra turnoff\n    const program = data.program.slice(0, -1);\n    let mainBody = processInstructions$1(program, 2, transpilerData).join(\"\\n\");\n    let packageData = data.packages.map((packImport) => `import ${translatePackages$1(packImport[0])};\\n`).join();\n    return `${packageData}class program {\r\n${functions}\r\n\\tprogram() {\r\n${mainBody}\r\n\\t}   \r\n\\n}`;\n}\n\nfunction resolveCall(data, transpilerData) {\n    if (data.params.length > 0) {\n        const params = data.params.map((param) => processTerm(param, transpilerData)).join(\", \");\n        return `${data.target}(${params})`;\n    }\n    return `${data.target}`;\n}\nfunction processAtom(atom, data) {\n    const atomType = atom.atomType.split(\"#\")[0];\n    const boolFunctions = {\n        \"IFNFWALL\": \"frente-libre\",\n        \"IFFWALL\": \"frente-bloqueado\",\n        \"IFNLWALL\": \"izquierda-libre\",\n        \"IFLWALL\": \"izquierda-bloqueada\",\n        \"IFNRWALL\": \"derecha-libre\",\n        \"IFRWALL\": \"derecha-bloqueada\",\n        \"IFWBUZZER\": \"junto-a-zumbador\",\n        \"IFNWBUZZER\": \"no-junto-a-zumbador\",\n        \"IFBBUZZER\": \"algun-zumbador-en-la-mochila\",\n        \"IFNBBUZZER\": \"ningun-zumbador-en-la-mochila\",\n        \"IFN\": \"orientado-al-norte\",\n        \"IFS\": \"orientado-al-sur\",\n        \"IFE\": \"orientado-al-este\",\n        \"IFW\": \"orientado-al-oeste\",\n        \"IFNN\": \"no-orientado-al-norte\",\n        \"IFNS\": \"no-orientado-al-sur\",\n        \"IFNE\": \"no-orientado-al-este\",\n        \"IFNW\": \"no-orientado-al-oeste\",\n    };\n    if (atomType === \"IMPLICIT\") {\n        // Ignore implicit type\n        return \"\";\n    }\n    if (atomType === \"IS_ZERO\") {\n        const body = processTerm(atom.instructions[0][1], data);\n        return `es-cero(${body})`;\n    }\n    if (atomType === \"IS_INFINITE\") {\n        const body = processTerm(atom.instructions[1][1], data);\n        return `es-infinito(${body})`;\n    }\n    if (atomType === \"NUMBER\") {\n        const argument = atom.atomType.split(\"#\")[1];\n        return argument;\n    }\n    if (atomType === \"INC\") {\n        const term = processTerm(atom.instructions[0][1], data);\n        if (atomType === atom.atomType) {\n            return `sucede(${term})`;\n        }\n        const literal = atom.atomType.split(\"#\")[1];\n        return `sucede(${term}, ${literal})`;\n    }\n    if (atomType === \"DEC\") {\n        const term = processTerm(atom.instructions[0][1], data);\n        if (atomType === atom.atomType) {\n            return `precede(${term})`;\n        }\n        const literal = atom.atomType.split(\"#\")[1];\n        return `precede(${term}, ${literal})`;\n    }\n    if (atomType === \"VAR\") {\n        const variable = atom.atomType.split(\"#\")[1];\n        return translateVars(variable, data);\n    }\n    if (atomType === \"CALL\") {\n        return resolveCall(atom.instructions[0][1], data);\n    }\n    if (atomType in boolFunctions) {\n        return boolFunctions[atomType];\n    }\n    return `/* UNKNOWN ATOM TYPE ${atomType}*/`;\n}\nfunction translateVars(word, data) {\n    if (data.hasGlobals) {\n        if (word === \"beepersOnFloor\") {\n            return \"zumbadores-del-piso\";\n        }\n        if (word === \"beepersInBeeperBag\") {\n            return \"zumbadores-en-la-mochila\";\n        }\n        if (word === \"true\") {\n            return \"verdadero\";\n        }\n        if (word === \"false\") {\n            return \"falso\";\n        }\n        if (word === \"currentRow\") {\n            return \"fila-actual\";\n        }\n        if (word === \"currentColumn\") {\n            return \"columna-actual\";\n        }\n    }\n    return word;\n}\nfunction translatePackages(packName) {\n    if (packName === \"rekarel.globals\") {\n        return \"rekarel.globales\";\n    }\n    return packName;\n}\nfunction processTerm(term, data) {\n    if (term.operation === \"ATOM\") {\n        return processAtom(term, data);\n    }\n    if (term.operation === \"PASS\") {\n        return processTerm(term.term, data);\n    }\n    if (term.operation === \"PARENTHESIS\") {\n        return `(${processTerm(term.term, data)})`;\n    }\n    if (term.operation === \"AND\") {\n        return `${processTerm(term.left, data)} y ${processTerm(term.right, data)}`;\n    }\n    if (term.operation === \"OR\") {\n        return `${processTerm(term.left, data)} o ${processTerm(term.right, data)}`;\n    }\n    if (term.operation === \"NOT\") {\n        return `no ${processTerm(term.term, data)}`;\n    }\n    if (term.operation === \"EQ\") {\n        return `${processTerm(term.left, data)} == ${processTerm(term.right, data)}`;\n    }\n    if (term.operation === \"LT\") {\n        return `${processTerm(term.left, data)} < ${processTerm(term.right, data)}`;\n    }\n    if (term.operation === \"LTE\") {\n        return `${processTerm(term.left, data)} <= ${processTerm(term.right, data)}`;\n    }\n}\nfunction processIf(conditional, indentation, data) {\n    let result = [];\n    const condition = processTerm(conditional.condition[1], data);\n    result.push(`${tabs(indentation)}si ${condition} entonces`);\n    result.push(`${tabs(indentation)}inicio`);\n    result = result.concat(processInstructions(conditional.trueCase, indentation + 1, data));\n    if (conditional.skipFalseTag == null) {\n        result.push(`${tabs(indentation)}fin;`);\n        return result;\n    }\n    result.push(`${tabs(indentation)}fin`);\n    result.push(`${tabs(indentation)}sino`);\n    result.push(`${tabs(indentation)}inicio`);\n    result = result.concat(processInstructions(conditional.falseCase, indentation + 1, data));\n    result.push(`${tabs(indentation)}fin;`);\n    return result;\n}\nfunction processRepeat(conditional, indentation, data) {\n    let result = [];\n    const iterations = processTerm(conditional.loopCount[1], data);\n    result.push(`${tabs(indentation)}repetir ${iterations} veces`);\n    result.push(`${tabs(indentation)}inicio`);\n    result = result.concat(processInstructions(conditional.instructions, indentation + 1, data));\n    result.push(`${tabs(indentation)}fin;`);\n    return result;\n}\nfunction processWhile(conditional, indentation, data) {\n    let result = [];\n    const condition = processTerm(conditional.condition[1], data);\n    result.push(`${tabs(indentation)}mientras ${condition} hacer`);\n    result.push(`${tabs(indentation)}inicio`);\n    result = result.concat(processInstructions(conditional.instructions, indentation + 1, data));\n    result.push(`${tabs(indentation)}fin;`);\n    return result;\n}\nfunction processInstructions(instructions, indentation, transpilerData) {\n    let result = [];\n    for (const instruction of instructions) {\n        if (instruction[0] === \"LINE\") {\n            continue;\n        }\n        if (instruction[0] === \"HALT\") {\n            result.push(`${tabs(indentation)}apagate;`);\n            continue;\n        }\n        if (instruction[0] === \"LEFT\") {\n            result.push(`${tabs(indentation)}gira-izquierda;`);\n            continue;\n        }\n        if (instruction[0] === \"FORWARD\") {\n            result.push(`${tabs(indentation)}avanza;`);\n            continue;\n        }\n        if (instruction[0] === \"PICKBUZZER\") {\n            result.push(`${tabs(indentation)}coge-zumbador;`);\n            continue;\n        }\n        if (instruction[0] === \"LEAVEBUZZER\") {\n            result.push(`${tabs(indentation)}deja-zumbador;`);\n            continue;\n        }\n        if (instruction[0] === \"CALL\") {\n            const data = instruction[1];\n            result.push(`${tabs(indentation)}${resolveCall(data, transpilerData)};`);\n            continue;\n        }\n        if (instruction[0] === \"RET\") {\n            if (instruction[1] === \"__DEFAULT\") {\n                continue;\n            }\n            const data = instruction[1];\n            const term = processTerm(data.term, transpilerData);\n            if (term === \"\") {\n                result.push(`${tabs(indentation)}regresa;`);\n            }\n            else {\n                result.push(`${tabs(indentation)}regresa ${term};`);\n            }\n            continue;\n        }\n        if (instruction[0] === \"IF\") {\n            result = result.concat(processIf(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"REPEAT\") {\n            result = result.concat(processRepeat(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"WHILE\") {\n            result = result.concat(processWhile(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"CONTINUE\") {\n            result.push(`${tabs(indentation)}continua;`);\n            break;\n        }\n        if (instruction[0] === \"BREAK\") {\n            result.push(`${tabs(indentation)}rompe;`);\n            break;\n        }\n        result.push(`${tabs(indentation)}/** @PARSER Instruccion desconocida ${instruction[0]}*/`);\n    }\n    return result;\n}\nfunction processFunction(func, transpilerData) {\n    let body = processInstructions(func.code, 2, transpilerData).join(\"\\n\");\n    let func_type = \"define\";\n    if (func.returnType === \"INT\") {\n        func_type = \"define-calculo\";\n    }\n    else if (func.returnType === \"BOOL\") {\n        func_type = \"define-condicion\";\n    }\n    let head = `${func_type} ${func.name}`;\n    if (func.params.length > 0) {\n        let params = func.params.map((param) => param.name).join(\", \");\n        head += ` (${params})`;\n    }\n    return `\\t${head} como\r\n\\tinicio\r\n${body}\r\n\\tfin;\r\n`;\n}\n/**\n * Generates Pascal source code from an Abstract Syntax Tree (IRObject), such as the one generated by JISON\n *\n * **Notice:** This code generator does not check grammar rules, so if it gets invalid AST code,\n *  it'll generate invalid Pascal Code without throwing. (For example, it does not check if variables are defined)\n * @param data the AST (IRObject)\n * @returns The source code\n */\nfunction generatePascalFromIR(data) {\n    let transpilerData = {\n        hasGlobals: data.packages.findIndex((val) => translatePackages(val[0]) === \"rekarel.globales\") !== -1,\n        functions: new Set(data.functions.map((func) => func.name))\n    };\n    let functions = data.functions\n        .filter((func) => //Remove deprecated prototypes\n     func.code != null)\n        .map((func) => processFunction(func, transpilerData)).join(\"\\n\");\n    // remove extra turnoff\n    const program = data.program.slice(0, -1);\n    let mainBody = processInstructions(program, 2, transpilerData).join(\"\\n\");\n    let packageData = data.packages.map((packImport) => `usa ${translatePackages(packImport[0])};\\n`).join();\n    return `${packageData}iniciar-programa\r\n${functions}\r\n\\tinicia-ejecucion\r\n${mainBody}\r\n\\ttermina-ejecucion   \r\nfinalizar-programa`;\n}\n\n/**\n * Takes a source code and transpiles it to a target language\n * @param source Original source code\n * @param target Target source code\n * @returns\n */\nfunction transpileCode(source, target) {\n    let lang = detectLanguage(source);\n    let parser = null;\n    switch (lang) {\n        case 'java':\n            parser = javaParser;\n            break;\n        case 'pascal':\n            parser = pascalParser$1;\n            break;\n        default:\n            let errorStatus = {\n                error: CompilationError.Errors.UNKNOWN_SYNTAX,\n                line: 0,\n                loc: {\n                    first_column: 0, first_line: 1, last_column: 0, last_line: 1\n                }\n            };\n            let error = new Error(\"Unknown syntax, the start of the file must be either 'class' or 'iniciar-programa'\");\n            // @ts-ignore Adding extra error data\n            error.hash = errorStatus;\n            throw error;\n    }\n    const result = parser(source);\n    if (target === \"java\") {\n        return generateJavaFromIR(result);\n    }\n    if (target === \"pascal\") {\n        return generatePascalFromIR(result);\n    }\n    return \"000\";\n}\n\nexport { CompilationError, DebugData, DumpTypes, KarelNumbers, Runtime, RuntimeErrorCodes, World, compile, detectLanguage, generateJavaFromIR, generateOpcodesFromIR, generatePascalFromIR, javaCompiler, pascalCompiler, transpileCode };\n","import { compile, RuntimeErrorCodes, World } from \"@rekarel/core\";\nimport { selectedDirectoryHandle } from \"./directoty\";\nfunction removeWhitespaces(str) {\n    return str.replace(/\\s+/g, ''); // Regex to remove all whitespace characters\n}\nexport async function evaluateFiles() {\n    if (!selectedDirectoryHandle) {\n        alert('Please select a directory first.');\n        return;\n    }\n    const sourceText = document.getElementById('source').value;\n    let program = null;\n    try {\n        program = compile(sourceText, false)[0];\n    }\n    catch (e) {\n        alert(\"Compilation error\");\n        return;\n    }\n    const result = document.getElementById(\"result\");\n    result.innerHTML = \"\";\n    try {\n        // Function to recursively iterate through the directory\n        async function iterateDirectory(directoryHandle) {\n            for await (const entry of directoryHandle.values()) {\n                if (entry.kind === 'file' && entry.name.endsWith('.in')) {\n                    const baseName = entry.name.slice(0, -3);\n                    // Find the corresponding .out file\n                    const outFileName = `${baseName}.out`;\n                    const outFileHandle = await directoryHandle.getFileHandle(outFileName, { create: false }).catch(() => null);\n                    if (!outFileHandle) {\n                        result.innerHTML += `<p><b>${entry.name}<b/>: No hay .out</p>`;\n                        continue;\n                    }\n                    const outFile = await outFileHandle.getFile();\n                    const outFileContent = await outFile.text();\n                    // Perform your action on the .in file here\n                    const file = await entry.getFile();\n                    const content = await file.text();\n                    const xml = new DOMParser().parseFromString(content, 'text/xml');\n                    const world = new World(1, 1);\n                    world.load(xml);\n                    const runtime = world.runtime;\n                    runtime.load(program);\n                    while (runtime.step()) {\n                        //Eval code\n                    }\n                    if (runtime.state.error != null) {\n                        const errorType = RuntimeErrorCodes[runtime.state.error] >= 48 ? \"Límite de instrucciones:\" : \"Error de ejecución:\";\n                        result.innerHTML += `<p><b>${entry.name}</b>: <span class=\"text-danger\">${errorType} ${JSON.stringify(runtime.state.error)}</span></p>`;\n                        continue;\n                    }\n                    const finalState = world.output();\n                    const simple_output = removeWhitespaces(outFileContent);\n                    const simple_final = removeWhitespaces(finalState);\n                    if (simple_final === simple_output)\n                        result.innerHTML += `<p><b>${entry.name}</b>: <span class=\"text-success\">Success</span></p>`;\n                    else\n                        result.innerHTML += `<p><b>${entry.name}</b>: <span class=\"text-danger\">Respuesta incorrecta</span></p>`;\n                    // You can add your custom action here\n                    // Example action: console.log file name and content\n                }\n                else if (entry.kind === 'directory') {\n                    continue;\n                }\n            }\n        }\n        // Start iterating through the directory\n        await iterateDirectory(selectedDirectoryHandle);\n    }\n    catch (error) {\n        console.error('Error iterating through files:', error);\n    }\n}\n//# sourceMappingURL=evaluation.js.map","import { selectedDirectoryHandle, handleDirectorySelection } from \"./directoty\";\nimport { evaluateFiles } from \"./evaluation\";\ndocument.getElementById(\"path-btn\").addEventListener(\"click\", () => {\n    handleDirectorySelection();\n});\ndocument.getElementById(\"eval-btn\").addEventListener(\"click\", () => {\n    if (selectedDirectoryHandle == null) {\n        alert(\"Fist select a file\");\n        return;\n    }\n    evaluateFiles().finally(() => {\n        document.getElementById(\"result\").innerHTML += \"<p><b>Termino</b></p>\";\n    });\n});\n//# sourceMappingURL=index.js.map"],"names":["selectedDirectoryHandle","kareljava","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","parser","trace","yy","symbols_","error","program","CLASS","PROG","BEGIN","def_list","block","END","EOF","import_list","expr_list","import","IMPORT","package","VAR","def","funct_type","var","paramList","param","DEF","INT","BOOL","expr","FORWARD","LEFT","PICKBUZZER","LEAVEBUZZER","HALT","CONTINUE","BREAK","return","call","cond","loop","repeat","RET","term","int_termList","IF","bool_term","ELSE","WHILE","REPEAT","int_term","OR","AND","NOT","clause","IFZ","IFINF","bool_fun","integer","IFNFWALL","IFFWALL","IFNLWALL","IFLWALL","IFNRWALL","IFRWALL","IFWBUZZER","IFNWBUZZER","IFBBUZZER","IFNBBUZZER","IFW","IFN","IFE","IFS","IFNW","IFNN","IFNE","IFNS","int_literal","INC","DEC","NUM","$accept","$end","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","resetCompiler","compiler","COMPILER","language","LANG","variablesCanBeFunctions","VarsAsFuncs","requieresFunctionPrototypes","reqsPrototypes","packages","functions","concat","this","$","first_line","first_column","last_line","last_column","name","code","locToIR","params","loc","returnType","result","operation","instructions","dataType","atomType","target","nameLoc","argLoc","totalLoc","skipTag","UniqueTag","condition","line","skipTrueTag","trueCase","toElse","skipElse","skipFalseTag","falseCase","repeatTag","endTag","repeatEnd","repeatLoop","continueLoop","loopCount","continueTag","mergeLocs","left","right","data","callIR","callData","ir","couldBeFunction","parseInt","table","defaultActions","parseError","str","hash","recoverable","Error","parse","input","self","stack","vstack","lstack","args","slice","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","symbol","state","action","r","p","len","newState","expected","token","yyval","lex","errStr","showPosition","join","text","match","Array","range","apply","tagCnt","tag","first","second","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","INITIAL","inclusive","Parser","karelpascal","$VW","$VX","$VY","$VZ","BEGINPROG","BEGINEXEC","ENDEXEC","ENDPROG","prototype_type","AS","DEF_INT","DEF_BOOL","PROTO_INT","PROTO_BOOL","PROTO","genexpr","parameteredCall","THEN","DO","TIMES","toLowerCase","console","log","UnitePackages","booleans","Map","numbers","pack","numberVariables","forEach","value","key","_","set","booleanVariables","javaNumbers","javaBooleans","rekarelGlobalsJava","pascalNumbers","pascalBooleans","rekarelGlobalsPascal","JavaPackages","PascalPackages","DefinitionTable","constructor","variables","tagCounter","getType","identifier","has","get","registerFunction","func","location","hasFunction","getFunction","setFunctionLoc","registerVar","val","hasVar","getVar","getUniqueTag","KarelNumbers","CompilationError","resolveTerm","tree","definitions","scope","tags","resolveListWithASTs","atomData","literal","maximum","toString","Number","Errors","NUMBER_TOO_LARGE","startsWith","termType","substring","parameters","some","e","leftType","shortCircuit","rightType","BINARY_OPERATOR_TYPE_ERROR","operator","expectedType","actualType","direction","COMPARISON_TYPE","VOID_COMPARISON","UNARY_OPERATOR_TYPE_ERROR","TYPE_ERROR","resolveVar","parameterIdx","findIndex","IRs","instruction","resolveCall$2","UNKNOWN_VARIABLE","variable","parameter","UNDEFINED_FUNCTION","functionName","resolveReturn","retType","expectedReturn","RETURN_TYPE","resolveRepeat","loopScope","withContinueBreakTarget","resolveWhile","whileScope","resolveConditional","trueReturns","falseReturns","explicitReturn","IRInstructions","info","breakTarget","ILLEGAL_BREAK","continueTarget","ILLEGAL_CONTINUE","minimum","a_infinite","isInfinite","x","Scope","withContinueTarget","withBreakTarget","MAIN_SCOPE","DebugData","resolveComplexIR","NO_EXPLICIT_RETURN","map","idx","generateOpcodesFromIR","exportDebug","debugData","compPackages","packageName","moduleName","UNKNOWN_PACKAGE","module","full","UNKNOWN_MODULE","packObject","varName","varVal","loadPackages","definitionTable","prototypes","PARAMETER_ILLEGAL_NAME","parameterName","FUNCTION_ILLEGAL_NAME","PROTOTYPE_REDEFINITION","prototypeName","argCount","defined","proto","FUNCTION_REDEFINITION","PROTOTYPE_PARAMETERS_MISS_MATCH","functionParamCount","prototypeParamCount","PROTOTYPE_TYPE_MISS_MATCH","functionType","prototypeType","PARAMETER_REDEFINITION","validateAndGetFunctionDefinitions","IRProgram","functionScope","iData","targetFunc","extraParam","TOO_MANY_PARAMS_IN_CALL","expectedParams","actualParams","TOO_FEW_PARAMS_IN_CALL","funcName","CALL_TYPE","expectedCallType","javaParser","pascalParser","javaCompiler","pascalCompiler","KarelRuntimeEvent","Event","type","runtime","details","super","KarelRuntimeEventTarget","listeners","addEventListener","callback","dispatchEvent","event","listener","removeEventListener","indexOf","splice","fireEvent","evt","OpCodeID","ErrorType","RuntimeErrorCodes","DumpTypes","ERROR_MAPPING","Runtime","world","_world","debug","disableStackEvents","_eventController","load","_state","eventController","opcodes","error_mapping","_rawOpcodes","function_map","_functionNames","function_idx","_program","Int32Array","ArrayBuffer","currentOpcode","reset","_start","clean","pc","sp","fp","column","ic","ret","stackSize","stackMemory","moveCount","turnLeftCount","pickBuzzerCount","leaveBuzzerCount","jumped","running","message","JSON","stringify","debugType","step","LINE","rot","maxInstructions","INSTRUCTION","maxStackSize","STACK","paramCount","newSP","op1","op2","fname","fromFName","npc","tmp","di","dj","orientation","dirty","maxTurnLeft","INSTRUCTION_LEFT","errorData","WORLDWALLS","walls","j","ORIENTATION","ROTL","ROTR","MASK","EQ","EZ","WALL","WORLDUNDERFLOW","BAGUNDERFLOW","JZ","JMP","maxMove","INSTRUCTION_FORWARD","WORLDBUZZERS","buzzers","BAGBUZZERS","bagBuzzers","pickBuzzer","BAGOVERFLOW","maxPickBuzzer","INSTRUCTION_PICKBUZZER","leaveBuzzer","WORLDOVERFLOW","maxLeaveBuzzer","INSTRUCTION_LEAVEBUZZER","LOAD","POP","DUP","validateNumber","CALL","max","maxStackMemory","STACKMEMORY","maxCallSize","CALLSIZE","function","subarray","fromFunction","returnValue","PARAM","SRET","LRET","LT","LTE","ROW","COLUMN","INVALIDOPCODE","copy","expressionStack","from","number","INTEGERUNDERFLOW","INTEGEROVERFLOW","World","w","h","init","_h","_w","_runtime","_maxInstructions","_maxMove","_maxTurnLeft","_maxPickBuzzer","_maxLeaveBuzzer","_maxStackSize","_maxStackMemory","_maxCallSize","_createMaps","clear","_map","_currentMap","_wallMap","Uint8Array","resize","oldW","oldH","oldMap","oldWallMap","oldDumpCells","_dumpCells","addBorderWalls","setCellWalls","setBuzzers","Set","oldDump","floor","setDumpCell","start_i","start_j","startOrientation","startBagBuzzers","_dumps","worldName","programName","targetVersion","setWallMask","wallMask","newMask","toggleWall","addWall","pos","count","startBuzzers","dumpState","add","delete","DUMP_WORLD","size","toggleDumpCell","getDumpCell","dumpPos","getDumpCellCount","getDumps","dumpFlag","setDumps","flagValue","toggleDumps","doc","ejecucion","version","getAttribute","mundo","alto","ancho","condiciones","comando","monton","zumbadores","isNaN","pared","j2","i2","despliega","posicionDump","dump","programa","xKarel","yKarel","rotate","move","setBagBuzzers","traverse","node","nodeName","childNodes","item","nodeType","ELEMENT_NODE","Node","serialize","indentation","isArray","childResult","save","targetState","instruccionesMaximasAEjecutar","longitudStack","memoriaStack","llamadaMaxima","mundos","nombre","programas","tipoEjecucion","intruccionesCambioContexto","milisegundosParaPasoAutomatico","ruta","mundoDeEjecucion","direccionKarel","mochilaKarel","y","maximoNumeroDeEjecuciones","x1","y1","x2","y2","dumpCell","sort","a","b","xDiff","dumpKeys","keys","tipo","toUpperCase","output","DUMP_ALL_BUZZERS","linea","dumpCells","printCoordinate","beepers","fila","compresionDeCeros","resultadoEjecucion","_errorMap","DUMP_POSITION","karel","DUMP_ORIENTATION","direccion","DUMP_BAG","mochila","DUMP_MOVE","instrucciones","avanza","DUMP_LEFT","gira_izquierda","DUMP_PICK_BUZZER","coge_zumbador","DUMP_LEAVE_BUZZER","deja_zumbador","orientations","s","removeWhitespaces","async","evaluateFiles","alert","sourceText","document","getElementById","lang","m","exec","detectLanguage","errorStatus","UNKNOWN_SYNTAX","compile","innerHTML","iterateDirectory","directoryHandle","entry","values","kind","endsWith","outFileName","outFileHandle","getFileHandle","catch","outFile","getFile","outFileContent","file","content","xml","DOMParser","parseFromString","errorType","finalState","simple_output","simple_final","window","showDirectoryPicker","textContent","handleDirectorySelection","finally"],"mappings":"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G,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,EAAEE,IAAI,GAAG3C,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAGkB,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,EAAEE,IAAI,GAAG3C,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAGkB,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,EAAEE,IAAI,GAAG3C,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAGkB,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,GAAGG,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,EAAEL,IAAI,GAAG3C,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAGkB,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,EAAEE,IAAI,GAAG3C,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAGkB,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,EAAEE,IAAI,GAAG3C,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAGkB,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,EAAEE,IAAI,GAAG3C,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAGkB,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,EAAEE,IAAI,GAAG3C,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAGkB,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,EAAEE,IAAI,GAAG3C,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAGkB,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC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AAG,OAAO,GACf,KAAK,EACL,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GAAI,OAAO,GAChB,KAAK,GACL,KAAK,GAAI,OAAO,GAC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","x_google_ignoreList":[1]}