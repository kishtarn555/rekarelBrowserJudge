{"version":3,"file":"index.js","sources":["../dist/directoty.js","../node_modules/@rekarel/core/dist/index.js","../dist/evaluation.js","../dist/index.js"],"sourcesContent":["// Declare a variable to store the directory handle globally\nlet selectedDirectoryHandle = null;\n// Function to handle directory selection\nasync function handleDirectorySelection() {\n    try {\n        // Trigger the directory picker and store the directory handle\n        selectedDirectoryHandle = await window.showDirectoryPicker();\n        // Update the span with the directory name or path\n        const pathSpan = document.getElementById('path');\n        pathSpan.textContent = selectedDirectoryHandle.name;\n    }\n    catch (error) {\n        console.error('Error selecting directory:', error);\n    }\n}\nexport { selectedDirectoryHandle, handleDirectorySelection };\n//# sourceMappingURL=directoty.js.map","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar kareljava = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[4,16],$V2=[1,19],$V3=[1,20],$V4=[1,21],$V5=[5,28,29,30],$V6=[1,29],$V7=[8,9,18,27,53,54,55,56,57],$V8=[1,39],$V9=[6,11,18,19,32,33,34,35,36,37,38,44,47,50,51],$Va=[9,27],$Vb=[1,71],$Vc=[1,58],$Vd=[1,59],$Ve=[1,60],$Vf=[1,61],$Vg=[1,62],$Vh=[1,63],$Vi=[1,64],$Vj=[1,72],$Vk=[1,74],$Vl=[1,75],$Vm=[1,76],$Vn=[6,11,18,19,32,33,34,35,36,37,38,44,47,49,50,51],$Vo=[1,93],$Vp=[1,95],$Vq=[1,100],$Vr=[1,101],$Vs=[1,102],$Vt=[1,103],$Vu=[1,104],$Vv=[1,105],$Vw=[1,106],$Vx=[1,107],$Vy=[1,108],$Vz=[1,109],$VA=[1,110],$VB=[1,111],$VC=[1,112],$VD=[1,113],$VE=[1,114],$VF=[1,115],$VG=[1,116],$VH=[1,117],$VI=[1,119],$VJ=[1,120],$VK=[1,121],$VL=[1,122],$VM=[1,135],$VN=[1,136],$VO=[1,137],$VP=[1,138],$VQ=[1,139],$VR=[1,140],$VS=[9,18,27,53,54,55,56,57],$VT=[9,18,27,53,54],$VU=[9,18,27,53,54,55];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"program\":3,\"CLASS\":4,\"PROG\":5,\"BEGIN\":6,\"def_list\":7,\"(\":8,\")\":9,\"block\":10,\"END\":11,\"EOF\":12,\"import_list\":13,\"expr_list\":14,\"import\":15,\"IMPORT\":16,\"package\":17,\";\":18,\"VAR\":19,\".\":20,\"*\":21,\"def\":22,\"funct_type\":23,\"var\":24,\"paramList\":25,\"param\":26,\",\":27,\"DEF\":28,\"INT\":29,\"BOOL\":30,\"expr\":31,\"FORWARD\":32,\"LEFT\":33,\"PICKBUZZER\":34,\"LEAVEBUZZER\":35,\"HALT\":36,\"CONTINUE\":37,\"BREAK\":38,\"return\":39,\"call\":40,\"cond\":41,\"loop\":42,\"repeat\":43,\"RET\":44,\"term\":45,\"int_termList\":46,\"IF\":47,\"bool_term\":48,\"ELSE\":49,\"WHILE\":50,\"REPEAT\":51,\"int_term\":52,\"OR\":53,\"AND\":54,\"==\":55,\"<\":56,\"<=\":57,\"NOT\":58,\"clause\":59,\"IFZ\":60,\"bool_fun\":61,\"integer\":62,\"IFNFWALL\":63,\"IFFWALL\":64,\"IFNLWALL\":65,\"IFLWALL\":66,\"IFNRWALL\":67,\"IFRWALL\":68,\"IFWBUZZER\":69,\"IFNWBUZZER\":70,\"IFBBUZZER\":71,\"IFNBBUZZER\":72,\"IFW\":73,\"IFN\":74,\"IFE\":75,\"IFS\":76,\"IFNW\":77,\"IFNN\":78,\"IFNE\":79,\"IFNS\":80,\"int_literal\":81,\"INC\":82,\"DEC\":83,\"NUM\":84,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"CLASS\",5:\"PROG\",6:\"BEGIN\",8:\"(\",9:\")\",11:\"END\",12:\"EOF\",16:\"IMPORT\",18:\";\",19:\"VAR\",20:\".\",21:\"*\",27:\",\",28:\"DEF\",29:\"INT\",30:\"BOOL\",32:\"FORWARD\",33:\"LEFT\",34:\"PICKBUZZER\",35:\"LEAVEBUZZER\",36:\"HALT\",37:\"CONTINUE\",38:\"BREAK\",44:\"RET\",47:\"IF\",49:\"ELSE\",50:\"WHILE\",51:\"REPEAT\",53:\"OR\",54:\"AND\",55:\"==\",56:\"<\",57:\"<=\",58:\"NOT\",60:\"IFZ\",63:\"IFNFWALL\",64:\"IFFWALL\",65:\"IFNLWALL\",66:\"IFLWALL\",67:\"IFNRWALL\",68:\"IFRWALL\",69:\"IFWBUZZER\",70:\"IFNWBUZZER\",71:\"IFBBUZZER\",72:\"IFNBBUZZER\",73:\"IFW\",74:\"IFN\",75:\"IFE\",76:\"IFS\",77:\"IFNW\",78:\"IFNN\",79:\"IFNE\",80:\"IFNS\",82:\"INC\",83:\"DEC\",84:\"NUM\"},\nproductions_: [0,[3,10],[3,9],[3,11],[3,10],[10,3],[13,2],[13,1],[15,3],[17,3],[17,3],[7,2],[7,1],[22,5],[22,6],[25,3],[25,1],[26,1],[23,1],[23,1],[23,1],[14,2],[14,0],[31,4],[31,4],[31,4],[31,4],[31,4],[31,2],[31,2],[31,2],[31,2],[31,1],[31,1],[31,1],[31,1],[31,1],[39,3],[39,1],[39,2],[40,3],[40,4],[46,3],[46,1],[41,5],[41,7],[42,5],[43,5],[45,3],[45,3],[45,3],[45,3],[45,3],[45,2],[45,3],[45,1],[48,1],[52,1],[59,4],[59,1],[59,3],[59,1],[59,1],[59,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[62,1],[62,4],[62,4],[62,6],[62,6],[81,1],[24,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        requieresFunctionPrototypes: reqsPrototypes,\r\n        packages: [],\r\n        functions: $$[$0-6],\r\n        program: $$[$0-2].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      } \r\ncase 2:\n  \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes,\r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: [],\r\n        functions: [],\r\n        program: $$[$0-2].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }\r\ncase 3:\n  \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes,\r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: $$[$0-10],\r\n        functions: $$[$0-6],\r\n        program: $$[$0-2].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }\r\ncase 4:\n  \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        packages: $$[$0-9],\r\n        requieresFunctionPrototypes: reqsPrototypes,\r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        functions: [],\r\n        program: $$[$0-2].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }\r\ncase 5: case 30: case 31:\n this.$ = $$[$0-1]; \nbreak;\ncase 6: case 11: case 21:\n this.$ = $$[$0-1].concat($$[$0]); \nbreak;\ncase 7: case 12: case 16: case 32: case 33: case 34: case 35: case 55:\n this.$ = $$[$0]; \nbreak;\ncase 8:\n this.$ = [[$$[$0-1], _$[$0-1]]]; \nbreak;\ncase 9:\n\r\n    this.$= $$[$0-2]+\".\"+$$[$0];\r\n  \nbreak;\ncase 10:\n\r\n    this.$= $$[$0-2]+\".*\";\r\n  \nbreak;\ncase 13:\n \r\n      this._$.first_line = _$[$0-4].first_line;\r\n      this._$.first_column = _$[$0-4].first_column;\r\n      this._$.last_line = _$[$0-2].last_line;\r\n      this._$.last_column = _$[$0-2].last_column;\r\n      this.$ = [{\r\n        name: $$[$0-3], \r\n        code: [\r\n          locToIR(_$[$0-3]),\r\n          ...$$[$0],\r\n          ['RET', '__DEFAULT', {\r\n            first_line: _$[$0].last_line,\r\n            first_column: _$[$0].last_column-1,\r\n            last_line: _$[$0].last_line,\r\n            last_column: _$[$0].last_column\r\n          }],\r\n        ],  \r\n        params: [], \r\n        loc: this._$, \r\n        returnType: $$[$0-4]\r\n      }];\r\n    \nbreak;\ncase 14:\n\r\n      this._$.first_line = _$[$0-5].first_line;\r\n      this._$.first_column = _$[$0-5].first_column;\r\n      this._$.last_line = _$[$0-3].last_line;\r\n      this._$.last_column = _$[$0-3].last_column;\r\n    \tlet result = [\r\n        \r\n          locToIR(_$[$0-4]),\r\n          ...$$[$0],\r\n          ['RET', '__DEFAULT', {\r\n            first_line: _$[$0].last_line,\r\n            first_column: _$[$0].last_column-1,\r\n            last_line: _$[$0].last_line,\r\n            last_column: _$[$0].last_column\r\n          }],\r\n      ];\r\n      [$$[$0-1]];\r\n    \tthis.$ = [{\r\n        name: $$[$0-4], \r\n        code: result, \r\n        params: $$[$0-2],\r\n        loc: this._$, \r\n        returnType: $$[$0-5]\r\n      }];\r\n    \nbreak;\ncase 15:\n this.$=$$[$0-2].concat($$[$0]); \nbreak;\ncase 17:\n \r\n      this.$= [{\r\n        name: $$[$0],\r\n        loc: _$[$0]\r\n      }];\r\n    \nbreak;\ncase 18:\n this.$ = \"VOID\"; \nbreak;\ncase 19:\n this.$ = \"INT\"; \nbreak;\ncase 20:\n this.$ = \"BOOL\"; \nbreak;\ncase 22: case 36:\n this.$ = []; \nbreak;\ncase 23:\n this.$ = [locToIR(_$[$0-3]), ['FORWARD']]; \nbreak;\ncase 24:\n this.$ = [locToIR(_$[$0-3]), ['LEFT']]; \nbreak;\ncase 25:\n this.$ = [locToIR(_$[$0-3]), ['PICKBUZZER']]; \nbreak;\ncase 26:\n this.$ = [locToIR(_$[$0-3]), ['LEAVEBUZZER']]; \nbreak;\ncase 27:\n this.$ = [locToIR(_$[$0-3]), ['HALT']]; \nbreak;\ncase 28:\n this.$ = [locToIR(_$[$0-1]), ['CONTINUE', _$[$0-1]]]; \nbreak;\ncase 29:\n this.$ = [locToIR(_$[$0-1]), ['BREAK', _$[$0-1]]]; \nbreak;\ncase 37:\n this.$ = [\r\n      ['RET', {\r\n        term: { \r\n          operation: \"ATOM\",\r\n          instructions:[[\"LOAD\", 0]],\r\n          dataType:\"VOID\",\r\n          atomType:\"IMPLICIT.0\"\r\n        },\r\n        loc: _$[$0-2]\r\n      }]\r\n    ]; \nbreak;\ncase 38:\n this.$ = [\r\n      ['RET', {\r\n        term: {\r\n          operation: \"ATOM\",\r\n          instructions:[[\"LOAD\", 0]],\r\n          dataType:\"VOID\",\r\n          atomType:\"IMPLICIT.0\"\r\n        },\r\n        loc: _$[$0]\r\n      }]\r\n    ]; \nbreak;\ncase 39:\n this.$ = [\r\n      ['RET', {\r\n        term: $$[$0],\r\n        loc: _$[$0-1]\r\n      }]\r\n    ]; \nbreak;\ncase 40:\n \r\n      \r\n      var loc = {\r\n        first_line: _$[$0-1].first_line,\r\n        first_column: _$[$0-1].first_column,\r\n        last_line: _$[$0].last_line,\r\n        last_column: _$[$0].last_column,\r\n      };\r\n      this.$ = [[\r\n        'CALL', \r\n        {\r\n          target: $$[$0-2],\r\n          params: [],\r\n          nameLoc: _$[$0-2], \r\n          argLoc: loc,\r\n        }\r\n      ]]; \r\n    \nbreak;\ncase 41:\n \r\n      this._$.first_column = _$[$0-3].first_column;\r\n      this._$.first_line = _$[$0-3].first_line;\r\n      this._$.last_column = _$[$0].last_column;\r\n      this._$.last_line = _$[$0].last_line;\r\n      this.$ = [[\r\n        'CALL', \r\n        {\r\n          target: $$[$0-3], \r\n          params: $$[$0-1],\r\n          nameLoc: _$[$0-3], \r\n          argLoc: loc,\r\n        }\r\n      ]];  \r\n    \nbreak;\ncase 42:\n \r\n      this.$ = $$[$0-2].concat([\r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: $$[$0].loc,\r\n          totalLoc: $$[$0].totalLoc,\r\n        } \r\n      ]);\r\n    \nbreak;\ncase 43:\n \r\n      this.$ = [\r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: $$[$0].loc,\r\n          totalLoc: $$[$0].totalLoc,\r\n        } \r\n      ]; \r\n    \nbreak;\ncase 44:\n \r\n      const skipTag = UniqueTag('iskip');\r\n      this.$ = [[\r\n        \"IF\",\r\n        {\r\n          condition: $$[$0-2][0],\r\n          line: locToIR(_$[$0-4]),\r\n          skipTrueTag: skipTag,\r\n          trueCase: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 45:\n \r\n      const toElse = UniqueTag('ielse');\r\n      const skipElse = UniqueTag('iskipelse');\r\n      this.$ = [[\r\n        \"IF\",\r\n        {\r\n          condition: $$[$0-4][0],\r\n          line: locToIR(_$[$0-6]),\r\n          skipTrueTag: toElse,\r\n          skipFalseTag: skipElse,\r\n          trueCase: $$[$0-2],\r\n          falseCase: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 46:\n \r\n      const repeatTag = UniqueTag('lrepeat');\r\n      const endTag = UniqueTag('lend');\r\n      this.$ = [[\r\n        'WHILE',  \r\n        {\r\n          condition:   $$[$0-2][0],\r\n          line:         locToIR(_$[$0-4]),\r\n          repeatTag:    repeatTag,\r\n          endTag:       endTag,\r\n          instructions: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 47:\n \r\n      const repeatEnd = UniqueTag('rend');\r\n      const repeatLoop = UniqueTag('rloop');\r\n      const continueLoop = UniqueTag('rcontinue');\r\n      this.$ = [[\r\n        \"REPEAT\",\r\n        {\r\n          line:       locToIR(_$[$0-4]),\r\n          loopCount:  $$[$0-2][0],\r\n          repeatTag:  repeatLoop,\r\n          continueTag: continueLoop,\r\n          endTag:     repeatEnd,\r\n          instructions: $$[$0]\r\n        }\r\n      ]]; \r\n    \nbreak;\ncase 48:\n \r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"OR\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      }; \r\n    \nbreak;\ncase 49:\n      \r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"AND\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 50:\n \r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"EQ\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$,\r\n        dataType:\"BOOL\"\r\n      };\r\n    \nbreak;\ncase 51:\n\r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"LT\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 52:\n\r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"LTE\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 53:\n \r\n      this._$ = mergeLocs(_$[$0-1], _$[$0]);\r\n      this.$ = {\r\n        term: $$[$0],       \r\n        operation: \"NOT\",\r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 54:\n \r\n      this.$ = { \r\n        term: $$[$0-1],\r\n        operation: \"PARENTHESIS\",\r\n        dataType: $$[$0-1].dataType,\r\n        loc: $$[$0-1].loc,\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 56:\n \r\n      this.$ = [[\r\n        'TERM', \r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'BOOL',\r\n          loc: $$[$0].loc,\r\n          totalLoc: $$[$0].totalLoc\r\n        }    \r\n      ]];\r\n    \nbreak;\ncase 57:\n \r\n      this.$ = [[\r\n        'TERM', \r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: $$[$0].loc,\r\n          totalLoc: $$[$0].totalLoc\r\n        }    \r\n      ]];\r\n    \nbreak;\ncase 58:\n \r\n      this._$ = mergeLocs(_$[$0-3], _$[$0]);\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0-1].concat([['NOT']]),\r\n        dataType: \"BOOL\",\r\n        atomType:\"IS_ZERO\",\r\n        loc: _$[$0-3],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 59:\n \r\n      this._$ = _$[$0];\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0].code,\r\n        atomType: $$[$0].name,\r\n        dataType: \"BOOL\",\r\n        loc: this._$,\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 60:\n \r\n      this._$ = mergeLocs(_$[$0-2], _$[$0]);\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0-2].code,\r\n        atomType: $$[$0-2].name,\r\n        dataType: \"BOOL\",\r\n        loc: _$[$0-2],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 61:\n\r\n      this._$ = _$[$0];\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0].code,\r\n        atomType: $$[$0].data,\r\n        dataType: \"INT\",\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      };\r\n    \nbreak;\ncase 62:\n \r\n      const callIR = $$[$0];\r\n      const callData = callIR[0][1];\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: [...callIR, ['LRET']],\r\n        dataType: \"$\"+callData.target,\r\n        atomType:\"CALL\",\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      };\r\n    \nbreak;\ncase 63:\n \r\n      const ir = [[\r\n        'VAR', \r\n        {\r\n          target:$$[$0], \r\n          loc: _$[$0],\r\n          couldBeFunction: false,\r\n        }\r\n      ]];        \r\n      this._$=_$[$0];\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: ir,\r\n        dataType: \"$\"+$$[$0],\r\n        atomType: `VAR.${$$[$0]}`,\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      }; \r\n    \nbreak;\ncase 64:\n \r\n      this.$ = {\r\n        name: \"IFNFWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['MASK'], ['AND'], ['NOT']]\r\n      }; \r\n    \nbreak;\ncase 65:\n \r\n      this.$ = {\r\n        name: \"IFFWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['MASK'], ['AND']]\r\n      }; \r\n    \nbreak;\ncase 66:\n \r\n      this.$ = {\r\n        name: \"IFNLWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTL'], ['MASK'], ['AND'], ['NOT']]\r\n      }; \r\n    \nbreak;\ncase 67:\n \r\n      this.$ = {\r\n        name: \"IFLWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTL'], ['MASK'], ['AND']]\r\n      };\r\n    \nbreak;\ncase 68:\n \r\n      this.$ = {\r\n        name: \"IFNRWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTR'], ['MASK'], ['AND'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 69:\n \r\n      this.$ = {\r\n        name: \"IFRWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTR'], ['MASK'], ['AND']]\r\n      };\r\n    \nbreak;\ncase 70:\n \r\n      this.$ = {\r\n        name: \"IFWBUZZER\",\r\n        code: [['WORLDBUZZERS'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 71:\n \r\n      this.$ = {\r\n        name: \"IFNWBUZZER\",\r\n        code: [['WORLDBUZZERS'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 72:\n \r\n      this.$ = {\r\n        name: \"IFBBUZZER\",\r\n        code: [['BAGBUZZERS'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 73:\n\r\n      this.$ = {\r\n        name: \"IFNBBUZZER\",\r\n        code: [['BAGBUZZERS'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 74:\n \r\n      this.$ = {\r\n        name: \"IFW\",\r\n        code: [['ORIENTATION'], ['LOAD', 0], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 75:\n\r\n      this.$ = {\r\n        name: \"IFN\",\r\n        code: [['ORIENTATION'], ['LOAD', 1], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 76:\n\r\n      this.$ = {\r\n        name: \"IFE\",\r\n        code: [['ORIENTATION'], ['LOAD', 2], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 77:\n\r\n      this.$ = {\r\n        name: \"IFS\",\r\n        code: [['ORIENTATION'], ['LOAD', 3], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 78:\n\r\n      this.$ = {\r\n        name: \"IFNW\",\r\n        code: [['ORIENTATION'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 79:\n\r\n      this.$ = {\r\n        name: \"IFNN\",\r\n        code: [['ORIENTATION'], ['LOAD', 1], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 80:\n \r\n      this.$ = {\r\n        name: \"IFNE\",\r\n        code: [['ORIENTATION'], ['LOAD', 2], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 81:\n\r\n      this.$ = {\r\n        name: \"IFNS\",\r\n        code: [['ORIENTATION'], ['LOAD', 3], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 82:\n \r\n      this.$ = {\r\n        data: `NUMBER.${$$[$0]}`, \r\n        code: [['LOAD', $$[$0]]]\r\n      };\r\n    \nbreak;\ncase 83:\n \r\n      this.$ = {\r\n        data: \"INC\",\r\n        code: $$[$0-1].concat([['INC', 1]])\r\n      };\r\n    \nbreak;\ncase 84:\n \r\n      this.$ = {\r\n        data: \"DEC\",\r\n        code: $$[$0-1].concat([['DEC', 1]])\r\n      };\r\n    \nbreak;\ncase 85:\n \r\n      this.$ = {\r\n        data: `INC.${$$[$0-1]}`,\r\n        code: $$[$0-3].concat([['INC', $$[$0-1]]])\r\n      }; \r\n    \nbreak;\ncase 86:\n \r\n      this.$ = {\r\n        data: `DEC.${$$[$0-1]}`,\r\n        code: $$[$0-3].concat([['DEC', $$[$0-1]]])\r\n      };\r\n    \nbreak;\ncase 87:\n this.$ = parseInt(yytext); \nbreak;\ncase 88:\n this.$ = yytext; \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],13:3,15:4,16:$V0},{1:[3]},{5:[1,6]},{4:[1,7],15:8,16:$V0},o($V1,[2,7]),{17:9,19:[1,10]},{6:[1,11]},{5:[1,12]},o($V1,[2,6]),{18:[1,13]},{20:[1,14]},{5:[1,16],7:15,22:17,23:18,28:$V2,29:$V3,30:$V4},{6:[1,22]},o($V1,[2,8]),{19:[1,23],21:[1,24]},{5:[1,25],22:26,23:18,28:$V2,29:$V3,30:$V4},{8:[1,27]},o($V5,[2,12]),{19:$V6,24:28},{19:[2,18]},{19:[2,19]},{19:[2,20]},{5:[1,31],7:30,22:17,23:18,28:$V2,29:$V3,30:$V4},{18:[2,9]},{18:[2,10]},{8:[1,32]},o($V5,[2,11]),{9:[1,33]},{8:[1,34]},o($V7,[2,88]),{5:[1,35],22:26,23:18,28:$V2,29:$V3,30:$V4},{8:[1,36]},{9:[1,37]},{6:$V8,10:38},{9:[1,40],19:$V6,24:43,25:41,26:42},{8:[1,44]},{9:[1,45]},{6:$V8,10:46},{11:[1,47]},o($V9,[2,22],{14:48}),{6:$V8,10:49},{9:[1,50]},{9:[2,16],27:[1,51]},o($Va,[2,17]),{9:[1,52]},{6:$V8,10:53},{11:[1,54]},{12:[1,55]},{6:$V8,10:70,11:[1,56],18:$Vb,19:$V6,24:73,31:57,32:$Vc,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,38:$Vi,39:65,40:66,41:67,42:68,43:69,44:$Vj,47:$Vk,50:$Vl,51:$Vm},o($V5,[2,13]),{6:$V8,10:77},{19:$V6,24:43,25:78,26:42},{6:$V8,10:79},{11:[1,80]},{12:[1,81]},{1:[2,2]},o([5,6,11,18,19,28,29,30,32,33,34,35,36,37,38,44,47,49,50,51],[2,5]),o($V9,[2,21]),{8:[1,82]},{8:[1,83]},{8:[1,84]},{8:[1,85]},{8:[1,86]},{18:[1,87]},{18:[1,88]},{18:[1,89]},{18:[1,90]},o($Vn,[2,32]),o($Vn,[2,33]),o($Vn,[2,34]),o($Vn,[2,35]),o($Vn,[2,36]),{8:[1,91],18:[2,38],19:$V6,24:99,40:98,45:92,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{8:$VL},{8:[1,123]},{8:[1,124]},{8:[1,125]},o($V5,[2,14]),{9:[2,15]},{11:[1,126]},{12:[1,127]},{1:[2,1]},{9:[1,128]},{9:[1,129]},{9:[1,130]},{9:[1,131]},{9:[1,132]},o($Vn,[2,28]),o($Vn,[2,29]),o($Vn,[2,30]),o($Vn,[2,31]),{8:$VM,9:[1,133],19:$V6,24:99,40:98,45:134,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{18:[2,39],53:$VN,54:$VO,55:$VP,56:$VQ,57:$VR},{8:$VM,19:$V6,24:99,40:98,45:141,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},o($VS,[2,55]),{8:[1,142]},o($VS,[2,59],{8:[1,143]}),o($VS,[2,61]),o($VS,[2,62]),o($VS,[2,63],{8:$VL}),o($V7,[2,64]),o($V7,[2,65]),o($V7,[2,66]),o($V7,[2,67]),o($V7,[2,68]),o($V7,[2,69]),o($V7,[2,70]),o($V7,[2,71]),o($V7,[2,72]),o($V7,[2,73]),o($V7,[2,74]),o($V7,[2,75]),o($V7,[2,76]),o($V7,[2,77]),o($V7,[2,78]),o($V7,[2,79]),o($V7,[2,80]),o($V7,[2,81]),o($VS,[2,82]),{8:[1,144]},{8:[1,145]},o($VS,[2,87]),{8:$VM,9:[1,146],19:$V6,24:99,40:98,45:148,46:147,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{8:$VM,19:$V6,24:99,40:98,45:150,48:149,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{8:$VM,19:$V6,24:99,40:98,45:150,48:151,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{8:$VM,19:$V6,24:99,40:98,45:153,52:152,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{12:[1,154]},{1:[2,4]},{18:[1,155]},{18:[1,156]},{18:[1,157]},{18:[1,158]},{18:[1,159]},{18:[2,37]},{9:[1,160],53:$VN,54:$VO,55:$VP,56:$VQ,57:$VR},{8:$VM,19:$V6,24:99,40:98,45:134,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{8:$VM,19:$V6,24:99,40:98,45:161,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{8:$VM,19:$V6,24:99,40:98,45:162,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{8:$VM,19:$V6,24:99,40:98,45:163,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{8:$VM,19:$V6,24:99,40:98,45:164,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{8:$VM,19:$V6,24:99,40:98,45:165,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},o($VS,[2,53]),{8:$VM,19:$V6,24:99,40:98,45:153,52:166,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{9:[1,167]},{8:$VM,19:$V6,24:99,40:98,45:153,52:168,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{8:$VM,19:$V6,24:99,40:98,45:153,52:169,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},o($VS,[2,40]),{9:[1,170],27:[1,171]},o($Va,[2,43],{53:$VN,54:$VO,55:$VP,56:$VQ,57:$VR}),{9:[1,172]},{9:[2,56],53:$VN,54:$VO,55:$VP,56:$VQ,57:$VR},{9:[1,173]},{9:[1,174]},o($Va,[2,57],{53:$VN,54:$VO,55:$VP,56:$VQ,57:$VR}),{1:[2,3]},o($Vn,[2,23]),o($Vn,[2,24]),o($Vn,[2,25]),o($Vn,[2,26]),o($Vn,[2,27]),o($VS,[2,54]),o([9,18,27,53],[2,48],{54:$VO,55:$VP,56:$VQ,57:$VR}),o($VT,[2,49],{55:$VP,56:$VQ,57:$VR}),o($VT,[2,50],{56:$VQ,57:$VR}),o($VU,[2,51]),o($VU,[2,52]),{9:[1,175]},o($VS,[2,60]),{9:[1,176],27:[1,177]},{9:[1,178],27:[1,179]},o($VS,[2,41]),{8:$VM,19:$V6,24:99,40:98,45:180,58:$Vo,59:94,60:$Vp,61:96,62:97,63:$Vq,64:$Vr,65:$Vs,66:$Vt,67:$Vu,68:$Vv,69:$Vw,70:$Vx,71:$Vy,72:$Vz,73:$VA,74:$VB,75:$VC,76:$VD,77:$VE,78:$VF,79:$VG,80:$VH,81:118,82:$VI,83:$VJ,84:$VK},{6:$V8,10:70,18:$Vb,19:$V6,24:73,31:181,32:$Vc,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,38:$Vi,39:65,40:66,41:67,42:68,43:69,44:$Vj,47:$Vk,50:$Vl,51:$Vm},{6:$V8,10:70,18:$Vb,19:$V6,24:73,31:182,32:$Vc,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,38:$Vi,39:65,40:66,41:67,42:68,43:69,44:$Vj,47:$Vk,50:$Vl,51:$Vm},{6:$V8,10:70,18:$Vb,19:$V6,24:73,31:183,32:$Vc,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,38:$Vi,39:65,40:66,41:67,42:68,43:69,44:$Vj,47:$Vk,50:$Vl,51:$Vm},o($VS,[2,58]),o($VS,[2,83]),{81:184,84:$VK},o($VS,[2,84]),{81:185,84:$VK},o($Va,[2,42],{53:$VN,54:$VO,55:$VP,56:$VQ,57:$VR}),o($V9,[2,44],{49:[1,186]}),o($Vn,[2,46]),o($Vn,[2,47]),{9:[1,187]},{9:[1,188]},{6:$V8,10:70,18:$Vb,19:$V6,24:73,31:189,32:$Vc,33:$Vd,34:$Ve,35:$Vf,36:$Vg,37:$Vh,38:$Vi,39:65,40:66,41:67,42:68,43:69,44:$Vj,47:$Vk,50:$Vl,51:$Vm},o($VS,[2,85]),o($VS,[2,86]),o($Vn,[2,45])],\ndefaultActions: {19:[2,18],20:[2,19],21:[2,20],23:[2,9],24:[2,10],55:[2,2],78:[2,15],81:[2,1],127:[2,4],133:[2,37],154:[2,3]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    // _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: lexer.yylloc, // Implement fix: https://github.com/zaach/jison/pull/356\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n\r\nconst COMPILER= \"RKJ 1.0.0\";\r\nconst LANG = \"ReKarel Java\";\r\nconst VarsAsFuncs = false;\r\nconst reqsPrototypes = false;\r\n//Tag counter\r\nlet tagCnt = 1;\r\n\r\n\r\nfunction UniqueTag(tag) {\r\n  return `${tag}.${tagCnt++}`;\r\n}\r\nfunction resetCompiler(tag) {\r\n  tagCnt = 1;\r\n}\r\n\r\nfunction mergeLocs(first, second) {\r\n  return {\r\n    first_line: first.first_line,\r\n    first_column: first.first_column,\r\n    last_line: second.last_line,\r\n    last_column: second.last_column,\r\n  }\r\n}\r\n\r\nfunction locToIR(loc) {\r\n  return [\r\n    \"LINE\",\r\n    loc.first_line - 1,\r\n    loc.first_column\r\n  ]\r\n}\r\n\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nswitch($avoiding_name_collisions) {\ncase 0:/* ignore */\nbreak;\ncase 1:/* ignore */\nbreak;\ncase 2:/* ignore */\nbreak;\ncase 3: return 4; \ncase 4: return 5; \ncase 5: return 28; \ncase 6: return 16; \ncase 7: return 28; \ncase 8: return 29; \ncase 9: return 30; \ncase 10: return 44; \ncase 11: return 36; \ncase 12: return 33; \ncase 13: return 32; \ncase 14: return 34; \ncase 15: return 35; \ncase 16: return 37; \ncase 17: return 38; \ncase 18: return 50; \ncase 19: return 51; \ncase 20: return 83; \ncase 21: return 82; \ncase 22: return 60; \ncase 23: return 63; \ncase 24: return 64; \ncase 25: return 65; \ncase 26: return 66; \ncase 27: return 67; \ncase 28: return 68; \ncase 29: return 69; \ncase 30: return 70; \ncase 31: return 71; \ncase 32: return 72; \ncase 33: return 74; \ncase 34: return 76; \ncase 35: return 75; \ncase 36: return 73; \ncase 37: return 78; \ncase 38: return 80; \ncase 39: return 79; \ncase 40: return 77; \ncase 41: return 49; \ncase 42: return 47; \ncase 43: return 58; \ncase 44: return 53; \ncase 45: return 54; \ncase 46: return 54; \ncase 47: return 8; \ncase 48: return 9; \ncase 49: return 6; \ncase 50: return 11; \ncase 51: return 18; \ncase 52: return 20; \ncase 53: return 21; \ncase 54: return 27; \ncase 55: return 55; \ncase 56: return 57; \ncase 57: return 56; \ncase 58: return 84; \ncase 59: return 19; \ncase 60: return 12; \n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\/\\/[^\\n]*)/,/^(?:\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)/,/^(?:class\\b)/,/^(?:program\\b)/,/^(?:define\\b)/,/^(?:import\\b)/,/^(?:void\\b)/,/^(?:int\\b)/,/^(?:bool\\b)/,/^(?:return\\b)/,/^(?:turnoff\\b)/,/^(?:turnleft\\b)/,/^(?:move\\b)/,/^(?:pickbeeper\\b)/,/^(?:putbeeper\\b)/,/^(?:continue\\b)/,/^(?:break\\b)/,/^(?:while\\b)/,/^(?:iterate\\b)/,/^(?:pred\\b)/,/^(?:succ\\b)/,/^(?:iszero\\b)/,/^(?:frontIsClear\\b)/,/^(?:frontIsBlocked\\b)/,/^(?:leftIsClear\\b)/,/^(?:leftIsBlocked\\b)/,/^(?:rightIsClear\\b)/,/^(?:rightIsBlocked\\b)/,/^(?:nextToABeeper\\b)/,/^(?:notNextToABeeper\\b)/,/^(?:anyBeepersInBeeperBag\\b)/,/^(?:noBeepersInBeeperBag\\b)/,/^(?:facingNorth\\b)/,/^(?:facingSouth\\b)/,/^(?:facingEast\\b)/,/^(?:facingWest\\b)/,/^(?:notFacingNorth\\b)/,/^(?:notFacingSouth\\b)/,/^(?:notFacingEast\\b)/,/^(?:notFacingWest\\b)/,/^(?:else\\b)/,/^(?:if\\b)/,/^(?:!)/,/^(?:\\|\\|)/,/^(?:&&)/,/^(?:&)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{)/,/^(?:\\})/,/^(?:;)/,/^(?:\\.)/,/^(?:\\*)/,/^(?:,)/,/^(?:==)/,/^(?:<=)/,/^(?:<)/,/^(?:[0-9]+)/,/^(?:[A-Za-zÀ-ÖØ-öø-ÿ_][A-Za-zÀ-ÖØ-öø-ÿ0-9_-]*)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\nfunction javaParser$1() {\n    return kareljava.parse.apply(kareljava, arguments);\n}\n\n/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar karelpascal = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,16],$V2=[1,17],$V3=[1,18],$V4=[1,13],$V5=[1,14],$V6=[1,15],$V7=[5,13],$V8=[9,15],$V9=[2,28],$Va=[1,47],$Vb=[1,28],$Vc=[1,29],$Vd=[1,30],$Ve=[1,31],$Vf=[1,32],$Vg=[1,33],$Vh=[1,34],$Vi=[1,40],$Vj=[1,41],$Vk=[1,44],$Vl=[1,45],$Vm=[1,46],$Vn=[1,58],$Vo=[9,15,50],$Vp=[9,15,50,58],$Vq=[1,62],$Vr=[1,61],$Vs=[1,64],$Vt=[1,69],$Vu=[1,70],$Vv=[1,71],$Vw=[1,72],$Vx=[1,73],$Vy=[1,74],$Vz=[1,75],$VA=[1,76],$VB=[1,77],$VC=[1,78],$VD=[1,79],$VE=[1,80],$VF=[1,81],$VG=[1,82],$VH=[1,83],$VI=[1,84],$VJ=[1,85],$VK=[1,86],$VL=[1,88],$VM=[1,89],$VN=[1,90],$VO=[1,91],$VP=[7,30,31,32,33,34,35],$VQ=[1,108],$VR=[1,109],$VS=[1,110],$VT=[1,111],$VU=[1,112],$VV=[9,15,24,29,50,57,58,60,63,64,65,66,67,68],$VW=[24,29],$VX=[9,15,24,29,50,57,58,60,63,64,65],$VY=[9,15,24,29,50,57,58,60,63,64,65,66];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"program\":3,\"import_list\":4,\"BEGINPROG\":5,\"def_list\":6,\"BEGINEXEC\":7,\"expr_list\":8,\"ENDEXEC\":9,\"ENDPROG\":10,\"EOF\":11,\"import\":12,\"IMPORT\":13,\"package\":14,\";\":15,\"VAR\":16,\".\":17,\"*\":18,\"def\":19,\"prototype_type\":20,\"var\":21,\"(\":22,\"paramList\":23,\")\":24,\"funct_type\":25,\"AS\":26,\"expr\":27,\"param\":28,\",\":29,\"DEF_INT\":30,\"DEF_BOOL\":31,\"DEF\":32,\"PROTO_INT\":33,\"PROTO_BOOL\":34,\"PROTO\":35,\"genexpr\":36,\"FORWARD\":37,\"LEFT\":38,\"PICKBUZZER\":39,\"LEAVEBUZZER\":40,\"HALT\":41,\"CONTINUE\":42,\"BREAK\":43,\"return\":44,\"call\":45,\"cond\":46,\"loop\":47,\"repeat\":48,\"BEGIN\":49,\"END\":50,\"RET\":51,\"term\":52,\"parameteredCall\":53,\"int_termList\":54,\"IF\":55,\"bool_term\":56,\"THEN\":57,\"ELSE\":58,\"WHILE\":59,\"DO\":60,\"REPEAT\":61,\"int_term\":62,\"TIMES\":63,\"OR\":64,\"AND\":65,\"==\":66,\"<\":67,\"<=\":68,\"NOT\":69,\"clause\":70,\"IFZ\":71,\"bool_fun\":72,\"integer\":73,\"IFNFWALL\":74,\"IFFWALL\":75,\"IFNLWALL\":76,\"IFLWALL\":77,\"IFNRWALL\":78,\"IFRWALL\":79,\"IFWBUZZER\":80,\"IFNWBUZZER\":81,\"IFBBUZZER\":82,\"IFNBBUZZER\":83,\"IFW\":84,\"IFN\":85,\"IFE\":86,\"IFS\":87,\"IFNW\":88,\"IFNN\":89,\"IFNE\":90,\"IFNS\":91,\"int_literal\":92,\"INC\":93,\"DEC\":94,\"NUM\":95,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"BEGINPROG\",7:\"BEGINEXEC\",9:\"ENDEXEC\",10:\"ENDPROG\",11:\"EOF\",13:\"IMPORT\",15:\";\",16:\"VAR\",17:\".\",18:\"*\",22:\"(\",24:\")\",26:\"AS\",29:\",\",30:\"DEF_INT\",31:\"DEF_BOOL\",32:\"DEF\",33:\"PROTO_INT\",34:\"PROTO_BOOL\",35:\"PROTO\",37:\"FORWARD\",38:\"LEFT\",39:\"PICKBUZZER\",40:\"LEAVEBUZZER\",41:\"HALT\",42:\"CONTINUE\",43:\"BREAK\",49:\"BEGIN\",50:\"END\",51:\"RET\",55:\"IF\",57:\"THEN\",58:\"ELSE\",59:\"WHILE\",60:\"DO\",61:\"REPEAT\",63:\"TIMES\",64:\"OR\",65:\"AND\",66:\"==\",67:\"<\",68:\"<=\",69:\"NOT\",71:\"IFZ\",74:\"IFNFWALL\",75:\"IFFWALL\",76:\"IFNLWALL\",77:\"IFLWALL\",78:\"IFNRWALL\",79:\"IFRWALL\",80:\"IFWBUZZER\",81:\"IFNWBUZZER\",82:\"IFBBUZZER\",83:\"IFNBBUZZER\",84:\"IFW\",85:\"IFN\",86:\"IFE\",87:\"IFS\",88:\"IFNW\",89:\"IFNN\",90:\"IFNE\",91:\"IFNS\",93:\"INC\",94:\"DEC\",95:\"NUM\"},\nproductions_: [0,[3,8],[3,7],[3,7],[3,6],[4,2],[4,1],[12,3],[14,3],[14,3],[6,3],[6,2],[19,2],[19,5],[19,4],[19,7],[23,3],[23,1],[28,1],[25,1],[25,1],[25,1],[20,1],[20,1],[20,1],[8,3],[8,1],[36,1],[36,0],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[27,3],[44,1],[44,2],[45,1],[45,1],[53,4],[54,3],[54,1],[46,4],[46,6],[47,4],[48,4],[52,3],[52,3],[52,3],[52,3],[52,3],[52,2],[52,3],[52,1],[56,1],[62,1],[70,4],[70,1],[70,1],[70,1],[70,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[73,1],[73,4],[73,4],[73,6],[73,6],[92,1],[21,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes, \r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: $$[$0-7],\r\n        functions: $$[$0-5],\r\n        program: $$[$0-3].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }; \r\ncase 2:\n \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes, \r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: $$[$0-6],\r\n        functions: [],\r\n        program: $$[$0-3].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }; \r\ncase 3:\n \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes,  \r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: [],\r\n        functions: $$[$0-5],\r\n        program: $$[$0-3].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }; \r\ncase 4:\n \r\n      resetCompiler();\r\n      return {\r\n        compiler: COMPILER,\r\n        language: LANG,\r\n        requieresFunctionPrototypes: reqsPrototypes, \r\n        variablesCanBeFunctions: VarsAsFuncs,\r\n        packages: [],\r\n        functions: [],\r\n        program: $$[$0-3].concat([['LINE', yylineno, 0], ['HALT']]),\r\n        yy:yy,\r\n      }; \r\ncase 5:\n this.$ = $$[$0-1].concat($$[$0]); \nbreak;\ncase 6: case 17: case 26: case 27: case 36: case 37: case 38: case 39: case 40: case 45: case 60:\n this.$ = $$[$0]; \nbreak;\ncase 7:\n this.$ = [[$$[$0-1], _$[$0-1]]]; \nbreak;\ncase 8:\n\r\n    this.$= $$[$0-2]+\".\"+$$[$0];\r\n  \nbreak;\ncase 9:\n\r\n    this.$= $$[$0-2]+\".*\";\r\n  \nbreak;\ncase 10:\n this.$ = $$[$0-2].concat($$[$0-1]); \nbreak;\ncase 11: case 41:\n this.$ = $$[$0-1]; \nbreak;\ncase 12:\n \r\n      this._$.first_line = _$[$0-1].first_line;\r\n      this._$.first_column = _$[$0-1].first_column;\r\n      this._$.last_line = _$[$0].last_line;\r\n      this._$.last_column = _$[$0].last_column;\r\n      this.$ = [{\r\n        name: $$[$0].toLowerCase(), \r\n        code: null, \r\n        params: [],  \r\n        loc: this._$,\r\n        returnType: $$[$0-1]\r\n      }]; \r\n    \nbreak;\ncase 13:\n \r\n      this._$.first_line = _$[$0-4].first_line;\r\n      this._$.first_column = _$[$0-4].first_column;\r\n      this._$.last_line = _$[$0].last_line;\r\n      this._$.last_column = _$[$0].last_column;\r\n      this.$ = [{\r\n        name: $$[$0-3].toLowerCase(), \r\n        code: null, \r\n        params: $$[$0-1],  \r\n        loc: this._$,\r\n        returnType: $$[$0-4]\r\n      }]; \r\n      \nbreak;\ncase 14:\n \r\n      this._$.first_line = _$[$0-3].first_line;\r\n      this._$.first_column = _$[$0-3].first_column;\r\n      this._$.last_line = _$[$0-2].last_line;\r\n      this._$.last_column = _$[$0-2].last_column;\r\n\r\n      this.$ = [{\r\n        name: $$[$0-2].toLowerCase(),  \r\n        code: [\r\n          locToIR(_$[$0-2]),\r\n          ...$$[$0],\r\n          ['RET', '__DEFAULT', {\r\n            first_line: _$[$0].last_line,\r\n            first_column: _$[$0].last_column,\r\n            last_line: _$[$0].last_line,\r\n            last_column: _$[$0].last_column,\r\n          }]\r\n        ],\r\n        params: [], \r\n        loc: this._$,\r\n        returnType: $$[$0-3]\r\n      }]; \r\n    \nbreak;\ncase 15:\n\r\n      \r\n      this._$.first_line = _$[$0-6].first_line;\r\n      this._$.first_column = _$[$0-6].first_column;\r\n      this._$.last_line = _$[$0-5].last_line;\r\n      this._$.last_column = _$[$0-5].last_column;\r\n\r\n    \tthis.$ = [{\r\n        name: $$[$0-5].toLowerCase(),\r\n        code: [\r\n          locToIR(_$[$0-5]),\r\n          ...$$[$0],\r\n          ['RET', '__DEFAULT', {\r\n            first_line: _$[$0].last_line,\r\n            first_column: _$[$0].last_column,\r\n            last_line: _$[$0].last_line,\r\n            last_line: _$[$0].last_column,\r\n          }]\r\n        ],\r\n        params: $$[$0-3],\r\n        loc: this._$,        \r\n        returnType: $$[$0-6]\r\n      }];\r\n    \nbreak;\ncase 16:\n this.$=$$[$0-2].concat($$[$0]); \nbreak;\ncase 18:\n \r\n      this.$= [{\r\n        name: $$[$0],\r\n        loc: _$[$0]\r\n      }];\r\n    \nbreak;\ncase 19: case 22:\n this.$ = \"INT\"; \nbreak;\ncase 20: case 23:\n this.$ = \"BOOL\"; \nbreak;\ncase 21: case 24:\n this.$ = \"VOID\"; \nbreak;\ncase 25:\n this.$ = $$[$0-2].concat($$[$0]); \nbreak;\ncase 28:\n this.$ = []; \nbreak;\ncase 29:\n this.$ = [locToIR(_$[$0]), ['FORWARD']]; \nbreak;\ncase 30:\n this.$ = [locToIR(_$[$0]), ['LEFT']]; \nbreak;\ncase 31:\n this.$ = [locToIR(_$[$0]), ['PICKBUZZER']]; \nbreak;\ncase 32:\n this.$ = [locToIR(_$[$0]), ['LEAVEBUZZER']]; \nbreak;\ncase 33:\n this.$ = [locToIR(_$[$0]), ['HALT']]; \nbreak;\ncase 34:\n this.$ = [locToIR(_$[$0]), ['CONTINUE', _$[$0]]]; \nbreak;\ncase 35:\n this.$ = [locToIR(_$[$0]), ['BREAK', _$[$0]]]; \nbreak;\ncase 42:\n this.$ = [\r\n      ['RET', {\r\n        term: { \r\n          operation: \"ATOM\", \r\n          instructions:[[\"LOAD\", 0]],\r\n          atomType: \"IMPLICIT.0\",\r\n          dataType:\"VOID\"\r\n        },\r\n        loc: _$[$0]\r\n      }]\r\n    ]; \nbreak;\ncase 43:\n this.$ = [\r\n      ['RET', {\r\n        term: $$[$0],\r\n        loc: _$[$0-1]\r\n      }]\r\n    ]; \nbreak;\ncase 44:\n \r\n      this.$ = [\r\n        [\r\n          'CALL', \r\n          {\r\n            target:$$[$0].toLowerCase(), \r\n            params: [],\r\n            nameLoc: _$[$0], \r\n            argLoc: _$[$0]\r\n          }\r\n        ]\r\n      ];\r\n    \nbreak;\ncase 46:\n \r\n      this.$ = [\r\n        [\r\n          'CALL', \r\n          {\r\n            target: $$[$0-3].toLowerCase(),\r\n            params: $$[$0-1],\r\n            nameLoc: _$[$0-3], \r\n            argLoc: _$[$0-1],\r\n          }\r\n        ]\r\n      ]; \r\n    \nbreak;\ncase 47:\n \r\n      this.$ = $$[$0-2].concat([\r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: _$[$0],\r\n          totalLoc: _$[$0]\r\n        } \r\n      ]);\r\n    \nbreak;\ncase 48:\n \r\n      this.$ = [\r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: _$[$0],\r\n          totalLoc: _$[$0]\r\n        } \r\n      ]; \r\n    \nbreak;\ncase 49:\n \r\n      const skipTag = UniqueTag('iskip');\r\n      this.$ = [[\r\n        \"IF\",\r\n        {\r\n          condition: $$[$0-2][0],\r\n          line: locToIR(_$[$0-3]),\r\n          skipTrueTag: skipTag,\r\n          trueCase: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 50:\n \r\n      const toElse = UniqueTag('ielse');\r\n      const skipElse = UniqueTag('iskipelse');\r\n      this.$ = [[\r\n        \"IF\",\r\n        {\r\n          condition: $$[$0-4][0],\r\n          line: locToIR(_$[$0-5]),\r\n          skipTrueTag: toElse,\r\n          skipFalseTag: skipElse,\r\n          trueCase: $$[$0-2],\r\n          falseCase: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 51:\n \r\n      const repeatTag = UniqueTag('lrepeat');\r\n      const endTag = UniqueTag('lend');\r\n      this.$ = [[\r\n        'WHILE',  \r\n        {\r\n          condition:   $$[$0-2][0],\r\n          line:         locToIR(_$[$0-3]),\r\n          repeatTag:    repeatTag,\r\n          endTag:       endTag,\r\n          instructions: $$[$0]\r\n        }\r\n      ]];\r\n    \nbreak;\ncase 52:\n \r\n      const repeatEnd = UniqueTag('rend');\r\n      const repeatLoop = UniqueTag('rloop');\r\n      const continueLoop = UniqueTag('rcontinue');\r\n      this.$ = [[\r\n        \"REPEAT\",\r\n        {\r\n          line:        locToIR(_$[$0-3]),\r\n          loopCount:   $$[$0-2][0],\r\n          repeatTag:   repeatLoop,\r\n          endTag:      repeatEnd,\r\n          continueTag: continueLoop,\r\n          instructions: $$[$0]\r\n        }\r\n      ]]; \r\n    \nbreak;\ncase 53:\n this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"OR\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$ \r\n      }; \nbreak;\ncase 54:\n \r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"AND\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 55:\n \r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"EQ\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 56:\n \r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"LT\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 57:\n \r\n      this.$ = {\r\n        left: $$[$0-2], \r\n        right: $$[$0], \r\n        operation: \"LTE\", \r\n        dataType:\"BOOL\",\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 58:\n \r\n      this.$ = {\r\n        term: $$[$0],       \r\n        operation: \"NOT\",\r\n        dataType:\"BOOL\" ,\r\n        loc: _$[$0-1],\r\n        totalLoc: this._$\r\n      };\r\n      \nbreak;\ncase 59:\n \r\n      this.$ = { \r\n        term: $$[$0-1],\r\n        operation: \"PARENTHESIS\",\r\n        dataType: $$[$0-1].dataType,\r\n        loc: $$[$0-1].loc,\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 61:\n \r\n      this.$ = [[\r\n        'TERM', \r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'BOOL',\r\n          loc: _$[$0],\r\n          totalLoc: _$[$0]\r\n        }    \r\n      ]];\r\n    \nbreak;\ncase 62:\n \r\n      this.$ = [[\r\n        'TERM', \r\n        {\r\n          term:$$[$0], \r\n          operation: 'PASS',\r\n          dataType: 'INT',\r\n          loc: _$[$0],\r\n          totalLoc: _$[$0]\r\n        }    \r\n      ]];\r\n    \nbreak;\ncase 63:\n \r\n       this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0-1].concat([['NOT']]),\r\n        dataType: \"BOOL\",\r\n        atomType: \"IS_ZERO\",\r\n        loc: _$[$0-3],\r\n        totalLoc: this._$\r\n      };\r\n    \nbreak;\ncase 64:\n \r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0].code,\r\n        atomType: $$[$0].name,\r\n        dataType: \"BOOL\",\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      }; \r\n    \nbreak;\ncase 65:\n\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: $$[$0].code,\r\n        atomType: $$[$0].data,\r\n        dataType: \"INT\",\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      }; \r\n      \r\n    \nbreak;\ncase 66:\n \r\n        const ir = [[\r\n          'VAR',\r\n          {\r\n            target: $$[$0].toLowerCase(), \r\n            loc: _$[$0], \r\n            couldBeFunction: true\r\n          }\r\n        ]]; \r\n        this.$ = {\r\n          operation: \"ATOM\",\r\n          instructions: ir,\r\n          dataType: \"$\"+$$[$0].toLowerCase(),\r\n          atomType: `VAR.${$$[$0].toLowerCase()}`,\r\n          loc: _$[$0],\r\n          totalLoc: _$[$0]\r\n        }; \r\n      \nbreak;\ncase 67:\n \r\n      const callIR = $$[$0];\r\n      const callData = callIR[0][1];\r\n      this.$ = {\r\n        operation: \"ATOM\",\r\n        instructions: [...callIR, ['LRET']],\r\n        dataType: \"$\"+callData.target,\r\n        atomType: \"CALL\",\r\n        loc: _$[$0],\r\n        totalLoc: _$[$0]\r\n      };\r\n    \nbreak;\ncase 68:\n\r\n      this.$ = {\r\n        name: \"IFNFWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['MASK'], ['AND'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 69:\n\r\n      this.$ = {\r\n        name: \"IFFWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['MASK'], ['AND']]\r\n      };\r\n    \nbreak;\ncase 70:\n\r\n      this.$ = {\r\n        name: \"IFNLWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTL'], ['MASK'], ['AND'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 71:\n\r\n      this.$ = {\r\n        name: \"IFLWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTL'], ['MASK'], ['AND']]\r\n      };\r\n    \nbreak;\ncase 72:\n\r\n      this.$ = {\r\n        name: \"IFNRWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTR'], ['MASK'], ['AND'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 73:\n\r\n      this.$ = {\r\n        name: \"IFRWALL\",\r\n        code: [['WORLDWALLS'], ['ORIENTATION'], ['ROTR'], ['MASK'], ['AND']]\r\n      };\r\n    \nbreak;\ncase 74:\n\r\n      this.$ = {\r\n        name: \"IFWBUZZER\",\r\n        code: [['WORLDBUZZERS'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 75:\n\r\n      this.$ = {\r\n        name: \"IFNWBUZZER\",\r\n        code: [['WORLDBUZZERS'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 76:\n\r\n      this.$ = {\r\n        name: \"IFBBUZZER\",\r\n        code: [['BAGBUZZERS'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 77:\n\r\n      this.$ = {\r\n        name: \"IFNBBUZZER\",\r\n        code: [['BAGBUZZERS'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 78:\n\r\n      this.$ = {\r\n        name: \"IFW\",\r\n        code: [['ORIENTATION'], ['LOAD', 0], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 79:\n\r\n      this.$ = {\r\n        name: \"IFN\",\r\n        code: [['ORIENTATION'], ['LOAD', 1], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 80:\n\r\n      this.$ = {\r\n        name: \"IFE\",\r\n        code: [['ORIENTATION'], ['LOAD', 2], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 81:\n\r\n      this.$ = {\r\n        name: \"IFS\",\r\n        code: [['ORIENTATION'], ['LOAD', 3], ['EQ']]\r\n      };\r\n    \nbreak;\ncase 82:\n\r\n      this.$ = {\r\n        name: \"IFNW\",\r\n        code: [['ORIENTATION'], ['LOAD', 0], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 83:\n\r\n      this.$ = {\r\n        name: \"IFNN\",\r\n        code: [['ORIENTATION'], ['LOAD', 1], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 84:\n\r\n      this.$ = {\r\n        name: \"IFNE\",\r\n        code: [['ORIENTATION'], ['LOAD', 2], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 85:\n\r\n      this.$ = {\r\n        name: \"IFNS\",\r\n        code: [['ORIENTATION'], ['LOAD', 3], ['EQ'], ['NOT']]\r\n      };\r\n    \nbreak;\ncase 86:\n \r\n      this.$ = {\r\n        data: `NUMBER.${$$[$0]}`,\r\n        code: [['LOAD',  $$[$0]]]\r\n      }; \r\n    \nbreak;\ncase 87:\n \r\n      this.$ = {\r\n        data: \"INC\",\r\n        code: $$[$0-1].concat([['INC', 1]])\r\n      };\r\n    \nbreak;\ncase 88:\n \r\n      this.$ = {\r\n        data: \"DEC\",\r\n        code: $$[$0-1].concat([['DEC', 1]])\r\n      };\r\n    \nbreak;\ncase 89:\n \r\n      this.$ = {\r\n        data: `INC.${$$[$0-1]}`,\r\n        code: $$[$0-3].concat([['INC', $$[$0-1]]])\r\n      };\r\n    \nbreak;\ncase 90:\n \r\n      this.$ = {\r\n        data: `DEC.${$$[$0-1]}`,\r\n        code: $$[$0-3].concat([['DEC', $$[$0-1]]])\r\n      };\r\n    \nbreak;\ncase 91:\n this.$ = parseInt(yytext); \nbreak;\ncase 92:\n this.$ = yytext; \nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],12:4,13:$V0},{1:[3]},{5:[1,6],12:7,13:$V0},{6:8,7:[1,9],19:10,20:11,25:12,30:$V1,31:$V2,32:$V3,33:$V4,34:$V5,35:$V6},o($V7,[2,6]),{14:19,16:[1,20]},{6:21,7:[1,22],19:10,20:11,25:12,30:$V1,31:$V2,32:$V3,33:$V4,34:$V5,35:$V6},o($V7,[2,5]),{7:[1,23],19:24,20:11,25:12,30:$V1,31:$V2,32:$V3,33:$V4,34:$V5,35:$V6},o($V8,$V9,{8:25,36:26,27:27,44:35,45:36,46:37,47:38,48:39,21:42,53:43,16:$Va,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,49:$Vi,51:$Vj,55:$Vk,59:$Vl,61:$Vm}),{15:[1,48]},{16:$Va,21:49},{16:$Va,21:50},{16:[2,22]},{16:[2,23]},{16:[2,24]},{16:[2,19]},{16:[2,20]},{16:[2,21]},{15:[1,51]},{17:[1,52]},{7:[1,53],19:24,20:11,25:12,30:$V1,31:$V2,32:$V3,33:$V4,34:$V5,35:$V6},o($V8,$V9,{36:26,27:27,44:35,45:36,46:37,47:38,48:39,21:42,53:43,8:54,16:$Va,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,49:$Vi,51:$Vj,55:$Vk,59:$Vl,61:$Vm}),o($V8,$V9,{36:26,27:27,44:35,45:36,46:37,47:38,48:39,21:42,53:43,8:55,16:$Va,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,49:$Vi,51:$Vj,55:$Vk,59:$Vl,61:$Vm}),{15:[1,56]},{9:[1,57],15:$Vn},o($Vo,[2,26]),o($Vo,[2,27]),o($Vp,[2,29]),o($Vp,[2,30]),o($Vp,[2,31]),o($Vp,[2,32]),o($Vp,[2,33]),o($Vp,[2,34]),o($Vp,[2,35]),o($Vp,[2,36]),o($Vp,[2,37]),o($Vp,[2,38]),o($Vp,[2,39]),o($Vp,[2,40]),o([15,50],$V9,{36:26,27:27,44:35,45:36,46:37,47:38,48:39,21:42,53:43,8:59,16:$Va,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,49:$Vi,51:$Vj,55:$Vk,59:$Vl,61:$Vm}),o($Vp,[2,42],{52:60,70:63,72:65,73:66,21:67,53:68,92:87,16:$Va,22:$Vq,69:$Vr,71:$Vs,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,93:$VL,94:$VM,95:$VN}),o($Vp,[2,44],{22:$VO}),o($Vp,[2,45]),{16:$Va,21:67,22:$Vq,52:93,53:68,56:92,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{16:$Va,21:67,22:$Vq,52:93,53:68,56:94,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{16:$Va,21:67,22:$Vq,52:96,53:68,62:95,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},o([9,15,22,24,26,29,50,57,58,60,63,64,65,66,67,68],[2,92]),o($VP,[2,11]),{15:[2,12],22:[1,97]},{22:[1,99],26:[1,98]},o($V7,[2,7]),{16:[1,100],18:[1,101]},o($V8,$V9,{36:26,27:27,44:35,45:36,46:37,47:38,48:39,21:42,53:43,8:102,16:$Va,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,49:$Vi,51:$Vj,55:$Vk,59:$Vl,61:$Vm}),{9:[1,103],15:$Vn},{9:[1,104],15:$Vn},o($VP,[2,10]),{10:[1,105]},o($Vo,$V9,{27:27,44:35,45:36,46:37,47:38,48:39,21:42,53:43,36:106,16:$Va,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,49:$Vi,51:$Vj,55:$Vk,59:$Vl,61:$Vm}),{15:$Vn,50:[1,107]},o($Vp,[2,43],{64:$VQ,65:$VR,66:$VS,67:$VT,68:$VU}),{16:$Va,21:67,22:$Vq,52:113,53:68,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{16:$Va,21:67,22:$Vq,52:114,53:68,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},o($VV,[2,60]),{22:[1,115]},o($VV,[2,64]),o($VV,[2,65]),o($VV,[2,66],{22:$VO}),o($VV,[2,67]),o($VV,[2,68]),o($VV,[2,69]),o($VV,[2,70]),o($VV,[2,71]),o($VV,[2,72]),o($VV,[2,73]),o($VV,[2,74]),o($VV,[2,75]),o($VV,[2,76]),o($VV,[2,77]),o($VV,[2,78]),o($VV,[2,79]),o($VV,[2,80]),o($VV,[2,81]),o($VV,[2,82]),o($VV,[2,83]),o($VV,[2,84]),o($VV,[2,85]),o($VV,[2,86]),{22:[1,116]},{22:[1,117]},o($VV,[2,91]),{16:$Va,21:67,22:$Vq,52:119,53:68,54:118,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{57:[1,120]},o([57,60],[2,61],{64:$VQ,65:$VR,66:$VS,67:$VT,68:$VU}),{60:[1,121]},{63:[1,122]},o([24,29,63],[2,62],{64:$VQ,65:$VR,66:$VS,67:$VT,68:$VU}),{16:$Va,21:125,23:123,28:124},{16:$Va,21:42,27:126,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,44:35,45:36,46:37,47:38,48:39,49:$Vi,51:$Vj,53:43,55:$Vk,59:$Vl,61:$Vm},{16:$Va,21:125,23:127,28:124},{15:[2,8]},{15:[2,9]},{9:[1,128],15:$Vn},{10:[1,129]},{10:[1,130]},{11:[1,131]},o($Vo,[2,25]),o($Vp,[2,41]),{16:$Va,21:67,22:$Vq,52:132,53:68,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{16:$Va,21:67,22:$Vq,52:133,53:68,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{16:$Va,21:67,22:$Vq,52:134,53:68,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{16:$Va,21:67,22:$Vq,52:135,53:68,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{16:$Va,21:67,22:$Vq,52:136,53:68,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},o($VV,[2,58]),{24:[1,137],64:$VQ,65:$VR,66:$VS,67:$VT,68:$VU},{16:$Va,21:67,22:$Vq,52:96,53:68,62:138,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{16:$Va,21:67,22:$Vq,52:96,53:68,62:139,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{16:$Va,21:67,22:$Vq,52:96,53:68,62:140,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},{24:[1,141],29:[1,142]},o($VW,[2,48],{64:$VQ,65:$VR,66:$VS,67:$VT,68:$VU}),{16:$Va,21:42,27:143,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,44:35,45:36,46:37,47:38,48:39,49:$Vi,51:$Vj,53:43,55:$Vk,59:$Vl,61:$Vm},{16:$Va,21:42,27:144,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,44:35,45:36,46:37,47:38,48:39,49:$Vi,51:$Vj,53:43,55:$Vk,59:$Vl,61:$Vm},{16:$Va,21:42,27:145,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,44:35,45:36,46:37,47:38,48:39,49:$Vi,51:$Vj,53:43,55:$Vk,59:$Vl,61:$Vm},{24:[1,146]},{24:[2,17],29:[1,147]},o($VW,[2,18]),{15:[2,14]},{24:[1,148]},{10:[1,149]},{11:[1,150]},{11:[1,151]},{1:[2,4]},o([9,15,24,29,50,57,58,60,63,64],[2,53],{65:$VR,66:$VS,67:$VT,68:$VU}),o($VX,[2,54],{66:$VS,67:$VT,68:$VU}),o($VX,[2,55],{67:$VT,68:$VU}),o($VY,[2,56]),o($VY,[2,57]),o($VV,[2,59]),{24:[1,152]},{24:[1,153],29:[1,154]},{24:[1,155],29:[1,156]},o($VV,[2,46]),{16:$Va,21:67,22:$Vq,52:157,53:68,69:$Vr,70:63,71:$Vs,72:65,73:66,74:$Vt,75:$Vu,76:$Vv,77:$Vw,78:$Vx,79:$Vy,80:$Vz,81:$VA,82:$VB,83:$VC,84:$VD,85:$VE,86:$VF,87:$VG,88:$VH,89:$VI,90:$VJ,91:$VK,92:87,93:$VL,94:$VM,95:$VN},o($Vo,[2,49],{58:[1,158]}),o($Vp,[2,51]),o($Vp,[2,52]),{15:[2,13]},{16:$Va,21:125,23:159,28:124},{26:[1,160]},{11:[1,161]},{1:[2,2]},{1:[2,3]},o($VV,[2,63]),o($VV,[2,87]),{92:162,95:$VN},o($VV,[2,88]),{92:163,95:$VN},o($VW,[2,47],{64:$VQ,65:$VR,66:$VS,67:$VT,68:$VU}),{16:$Va,21:42,27:164,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,44:35,45:36,46:37,47:38,48:39,49:$Vi,51:$Vj,53:43,55:$Vk,59:$Vl,61:$Vm},{24:[2,16]},{16:$Va,21:42,27:165,37:$Vb,38:$Vc,39:$Vd,40:$Ve,41:$Vf,42:$Vg,43:$Vh,44:35,45:36,46:37,47:38,48:39,49:$Vi,51:$Vj,53:43,55:$Vk,59:$Vl,61:$Vm},{1:[2,1]},{24:[1,166]},{24:[1,167]},o($Vp,[2,50]),{15:[2,15]},o($VV,[2,89]),o($VV,[2,90])],\ndefaultActions: {13:[2,22],14:[2,23],15:[2,24],16:[2,19],17:[2,20],18:[2,21],100:[2,8],101:[2,9],126:[2,14],131:[2,4],146:[2,13],150:[2,2],151:[2,3],159:[2,16],161:[2,1],165:[2,15]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    // _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: lexer.yylloc, // Implement fix: https://github.com/zaach/jison/pull/356\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n\r\nconst COMPILER= \"RKP 1.0.0\";\r\nconst LANG = \"ReKarel Pascal\";\r\nconst VarsAsFuncs = true;\r\nconst reqsPrototypes = false;\r\n\r\nlet tagCnt = 1;\r\n\r\nfunction UniqueTag(tag) {\r\n  return `${tag}.${tagCnt++}`;\r\n}\r\nfunction resetCompiler(tag) {\r\n  tagCnt = 1;\r\n}\r\n\r\nfunction locToIR(loc) {\r\n  return [\r\n    \"LINE\",\r\n    loc.first_line - 1,\r\n    loc.first_column\r\n  ]\r\n}\r\n\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"flex\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nswitch($avoiding_name_collisions) {\ncase 0:/* ignore */\nbreak;\ncase 1:/* ignore */\nbreak;\ncase 2:/* ignore */\nbreak;\ncase 3: return 5; \ncase 4: return 7; \ncase 5: return 7; \ncase 6: return 9; \ncase 7: return 9; \ncase 8: return 10; \ncase 9: return 32; \ncase 10: return 32; \ncase 11: return 32; \ncase 12: return 13; \ncase 13: return 35; \ncase 14: return 35; \ncase 15: return 33; \ncase 16: return 33; \ncase 17: return 30; \ncase 18: return 30; \ncase 19: return 34; \ncase 20: return 34; \ncase 21: return 31; \ncase 22: return 31; \ncase 23: return 51; \ncase 24: return 51; \ncase 25: return 51; \ncase 26: return 26; \ncase 27: return 41; \ncase 28: return 41; \ncase 29: return 38; \ncase 30: return 37; \ncase 31: return 39; \ncase 32: return 40; \ncase 33: return 42; \ncase 34: return 42; \ncase 35: return 43; \ncase 36: return 49; \ncase 37: return 50; \ncase 38: return 57; \ncase 39: return 59; \ncase 40: return 60; \ncase 41: return 61; \ncase 42: return 63; \ncase 43: return 94; \ncase 44: return 93; \ncase 45: return 71; \ncase 46: return 71; \ncase 47: return 74; \ncase 48: return 75; \ncase 49: return 76; \ncase 50: return 77; \ncase 51: return 78; \ncase 52: return 79; \ncase 53: return 80; \ncase 54: return 81; \ncase 55: return 82; \ncase 56: return 82; \ncase 57: return 83; \ncase 58: return 83; \ncase 59: return 85; \ncase 60: return 87; \ncase 61: return 86; \ncase 62: return 84; \ncase 63: return 89; \ncase 64: return 91; \ncase 65: return 90; \ncase 66: return 88; \ncase 67: return 58; \ncase 68: return 58; \ncase 69: return 55; \ncase 70: return 69; \ncase 71: return 64; \ncase 72: return 64; \ncase 73: return 65; \ncase 74: return 65; \ncase 75: return 22; \ncase 76: return 24; \ncase 77: return 15; \ncase 78: return 17; \ncase 79: return 29; \ncase 80: return 18; \ncase 81: return 66; \ncase 82: return 68; \ncase 83: return 67; \ncase 84: return 95; \ncase 85: return 16; \ncase 86: return 11; \ncase 87:console.log(yy_.yytext);\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\{[^}]*\\})/,/^(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\))/,/^(?:iniciar-programa)/,/^(?:inicia-ejecucion)/,/^(?:inicia-ejecución)/,/^(?:termina-ejecucion)/,/^(?:termina-ejecución)/,/^(?:finalizar-programa)/,/^(?:define-nueva-instruccion)/,/^(?:define-nueva-instrucción)/,/^(?:define)/,/^(?:usa)/,/^(?:define-prototipo-instruccion)/,/^(?:define-prototipo-instrucción)/,/^(?:define-prototipo-calculo)/,/^(?:define-prototipo-cálculo)/,/^(?:define-calculo)/,/^(?:define-cálculo)/,/^(?:define-prototipo-condicion)/,/^(?:define-prototipo-condición)/,/^(?:define-condicion)/,/^(?:define-condición)/,/^(?:sal-de-instruccion)/,/^(?:sal-de-instrucción)/,/^(?:regresa)/,/^(?:como)/,/^(?:apagate)/,/^(?:apágate)/,/^(?:gira-izquierda)/,/^(?:avanza)/,/^(?:coge-zumbador)/,/^(?:deja-zumbador)/,/^(?:continua)/,/^(?:continúa)/,/^(?:rompe)/,/^(?:inicio)/,/^(?:fin)/,/^(?:entonces)/,/^(?:mientras)/,/^(?:hacer)/,/^(?:repetir)/,/^(?:veces)/,/^(?:precede)/,/^(?:sucede)/,/^(?:si-es-cero)/,/^(?:es-cero)/,/^(?:frente-libre)/,/^(?:frente-bloqueado)/,/^(?:izquierda-libre)/,/^(?:izquierda-bloqueada)/,/^(?:derecha-libre)/,/^(?:derecha-bloqueada)/,/^(?:junto-a-zumbador)/,/^(?:no-junto-a-zumbador)/,/^(?:algun-zumbador-en-la-mochila)/,/^(?:algún-zumbador-en-la-mochila)/,/^(?:ningun-zumbador-en-la-mochila)/,/^(?:ningún-zumbador-en-la-mochila)/,/^(?:orientado-al-norte)/,/^(?:orientado-al-sur)/,/^(?:orientado-al-este)/,/^(?:orientado-al-oeste)/,/^(?:no-orientado-al-norte)/,/^(?:no-orientado-al-sur)/,/^(?:no-orientado-al-este)/,/^(?:no-orientado-al-oeste)/,/^(?:sino)/,/^(?:si-no)/,/^(?:si)/,/^(?:no)/,/^(?:o)/,/^(?:u)/,/^(?:y)/,/^(?:e)/,/^(?:\\()/,/^(?:\\))/,/^(?:;)/,/^(?:\\.)/,/^(?:,)/,/^(?:\\*)/,/^(?:==)/,/^(?:<=)/,/^(?:<)/,/^(?:[0-9]+)/,/^(?:[A-Za-zÀ-ÖØ-öø-ÿ_][A-Za-zÀ-ÖØ-öø-ÿ0-9_-]*)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\nfunction pascalParser$1 () {\n    return karelpascal.parse.apply(karelpascal, arguments);\n}\n\nfunction UnitePackages(packages) {\n    const booleans = new Map();\n    const numbers = new Map();\n    for (const pack of packages) {\n        pack.numberVariables.forEach((value, key, _) => {\n            numbers.set(key, value);\n        });\n        pack.booleanVariables.forEach((value, key, _) => {\n            booleans.set(key, value);\n        });\n    }\n    return {\n        booleanVariables: booleans,\n        numberVariables: numbers\n    };\n}\n\nconst javaNumbers = new Map();\nconst javaBooleans = new Map();\njavaNumbers.set(\"beepersInBeeperBag\", [[\"BAGBUZZERS\"]]);\njavaNumbers.set(\"beepersOnFloor\", [[\"WORLDBUZZERS\"]]);\njavaNumbers.set(\"currentRow\", [[\"ROW\"]]);\njavaNumbers.set(\"currentColumn\", [[\"COLUMN\"]]);\njavaBooleans.set(\"true\", [[\"LOAD\", 1]]);\njavaBooleans.set(\"false\", [[\"LOAD\", 0]]);\nconst rekarelGlobalsJava = {\n    booleanVariables: javaBooleans,\n    numberVariables: javaNumbers\n};\nconst pascalNumbers = new Map();\nconst pascalBooleans = new Map();\npascalNumbers.set(\"zumbadores-en-la-mochila\", [[\"BAGBUZZERS\"]]);\npascalNumbers.set(\"zumbadores-del-piso\", [[\"WORLDBUZZERS\"]]);\npascalNumbers.set(\"columna-actual\", [[\"COLUMN\"]]);\npascalNumbers.set(\"fila-actual\", [[\"ROW\"]]);\npascalBooleans.set(\"verdadero\", [[\"LOAD\", 1]]);\npascalBooleans.set(\"falso\", [[\"LOAD\", 0]]);\nconst rekarelGlobalsPascal = {\n    booleanVariables: pascalBooleans,\n    numberVariables: pascalNumbers\n};\n\nconst java = [rekarelGlobalsJava];\nconst JavaPackages = {\n    \"rekarel.globals\": rekarelGlobalsJava,\n    \"rekarel.*\": UnitePackages(java)\n};\nconst pascal = [rekarelGlobalsPascal];\nconst PascalPackages = {\n    \"rekarel.globales\": rekarelGlobalsPascal,\n    \"rekarel.*\": UnitePackages(pascal)\n};\n\n/**\n * Represents a table with all the definitions. It maps identifiers to functions and variables\n */\nclass DefinitionTable {\n    constructor(variablesCanBeFunctions) {\n        this.functions = new Map();\n        this.variables = new Map();\n        this.variablesCanBeFunctions = variablesCanBeFunctions;\n        this.tagCounter = 0;\n    }\n    /**\n     * Checks the dataType that a variable is or a function returns.\n     * @param identifier The identifier\n     * @returns The data type the identifier is linked to\n     *\n     * @public\n     */\n    getType(identifier) {\n        if (this.variables.has(identifier)) {\n            return this.variables.get(identifier).dataType;\n        }\n        if (this.functions.has(identifier)) {\n            return this.functions.get(identifier).returnType;\n        }\n        return \"undefined\";\n    }\n    /**\n     * Register a function from\n     * @param func The Function data\n     */\n    registerFunction(func) {\n        this.functions.set(func.name, {\n            arguments: func.params,\n            location: 0,\n            returnType: func.returnType\n        });\n    }\n    /**\n     * Tests if a function is in the definition\n     * @param name Function name\n     * @returns true if the function exists, otherwise false\n     */\n    hasFunction(name) {\n        return this.functions.has(name);\n    }\n    /**\n     * Gets the Function data\n     * @param name Function name\n     * @returns Function data, or undefined if this does not exist.\n     */\n    getFunction(name) {\n        return this.functions.get(name);\n    }\n    /**\n     *\n     * @param target Function name\n     * @param location References which instruction of the program is the first instruction of this program used by the CALL instruction,\n     */\n    setFunctionLoc(target, location) {\n        this.functions.get(target).location = location;\n    }\n    /**\n     * Registers a variable\n     * @param name Variable name\n     * @param val Variable data\n     */\n    registerVar(name, val) {\n        this.variables.set(name, val);\n    }\n    /**\n     * Checks if a variable is defined\n     * @param name The variable name\n     * @returns true if the variable exists, otherwise false\n     */\n    hasVar(name) {\n        return this.variables.has(name);\n    }\n    /**\n     * Gets the variable data\n     * @param name variable name\n     * @returns The variable data, or undefined if it does not exist\n     */\n    getVar(name) {\n        return this.variables.get(name);\n    }\n    /**\n     * Gets a unique tag in the format of 'name.number'\n     * @param name a hint to be included in the unique tag\n     * @returns the unique tag\n     *\n     * @example\n     * getUniqueTag('a')\n     *   > 'a.0'\n     * getUniqueTag('a')\n     *   > 'a.1'\n     * getUniqueTag('b')\n     *   > 'a.2'\n     *\n     */\n    getUniqueTag(name) {\n        return `${name}.${this.tagCounter++}`;\n    }\n}\n\n/**\n * Namespace holding the compilation error types and enums\n * An ErrorStatus is formatted the following way:\n * @param error - An CompilationError.Errors representing the error type\n * @param loc - A YYLoc representing the location of the error\n * @param line - number representing the line where the error happened\n */\nvar CompilationError;\n(function (CompilationError) {\n    (function (Errors) {\n        Errors[Errors[\"BINARY_OPERATOR_TYPE_ERROR\"] = 0] = \"BINARY_OPERATOR_TYPE_ERROR\";\n        Errors[Errors[\"CALL_TYPE\"] = 1] = \"CALL_TYPE\";\n        Errors[Errors[\"COMPARISON_TYPE\"] = 2] = \"COMPARISON_TYPE\";\n        Errors[Errors[\"FUNCTION_ILLEGAL_NAME\"] = 3] = \"FUNCTION_ILLEGAL_NAME\";\n        Errors[Errors[\"FUNCTION_REDEFINITION\"] = 4] = \"FUNCTION_REDEFINITION\";\n        Errors[Errors[\"ILLEGAL_BREAK\"] = 5] = \"ILLEGAL_BREAK\";\n        Errors[Errors[\"ILLEGAL_CONTINUE\"] = 6] = \"ILLEGAL_CONTINUE\";\n        Errors[Errors[\"NO_EXPLICIT_RETURN\"] = 7] = \"NO_EXPLICIT_RETURN\";\n        Errors[Errors[\"PARAMETER_ILLEGAL_NAME\"] = 8] = \"PARAMETER_ILLEGAL_NAME\";\n        Errors[Errors[\"PARAMETER_REDEFINITION\"] = 9] = \"PARAMETER_REDEFINITION\";\n        Errors[Errors[\"PROTOTYPE_PARAMETERS_MISS_MATCH\"] = 10] = \"PROTOTYPE_PARAMETERS_MISS_MATCH\";\n        Errors[Errors[\"PROTOTYPE_TYPE_MISS_MATCH\"] = 11] = \"PROTOTYPE_TYPE_MISS_MATCH\";\n        Errors[Errors[\"PROTOTYPE_REDEFINITION\"] = 12] = \"PROTOTYPE_REDEFINITION\";\n        Errors[Errors[\"RETURN_TYPE\"] = 13] = \"RETURN_TYPE\";\n        Errors[Errors[\"TOO_FEW_PARAMS_IN_CALL\"] = 14] = \"TOO_FEW_PARAMS_IN_CALL\";\n        Errors[Errors[\"TOO_MANY_PARAMS_IN_CALL\"] = 15] = \"TOO_MANY_PARAMS_IN_CALL\";\n        Errors[Errors[\"TYPE_ERROR\"] = 16] = \"TYPE_ERROR\";\n        Errors[Errors[\"UNDEFINED_FUNCTION\"] = 17] = \"UNDEFINED_FUNCTION\";\n        Errors[Errors[\"UNDEFINED_FUNCTION_OR_VARIABLE\"] = 18] = \"UNDEFINED_FUNCTION_OR_VARIABLE\";\n        Errors[Errors[\"UNARY_OPERATOR_TYPE_ERROR\"] = 19] = \"UNARY_OPERATOR_TYPE_ERROR\";\n        Errors[Errors[\"UNKNOWN_MODULE\"] = 20] = \"UNKNOWN_MODULE\";\n        Errors[Errors[\"UNKNOWN_PACKAGE\"] = 21] = \"UNKNOWN_PACKAGE\";\n        Errors[Errors[\"UNKNOWN_SYNTAX\"] = 22] = \"UNKNOWN_SYNTAX\";\n        Errors[Errors[\"UNKNOWN_VARIABLE\"] = 23] = \"UNKNOWN_VARIABLE\";\n        Errors[Errors[\"VOID_COMPARISON\"] = 24] = \"VOID_COMPARISON\";\n    })(CompilationError.Errors || (CompilationError.Errors = {}));\n})(CompilationError || (CompilationError = {}));\n\n/**\n * Resolves a Term\n * @throws If the AST is not type correct\n * @param tree The ast expression to solve\n * @param table Definition table\n * @param yy Requiered to emmit compilation error\n * @param scope.expectedReturn The type of the return in the current scope\n * @returns Returns the dataType the term resolved to.\n */\nfunction resolveTerm(tree, definitions, scope, target, tags, yy) {\n    if (tree.operation === \"ATOM\") {\n        resolveListWithASTs(tree.instructions, definitions, scope, target, tags, yy);\n        if (tree.dataType.startsWith(\"$\")) {\n            const termType = tree.dataType.substring(1);\n            if (scope.parameters.some(e => e.name === termType)) {\n                return \"INT\";\n            }\n            return definitions.getType(tree.dataType.substring(1));\n        }\n        return tree.dataType;\n    }\n    if (tree.operation === \"AND\" || tree.operation === \"OR\") {\n        //Resolve left\n        const leftType = resolveTerm(tree.left, definitions, scope, target, tags, yy);\n        // Add short circuit\n        target.push([\"DUP\"]);\n        if (tree.operation === \"OR\") {\n            target.push([\"NOT\"]);\n        }\n        const shortCircuit = definitions.getUniqueTag(\"shortCircuit\");\n        target.push([\"TJZ\", shortCircuit]);\n        // Resolve right\n        const rightType = resolveTerm(tree.right, definitions, scope, target, tags, yy);\n        // Add short circuit tag\n        if (leftType !== \"BOOL\") {\n            yy.parser.parseError(`${tree.operation} operator uses booleans terms only, left is of type: ${leftType}`, {\n                error: CompilationError.Errors.BINARY_OPERATOR_TYPE_ERROR,\n                operator: tree.operation,\n                loc: tree.loc,\n                line: tree.loc.first_line - 1,\n                expectedType: \"BOOL\",\n                actualType: leftType,\n                direction: \"LEFT\"\n            });\n        }\n        if (rightType !== \"BOOL\") {\n            yy.parser.parseError(`${tree.operation} operator uses booleans terms only, right is of type: ${rightType}`, {\n                error: CompilationError.Errors.BINARY_OPERATOR_TYPE_ERROR,\n                operator: tree.operation,\n                loc: tree.loc,\n                line: tree.loc.first_line - 1,\n                expectedType: \"BOOL\",\n                actualType: rightType,\n                direction: \"RIGHT\"\n            });\n        }\n        target.push([tree.operation]);\n        resolveListWithASTs([[\"TAG\", shortCircuit]], definitions, scope, target, tags, yy);\n        return tree.dataType;\n    }\n    if (tree.operation === \"EQ\") {\n        const leftType = resolveTerm(tree.left, definitions, scope, target, tags, yy);\n        const rightType = resolveTerm(tree.right, definitions, scope, target, tags, yy);\n        if (leftType !== rightType) {\n            yy.parser.parseError(`An equality comparison cannot be performed between type ${leftType} and ${rightType}`, {\n                error: CompilationError.Errors.COMPARISON_TYPE,\n                loc: tree.loc,\n                line: tree.loc.first_line - 1,\n                leftType: leftType,\n                rightType: rightType\n            });\n        }\n        if (leftType === \"VOID\") {\n            yy.parser.parseError(`An equality comparison cannot be performed on VOID`, {\n                error: CompilationError.Errors.VOID_COMPARISON,\n                loc: tree.loc,\n                line: tree.loc.first_line - 1,\n                leftType: leftType,\n                rightType: rightType\n            });\n        }\n        target.push([tree.operation]);\n        return tree.dataType;\n    }\n    if (tree.operation === \"LT\" || tree.operation === \"LTE\") {\n        const leftType = resolveTerm(tree.left, definitions, scope, target, tags, yy);\n        const rightType = resolveTerm(tree.right, definitions, scope, target, tags, yy);\n        if (leftType !== \"INT\") {\n            yy.parser.parseError(`${tree.operation} operator uses integer terms only, left is of type: ${leftType}`, {\n                error: CompilationError.Errors.BINARY_OPERATOR_TYPE_ERROR,\n                loc: tree.loc,\n                operator: tree.operation,\n                line: tree.loc.first_line - 1,\n                direction: \"LEFT\",\n                expectedType: \"INT\",\n                actualType: leftType\n            });\n        }\n        if (rightType !== \"INT\") {\n            yy.parser.parseError(`${tree.operation} operator uses integer terms only, right is of type: ${rightType}`, {\n                error: CompilationError.Errors.BINARY_OPERATOR_TYPE_ERROR,\n                loc: tree.loc,\n                operator: tree.operation,\n                direction: \"RIGHT\",\n                line: tree.loc.first_line - 1,\n                expectedType: \"INT\",\n                actualType: rightType\n            });\n        }\n        target.push([tree.operation]);\n        return tree.dataType;\n    }\n    if (tree.operation === \"NOT\") {\n        const termType = resolveTerm(tree.term, definitions, scope, target, tags, yy);\n        if (termType !== \"BOOL\") {\n            yy.parser.parseError(`${tree.operation} operator uses a boolean terms only, but tried to negate a term of type: ${termType}`, {\n                error: CompilationError.Errors.UNARY_OPERATOR_TYPE_ERROR,\n                loc: tree.loc,\n                operator: tree.operation,\n                line: tree.loc.first_line - 1,\n                expectedType: \"BOOL\",\n                actualType: termType\n            });\n        }\n        target.push([tree.operation]);\n        return tree.dataType;\n    }\n    if (tree.operation === \"PASS\") {\n        const termType = resolveTerm(tree.term, definitions, scope, target, tags, yy);\n        if (termType !== tree.dataType) {\n            yy.parser.parseError(`Expected a term of type ${tree.dataType}, but got ${termType}`, {\n                error: CompilationError.Errors.TYPE_ERROR,\n                loc: tree.totalLoc,\n                line: tree.totalLoc.first_line - 1,\n                expectedType: tree.dataType,\n                actualType: termType\n            });\n        }\n        return tree.dataType;\n    }\n    if (tree.operation === \"PARENTHESIS\") {\n        const termType = resolveTerm(tree.term, definitions, scope, target, tags, yy);\n        return termType;\n    }\n}\n/**\n * Resolves a variable into the SemiSimple Instructions\n *\n * If the language has active the flag VariablesCanBeFunctions (such as pascal),\n * the it may attempt to resolve it to a parameter-less function call\n *\n * @param data the Variable IR\n * @param definitions Table of definitions\n * @param scope Scope data\n * @param target target where the SemiSimple Instructions are appended to\n * @param yy to emit compilation errors\n *\n *\n * @throws\n * CompilationError.Errors.UNKNOWN_VARIABLE | CompilationError.Errors.UNDEFINED_FUNCTION\n *\n * if the variable is not defined\n *\n */\nfunction resolveVar(data, definitions, scope, target, yy) {\n    const parameterIdx = scope.parameters.findIndex(e => data.target === e.name);\n    if (parameterIdx !== -1) {\n        target.push([\"PARAM\", scope.parameters.length - parameterIdx - 1]);\n        return;\n    }\n    if (definitions.hasVar(data.target)) {\n        const IRs = definitions.getVar(data.target).instructions;\n        for (const instruction of IRs) {\n            target.push(instruction);\n        }\n        return;\n    }\n    if (data.couldBeFunction) {\n        resolveCall$2({\n            nameLoc: data.loc,\n            params: [],\n            target: data.target,\n            expectedType: data.expectedType,\n        }, definitions, scope, target, {}, yy);\n        target.push([\"LRET\"]);\n        return;\n    }\n    yy.parser.parseError(\"Unknown variable or parameter: \" + data.target, {\n        error: CompilationError.Errors.UNKNOWN_VARIABLE,\n        variable: data.target,\n        line: data.loc.first_line - 1,\n        loc: data.loc\n    });\n}\n/**\n * Resolves a call into the SemiSimple Instructions\n * It resolves its parameters and formats it properly for the VM\n *\n * @param data the Call IR\n * @param definitions Table of definitions\n * @param scope Scope data\n * @param target target where the SemiSimple Instructions are appended to\n * @param tags A record of tags\n * @param yy to emit compilation errors\n *\n *\n * @throws\n * CompilationError.Errors.UNDEFINED_FUNCTION\n * If the function is not defined\n */\nfunction resolveCall$2(data, definitions, scope, target, tags, yy) {\n    for (const parameter of data.params) {\n        resolveTerm(parameter, definitions, scope, target, tags, yy);\n    }\n    target.push([\"LOAD\", data.params.length]);\n    target.push([\"LINE\", data.nameLoc.first_line - 1, data.nameLoc.first_column]);\n    if (!definitions.hasFunction(data.target)) {\n        yy.parser.parseError(\"Undefined function: \" + data.target, {\n            error: CompilationError.Errors.UNDEFINED_FUNCTION,\n            functionName: data.target,\n            line: data.nameLoc.first_line - 1,\n            loc: data.nameLoc\n        });\n        return null;\n    }\n    target.push([\"CALL\", data]);\n    target.push([\n        \"LINE\",\n        data.nameLoc.first_line - 1,\n        data.nameLoc.first_column + data.target.length\n    ]);\n}\n/**\n * Resolves a return\n *\n * @param data the Return IR\n * @param definitions Table of definitions\n * @param scope Scope data\n * @param target target where the SemiSimple Instructions are appended to\n * @param tags A record of tags\n * @param yy to emit compilation errors\n *\n *\n * @throws\n * CompilationError.Errors.RETURN_TYPE\n * If the return type is not correct\n */\nfunction resolveReturn(data, definitions, scope, target, tags, yy) {\n    const retType = resolveTerm(data.term, definitions, scope, target, tags, yy);\n    if (scope.expectedReturn !== retType) {\n        yy.parser.parseError(`Cannot return a type: ${retType}, in a function of type: ${scope.expectedReturn}`, {\n            error: CompilationError.Errors.RETURN_TYPE,\n            line: data.loc.first_line - 1,\n            loc: data.loc,\n            expectedType: scope.expectedReturn,\n            actualType: retType\n        });\n    }\n    target.push([\"SRET\"]);\n    target.push([\"LINE\", data.loc.first_line - 1, data.loc.first_column]);\n    target.push([\"RET\", data]);\n}\n/**\n * Resolves a repeat loop\n * @param data The repeat AST\n * @param definitions Table of definitions\n * @param scope Scope data\n * @param target the SemiSimple Instruction array where instructions are inserted\n * @param tags Available tags record\n * @param yy For compilation error purposes\n *\n * @throws If inner blocks fail to be resolved\n */\nfunction resolveRepeat(data, definitions, scope, target, tags, yy) {\n    // Add line marker\n    target.push(data.line);\n    // Add load counter\n    resolveTerm(data.loopCount[1], definitions, scope, target, tags, yy);\n    // Add counter logic\n    resolveListWithASTs([\n        ['TAG', data.repeatTag],\n        ['DUP'],\n        ['LOAD', 0],\n        ['EQ'],\n        ['NOT'],\n        ['TJZ', data.endTag]\n    ], definitions, scope, target, tags, yy);\n    const loopScope = scope.withContinueBreakTarget(data.continueTag, data.endTag);\n    // Add loop body\n    resolveListWithASTs(data.instructions, definitions, loopScope, target, tags, yy);\n    // Add loop end logic\n    resolveListWithASTs([\n        ['TAG', data.continueTag],\n        ['DEC', 1],\n        ['TJMP', data.repeatTag],\n        ['TAG', data.endTag],\n        ['POP'],\n    ], definitions, scope, target, tags, yy);\n}\n/**\n * Resolves a while AST\n * @param data While data\n * @param definitions  table of definitions\n * @param scope Scope data\n * @param target Target where SemiSimpleInstructions are emitted to\n * @param tags Available tags\n * @param yy Parser errors\n *\n * @throws\n */\nfunction resolveWhile(data, definitions, scope, target, tags, yy) {\n    // Add repeat tag\n    resolveListWithASTs([\n        ['TAG', data.repeatTag],\n    ], definitions, scope, target, tags, yy);\n    // Add line marker\n    target.push(data.line);\n    // Add condition check\n    resolveTerm(data.condition[1], definitions, scope, target, tags, yy);\n    // Add skip logic\n    resolveListWithASTs([\n        ['TJZ', data.endTag]\n    ], definitions, scope, target, tags, yy);\n    const whileScope = scope.withContinueBreakTarget(data.repeatTag, data.endTag);\n    // Add loop body\n    resolveListWithASTs(data.instructions, definitions, whileScope, target, tags, yy);\n    // Add loop end logic\n    resolveListWithASTs([\n        ['TJMP', data.repeatTag],\n        ['TAG', data.endTag],\n    ], definitions, scope, target, tags, yy);\n}\n/**\n * Resolves a conditional\n * @param data Conditional data\n * @param definitions Table of definitions\n * @param scope Scope info\n * @param target Target where the SemiSimple instructions are emitted to\n * @param tags Tags available\n * @param yy Parser errors\n * @returns Flow data\n */\nfunction resolveConditional(data, definitions, scope, target, tags, yy) {\n    let trueReturns = false, falseReturns = false;\n    // Add line marker\n    target.push(data.line);\n    resolveTerm(data.condition[1], definitions, scope, target, tags, yy);\n    resolveListWithASTs([[\"TJZ\", data.skipTrueTag]], definitions, scope, target, tags, yy);\n    trueReturns = resolveListWithASTs(data.trueCase, definitions, scope, target, tags, yy).explicitReturn;\n    if (data.skipFalseTag) {\n        resolveListWithASTs([[\"TJMP\", data.skipFalseTag]], definitions, scope, target, tags, yy);\n    }\n    resolveListWithASTs([[\"TAG\", data.skipTrueTag]], definitions, scope, target, tags, yy);\n    if (data.skipFalseTag && data.falseCase) {\n        falseReturns = resolveListWithASTs(data.falseCase, definitions, scope, target, tags, yy).explicitReturn;\n        resolveListWithASTs([[\"TAG\", data.skipFalseTag]], definitions, scope, target, tags, yy);\n    }\n    return {\n        explicitReturn: trueReturns && falseReturns\n    };\n}\n/**\n * @throws Iterates through an IR list and resolve any AST it finds\n * @param tree The ast expression to solve\n * @param definitions Definition table\n * @param yy Required to emit compilation error\n * @returns Returns the equivalent AST into IRInstructions without AST\n */\nfunction resolveListWithASTs(IRInstructions, definitions, scope, target, tags, yy) {\n    const info = {\n        explicitReturn: false\n    };\n    for (const instruction of IRInstructions) {\n        // Fixme: All vars should be in terms\n        if (instruction[0] === \"VAR\") {\n            resolveVar(instruction[1], definitions, scope, target, yy);\n            continue;\n        }\n        if (instruction[0] === \"FORWARD\") {\n            target.push(['WORLDWALLS']);\n            target.push(['ORIENTATION']);\n            target.push(['MASK']);\n            target.push(['AND']);\n            target.push(['NOT']);\n            target.push(['EZ', 'WALL']);\n            target.push(instruction);\n            continue;\n        }\n        if (instruction[0] === \"PICKBUZZER\") {\n            target.push(['WORLDBUZZERS']);\n            target.push(['EZ', 'WORLDUNDERFLOW']);\n            target.push(instruction);\n            continue;\n        }\n        if (instruction[0] === \"LEAVEBUZZER\") {\n            target.push(['BAGBUZZERS']);\n            target.push(['EZ', 'BAGUNDERFLOW']);\n            target.push(instruction);\n            continue;\n        }\n        if (instruction[0] === \"TERM\") {\n            resolveTerm(instruction[1], definitions, scope, target, tags, yy);\n            continue;\n        }\n        if (instruction[0] === \"TAG\") {\n            tags[instruction[1]] = target.length;\n            continue;\n        }\n        if (instruction[0] === \"CALL\") {\n            resolveCall$2(instruction[1], definitions, scope, target, tags, yy);\n            continue;\n        }\n        if (instruction[0] === \"RET\") {\n            if (instruction[1] === \"__DEFAULT\") {\n                //set SRET to 0\n                target.push([\"LOAD\", 0]);\n                target.push([\"SRET\"]);\n                target.push([\n                    \"LINE\",\n                    instruction[2].first_line - 1,\n                    instruction[2].first_column\n                ]);\n                target.push(instruction);\n                continue;\n            }\n            resolveReturn(instruction[1], definitions, scope, target, tags, yy);\n            info.explicitReturn = true;\n            continue;\n        }\n        if (instruction[0] === \"REPEAT\") {\n            resolveRepeat(instruction[1], definitions, scope, target, tags, yy);\n            continue;\n        }\n        if (instruction[0] === \"WHILE\") {\n            resolveWhile(instruction[1], definitions, scope, target, tags, yy);\n            continue;\n        }\n        if (instruction[0] === \"IF\") {\n            const ifInfo = resolveConditional(instruction[1], definitions, scope, target, tags, yy);\n            if (ifInfo.explicitReturn) {\n                info.explicitReturn = true;\n            }\n            continue;\n        }\n        if (instruction[0] === \"CONTINUE\") {\n            if (scope.continueTarget == null) {\n                yy.parser.parseError(\"Cannot use continue in this scope\", {\n                    error: CompilationError.Errors.ILLEGAL_CONTINUE,\n                    loc: instruction[1],\n                    line: instruction[1].first_line - 1\n                });\n            }\n            target.push([\"TJMP\", scope.continueTarget]);\n            continue;\n        }\n        if (instruction[0] === \"BREAK\") {\n            if (scope.breakTarget == null) {\n                yy.parser.parseError(\"Cannot use break in this scope\", {\n                    error: CompilationError.Errors.ILLEGAL_BREAK,\n                    loc: instruction[1],\n                    line: instruction[1].first_line - 1\n                });\n            }\n            target.push([\"TJMP\", scope.breakTarget]);\n            continue;\n        }\n        target.push(instruction);\n    }\n    return info;\n}\n\n/**\n * A readonly class containing the scope data\n */\nclass Scope {\n    constructor(data) {\n        this.parameters = data.parameters;\n        this.expectedReturn = data.expectedReturn;\n        this.continueTarget = data.continueTarget;\n        this.breakTarget = data.breakTarget;\n    }\n    /**\n     * Creates a copy of itself, with the continue Target modified\n     * @param continueTarget The new continue target\n     * @returns A new Scope with the same values, except for continue target\n     */\n    withContinueTarget(continueTarget) {\n        return new Scope({\n            parameters: this.parameters,\n            expectedReturn: this.expectedReturn,\n            continueTarget: continueTarget,\n            breakTarget: this.breakTarget\n        });\n    }\n    /**\n     * Creates a copy of itself, with the break Target modified\n     * @param breakTarget The new break target\n     * @returns A new Scope with the same values, except for break target\n     */\n    withBreakTarget(breakTarget) {\n        return new Scope({\n            parameters: this.parameters,\n            expectedReturn: this.expectedReturn,\n            continueTarget: this.continueTarget,\n            breakTarget: breakTarget\n        });\n    }\n    /**\n     * Creates a copy of itself, changing the continue and break target\n     * @param continueTarget The new continue target\n     * @param breakarget The new break target\n     * @returns A new Scope with modified values\n     */\n    withContinueBreakTarget(continueTarget, breakTarget) {\n        return new Scope({\n            parameters: this.parameters,\n            expectedReturn: this.expectedReturn,\n            continueTarget: continueTarget,\n            breakTarget: breakTarget\n        });\n    }\n}\n/**\n * The default scope used in the main program\n */\nconst MAIN_SCOPE = new Scope({\n    expectedReturn: \"VOID\",\n    parameters: []\n});\n\n/**\n * Contains debug data emitted by the compiler. Useful to debug a Karel Program\n */\nclass DebugData {\n}\n\n/**\n * Checks that functions calls are valid, not defined multiple times and prototypes match\n * @param data The IR generated by the parser\n * @param bundle The bundle generated by the packages\n * @param definitionTable The definition table to populate\n * @returns A boolean if it compiled successfully, it should never return false and not throw\n */\nfunction validateAndGetFunctionDefinitions(data, definitionTable) {\n    const yy = data.yy;\n    const prototypes = new Map();\n    for (const func of data.functions) {\n        //Check that the parameters do not overload a global\n        for (const parameter of func.params) {\n            if (definitionTable.hasVar(parameter.name)) {\n                yy.parser.parseError(\"Cannot name a parameter as a global variable\", {\n                    error: CompilationError.Errors.PARAMETER_ILLEGAL_NAME,\n                    parameterName: parameter.name,\n                    line: parameter.loc.first_line - 1,\n                    loc: parameter.loc\n                });\n                return false;\n            }\n        }\n        // Check that the function does not shadow a variable\n        if (definitionTable.hasVar(func.name)) {\n            yy.parser.parseError(\"Cannot name a function as a global variable\", {\n                error: CompilationError.Errors.FUNCTION_ILLEGAL_NAME,\n                functionName: func.name,\n                line: func.loc.first_line - 1,\n                loc: func.loc\n            });\n            return false;\n        }\n        //Check if current func is a prototype\n        if (func.code == null) {\n            if (prototypes.has(func.name)) {\n                yy.parser.parseError(\"Prototype redefinition: \" + func.name, {\n                    error: CompilationError.Errors.PROTOTYPE_REDEFINITION,\n                    prototypeName: func.name,\n                    line: func.loc.first_line - 1,\n                    loc: func.loc,\n                });\n                return false;\n            }\n            prototypes.set(func.name, {\n                argCount: func.params.length,\n                defined: false,\n                returnType: func.returnType\n            });\n            continue;\n        }\n        if (!prototypes.has(func.name)) {\n            prototypes.set(func.name, {\n                argCount: func.params.length,\n                defined: false,\n                returnType: func.returnType\n            });\n        }\n        const proto = prototypes.get(func.name);\n        if (proto.defined) {\n            yy.parser.parseError(\"Function redefinition: \" + func.name, {\n                error: CompilationError.Errors.FUNCTION_REDEFINITION,\n                functionName: func.name,\n                line: func.loc.first_line - 1,\n                loc: func.loc,\n            });\n            return false;\n        }\n        if (proto.argCount !== func.params.length) {\n            yy.parser.parseError(\"Prototype parameter mismatch: \" + func.name, {\n                error: CompilationError.Errors.PROTOTYPE_PARAMETERS_MISS_MATCH,\n                line: func.loc.first_line - 1,\n                loc: func.loc,\n                functionName: func.name,\n                functionParamCount: func.params.length,\n                prototypeParamCount: proto.argCount\n            });\n            return false;\n        }\n        if (proto.returnType !== func.returnType) {\n            yy.parser.parseError(\"Prototype type mismatch: \" + func.name, {\n                error: CompilationError.Errors.PROTOTYPE_TYPE_MISS_MATCH,\n                line: func.loc.first_line - 1,\n                loc: func.loc,\n                functionName: func.name,\n                functionType: func.returnType,\n                prototypeType: proto.returnType\n            });\n            return false;\n        }\n        prototypes.set(func.name, {\n            argCount: func.params.length,\n            defined: true,\n            returnType: func.returnType\n        });\n        definitionTable.registerFunction(func);\n        for (const instruction of func.code) {\n            if (data.requieresFunctionPrototypes && instruction[0] === \"CALL\") {\n                //This check is only needed if declaration order mater, for languages like C or Pascal\n                //Checks that the function called at this time has been declared above.\n                const data = instruction[1];\n                if (!prototypes.has(data.target)) {\n                    yy.parser.parseError(\"Undefined function: \" + data.target, {\n                        error: CompilationError.Errors.UNDEFINED_FUNCTION,\n                        functionName: data.target,\n                        line: data.nameLoc.first_line - 1,\n                        loc: data.nameLoc\n                    });\n                    return false;\n                }\n            }\n        }\n    }\n    //Validate parameters\n    for (const func of data.functions) {\n        func.params.forEach((param, idx) => {\n            if (definitionTable.hasVar(param.name) || definitionTable.hasFunction(param.name)) {\n                yy.parser.parseError(`Cannot name parameter ${param.name} as it is already used by a variable or function`, {\n                    error: CompilationError.Errors.PARAMETER_ILLEGAL_NAME,\n                    line: param.loc.first_line - 1,\n                    loc: param.loc,\n                    parameterName: param.name\n                });\n            }\n            const first = func.params.findIndex(p => p.name === param.name);\n            if (first !== idx) {\n                yy.parser.parseError(`Parameter ${param.name} was already declared in the function`, {\n                    error: CompilationError.Errors.PARAMETER_REDEFINITION,\n                    line: param.loc.first_line - 1,\n                    loc: param.loc,\n                    parameterName: param.name\n                });\n            }\n        });\n    }\n    return true;\n}\n/**\n * This functions  populates the definitionTable with the data\n * @throws Compilation error if it imports and invalid package\n * @param data IntermediateRepresentation Object\n * @param definitions Table of definitions to be populated\n */\nfunction loadPackages(data, definitions) {\n    const compPackages = data.language === \"ReKarel Java\" ? JavaPackages : PascalPackages;\n    const yy = data.yy;\n    for (const pack of data.packages) {\n        const packageName = pack[0].split(\".\")[0];\n        const moduleName = pack[0].split(\".\")[1];\n        if (packageName !== \"rekarel\") {\n            yy.parser.parseError(\"Package not recognized: \" + pack[0], {\n                error: CompilationError.Errors.UNKNOWN_PACKAGE,\n                package: packageName,\n                module: moduleName,\n                full: pack[0],\n                loc: pack[1],\n                line: pack[1].first_line - 1,\n            });\n        }\n        if (!compPackages[pack[0]]) {\n            yy.parser.parseError(\"Module not found: \" + pack[0], {\n                error: CompilationError.Errors.UNKNOWN_MODULE,\n                package: packageName,\n                module: moduleName,\n                full: pack[0],\n                loc: pack[1],\n                line: pack[1].first_line - 1,\n            });\n        }\n        const packObject = compPackages[pack[0]];\n        for (let [varName, varVal] of packObject.numberVariables) {\n            definitions.registerVar(varName, {\n                instructions: varVal,\n                dataType: \"INT\",\n            });\n        }\n        for (let [varName, varVal] of packObject.booleanVariables) {\n            definitions.registerVar(varName, {\n                instructions: varVal,\n                dataType: \"BOOL\",\n            });\n        }\n    }\n}\n/**\n * Resolves AST instructions, Tags and TJMP.\n * @throws If there's a type error\n * @param IRInstructions The instructions to resolve\n * @param yy Compiler information, used to throw compilation errors\n * @param definitions Table of global definitions\n * @param parameters Parameters of the scope\n * @param expectedReturn The return type of the current scope\n * @returns The IR with the complex IR resolved into simple IR\n */\nfunction resolveComplexIR(IRInstructions, yy, definitions, scope, func) {\n    let result = [];\n    const tags = {};\n    //Resolve AST and populate tags\n    let info = resolveListWithASTs(IRInstructions, definitions, scope, result, tags, yy);\n    // Check for explicit returns\n    if (scope.expectedReturn !== \"VOID\" && !info.explicitReturn) {\n        yy.parser.parseError(`Explicit return is required in function ${func.name}`, {\n            error: CompilationError.Errors.NO_EXPLICIT_RETURN,\n            loc: func.loc,\n            line: func.loc.first_line - 1,\n            functionName: func.name,\n            returnType: scope.expectedReturn,\n        });\n    }\n    // Resolve TJMP to JMP\n    return result.map((instruction, idx) => {\n        if (instruction[0] === \"TJMP\") {\n            const delta = tags[instruction[1]] - idx - 1;\n            return [\"JMP\", delta];\n        }\n        if (instruction[0] === \"TJZ\") {\n            const delta = tags[instruction[1]] - idx - 1;\n            return [\"JZ\", delta];\n        }\n        return instruction;\n    });\n}\n/**\n * Generates the program using the Abstract Syntax Tree (IR OBject) result of the syntax analysis. Processes the Grammatical analysis\n * @param data IRObject containing the output of the syntax analysis tool (such as JISON)\n * @param exportDebug Flag that specifies if the DebugData should be included\n * @returns A tuple with the program and debugData\n */\nfunction generateOpcodesFromIR(data, exportDebug) {\n    const definitions = new DefinitionTable(data.variablesCanBeFunctions);\n    const debugData = new DebugData();\n    // Step 1 - Populate global definitions, and check for repeated definitions\n    loadPackages(data, definitions);\n    if (!validateAndGetFunctionDefinitions(data, definitions))\n        throw new Error(\"This should not be reachable, it should have thrown before\");\n    // Step 2 - Resolve all AST/tags, such as terms.\n    let IRProgram = resolveComplexIR(data.program, data.yy, definitions, MAIN_SCOPE);\n    // Step 3 - Resolve all AST/tags from functions and Generate a single IR array.\n    for (const func of data.functions) {\n        if (func.code == null) {\n            //Skip prototypes\n            continue;\n        }\n        definitions.setFunctionLoc(func.name, IRProgram.length);\n        const functionScope = new Scope({\n            parameters: func.params,\n            expectedReturn: func.returnType\n        });\n        const code = resolveComplexIR(func.code, data.yy, definitions, functionScope, func);\n        IRProgram = IRProgram.concat(code);\n    }\n    //Step 4: Generate opcode. Resolve CALL into correct opcode\n    const program = [];\n    for (const instruction of IRProgram) {\n        if (instruction[0] === \"CALL\") {\n            const iData = instruction[1];\n            if (!definitions.hasFunction(iData.target)) {\n                data.yy.parser.parseError(\"Undefined function: \" + iData.target, {\n                    error: CompilationError.Errors.UNDEFINED_FUNCTION,\n                    functionName: iData.target,\n                    line: iData.nameLoc.first_line - 1,\n                    loc: iData.nameLoc\n                });\n                return null;\n            }\n            const targetFunc = definitions.getFunction(iData.target);\n            if (targetFunc.arguments.length < iData.params.length) {\n                const extraParam = iData.params[iData.params.length - targetFunc.arguments.length - 1];\n                data.yy.parser.parseError(`Too many parameters in call to function ${iData.target}, expected ${targetFunc.arguments.length}, got ${iData.params.length}`, {\n                    error: CompilationError.Errors.TOO_MANY_PARAMS_IN_CALL,\n                    line: extraParam.totalLoc.first_line - 1,\n                    loc: extraParam.totalLoc,\n                    functionName: iData.target,\n                    expectedParams: iData.params.length,\n                    actualParams: targetFunc.arguments.length\n                });\n            }\n            if (targetFunc.arguments.length > iData.params.length) {\n                data.yy.parser.parseError(`Too few parameters in call to function ${iData.target}, expected ${targetFunc.arguments.length}, got ${iData.params.length}`, {\n                    error: CompilationError.Errors.TOO_FEW_PARAMS_IN_CALL,\n                    line: iData.nameLoc.first_line - 1,\n                    loc: iData.nameLoc,\n                    funcName: iData.target,\n                    expectedParams: iData.params.length,\n                    actualParams: targetFunc.arguments.length\n                });\n            }\n            if (iData.expectedType != null && iData.expectedType !== targetFunc.returnType) {\n                data.yy.parser.parseError(`Expected a function of type ${iData.expectedType}, but ${iData.target} is ${targetFunc.returnType}`, {\n                    error: CompilationError.Errors.CALL_TYPE,\n                    line: iData.nameLoc.first_line - 1,\n                    loc: iData.nameLoc,\n                    funcName: iData.target,\n                    expectedCallType: iData.expectedType,\n                    functionType: targetFunc.returnType\n                });\n            }\n            program.push([\n                \"CALL\",\n                targetFunc.location,\n                iData.target,\n            ]);\n            continue;\n        }\n        if (instruction[0] === \"RET\") {\n            program.push([\"RET\"]);\n            continue;\n        }\n        program.push(instruction);\n    }\n    if (exportDebug) {\n        debugData.definitions = definitions;\n        return [program, debugData];\n    }\n    return [program, null];\n}\n\nconst javaParser = javaParser$1;\nconst pascalParser = pascalParser$1;\n/**\n * Uses the first line of text to detect the language\n * @param code Source code\n * @returns Java, pascal or unknown\n */\nfunction detectLanguage(code) {\n    let rules = [\n        /^\\s+/,\n        /^\\/\\/[^\\n]*/,\n        /^#[^\\n]*/,\n        /^(?:\\/\\*(?:[^*]|\\*[^)])*\\*\\/)/,\n        /^{[^}]*}/,\n        /^\\(\\*([^*]|\\*[^)])*\\*\\)/,\n        /^[^a-zA-Z0-9_-]+/,\n        /^[a-zA-Z0-9_-]+/,\n    ];\n    let i = 0;\n    while (i < code.length) {\n        for (let j = 0; j < rules.length; j++) {\n            let m = rules[j].exec(code.substring(i));\n            if (m !== null) {\n                if (j == rules.length - 1) {\n                    // el primer token de verdad.\n                    if (m[0] == 'class' || m[0] == 'import') {\n                        return 'java';\n                    }\n                    else if (m[0].toLowerCase() == 'iniciar-programa' || m[0].toLowerCase() == 'usa') {\n                        return 'pascal';\n                    }\n                    else {\n                        return 'unknown';\n                    }\n                }\n                else {\n                    // comentario o no-token.\n                    i += m[0].length;\n                    break;\n                }\n            }\n        }\n    }\n    return 'unknown';\n}\n/**\n * This function produces the program for the VM from a source code\n * @param code the source code, which may be either java or pascal\n * @param exportDebug If true, it returns the DebugData, otherwise the DebugData is null. It may increase compilation resource consumption. If not present it is false\n * @returns A tuple array containing the compiled program and the debug data (or null)\n *\n * @throws On compilation error. Check the error.status for information on the error\n *\n * @public\n */\nfunction compile(code, exportDebug = false) {\n    let lang = detectLanguage(code);\n    let compiler = null;\n    switch (lang) {\n        case 'java':\n            compiler = javaCompiler;\n            break;\n        case 'pascal':\n            compiler = pascalCompiler;\n            break;\n        default:\n            let errorStatus = {\n                error: CompilationError.Errors.UNKNOWN_SYNTAX,\n                line: 0,\n                loc: {\n                    first_column: 0, first_line: 1, last_column: 0, last_line: 1\n                }\n            };\n            let error = new Error(\"Unknown syntax, the start of the file must be either 'class' or 'iniciar-programa'\");\n            // @ts-ignore Adding extra error data\n            error.hash = errorStatus;\n            throw error;\n    }\n    const result = compiler(code, exportDebug);\n    return result;\n}\n/**\n * This function produces the program for the VM from a Karel Java source code\n * @param code the source code, which must be Java\n * @param exportDebug If true, it returns the DebugData, otherwise the DebugData is null. It may increase compilation resource consumption. If not present it is false\n * @returns A tuple array containing the compiled program and the debug data (or null)\n */\nfunction javaCompiler(code, exportDebug = false) {\n    const IR = javaParser(code);\n    return generateOpcodesFromIR(IR, exportDebug);\n}\n/**\n * This function produces the program for the VM from a Karel Pascal source code\n * @param code the source code, which must be Pascal\n * @param exportDebug If true, it returns the DebugData, otherwise the DebugData is null. It may increase compilation resource consumption. If not present it is false\n * @returns A tuple array containing the compiled program and the debug data (or null)\n */\nfunction pascalCompiler(code, exportDebug = false) {\n    const IR = pascalParser(code);\n    return generateOpcodesFromIR(IR, exportDebug);\n}\n\nclass KarelRuntimeEvent extends Event {\n    constructor(type, runtime, details) {\n        super(type);\n        this.details = details;\n        this.runtime = runtime;\n    }\n}\nclass KarelRuntimeEventTarget {\n    constructor() {\n        this.listeners = {};\n    }\n    addEventListener(type, callback) {\n        if (!this.listeners.hasOwnProperty(type)) {\n            this.listeners[type] = [];\n        }\n        this.listeners[type].push(callback);\n    }\n    dispatchEvent(event) {\n        if (!this.listeners.hasOwnProperty(event.type)) {\n            return false;\n        }\n        for (const listener of this.listeners[event.type]) {\n            listener(event);\n        }\n        return true;\n    }\n    removeEventListener(type, callback) {\n        if (!this.listeners.hasOwnProperty(type)) {\n            return;\n        }\n        const index = this.listeners[type].indexOf(callback);\n        if (index === -1)\n            return;\n        this.listeners[type] = this.listeners[type].splice(index, 1);\n    }\n    fireEvent(type, runtime, data) {\n        const evt = new KarelRuntimeEvent(type, runtime, data);\n        this.dispatchEvent(evt);\n    }\n}\n\n/**\n * The Opcodes that conform the instruction set of Karel\n */\nvar OpCodeID;\n(function (OpCodeID) {\n    OpCodeID[OpCodeID[\"HALT\"] = 0] = \"HALT\";\n    OpCodeID[OpCodeID[\"LINE\"] = 1] = \"LINE\";\n    OpCodeID[OpCodeID[\"LEFT\"] = 2] = \"LEFT\";\n    OpCodeID[OpCodeID[\"WORLDWALLS\"] = 3] = \"WORLDWALLS\";\n    OpCodeID[OpCodeID[\"ORIENTATION\"] = 4] = \"ORIENTATION\";\n    OpCodeID[OpCodeID[\"ROTL\"] = 5] = \"ROTL\";\n    OpCodeID[OpCodeID[\"ROTR\"] = 6] = \"ROTR\";\n    OpCodeID[OpCodeID[\"MASK\"] = 7] = \"MASK\";\n    OpCodeID[OpCodeID[\"NOT\"] = 8] = \"NOT\";\n    OpCodeID[OpCodeID[\"AND\"] = 9] = \"AND\";\n    OpCodeID[OpCodeID[\"OR\"] = 10] = \"OR\";\n    OpCodeID[OpCodeID[\"EQ\"] = 11] = \"EQ\";\n    OpCodeID[OpCodeID[\"EZ\"] = 12] = \"EZ\";\n    OpCodeID[OpCodeID[\"JZ\"] = 13] = \"JZ\";\n    OpCodeID[OpCodeID[\"JMP\"] = 14] = \"JMP\";\n    OpCodeID[OpCodeID[\"FORWARD\"] = 15] = \"FORWARD\";\n    OpCodeID[OpCodeID[\"WORLDBUZZERS\"] = 16] = \"WORLDBUZZERS\";\n    OpCodeID[OpCodeID[\"BAGBUZZERS\"] = 17] = \"BAGBUZZERS\";\n    OpCodeID[OpCodeID[\"PICKBUZZER\"] = 18] = \"PICKBUZZER\";\n    OpCodeID[OpCodeID[\"LEAVEBUZZER\"] = 19] = \"LEAVEBUZZER\";\n    OpCodeID[OpCodeID[\"LOAD\"] = 20] = \"LOAD\";\n    OpCodeID[OpCodeID[\"POP\"] = 21] = \"POP\";\n    OpCodeID[OpCodeID[\"DUP\"] = 22] = \"DUP\";\n    OpCodeID[OpCodeID[\"DEC\"] = 23] = \"DEC\";\n    OpCodeID[OpCodeID[\"INC\"] = 24] = \"INC\";\n    OpCodeID[OpCodeID[\"CALL\"] = 25] = \"CALL\";\n    OpCodeID[OpCodeID[\"RET\"] = 26] = \"RET\";\n    OpCodeID[OpCodeID[\"PARAM\"] = 27] = \"PARAM\";\n    OpCodeID[OpCodeID[\"SRET\"] = 28] = \"SRET\";\n    OpCodeID[OpCodeID[\"LRET\"] = 29] = \"LRET\";\n    OpCodeID[OpCodeID[\"LT\"] = 30] = \"LT\";\n    OpCodeID[OpCodeID[\"LTE\"] = 31] = \"LTE\";\n    OpCodeID[OpCodeID[\"COLUMN\"] = 32] = \"COLUMN\";\n    OpCodeID[OpCodeID[\"ROW\"] = 33] = \"ROW\";\n})(OpCodeID || (OpCodeID = {}));\n/**\n * Converts from String mnemonic to numeric opcode\n * @param literal Opcode Literal\n * @returns The opcode numeric value, or -1 if the literal is not valid\n */\nfunction getOpCodeID(literal) {\n    if (literal in OpCodeID) {\n        return OpCodeID[literal];\n    }\n    return -1;\n}\n/**\n * Runtime Errors types\n */\nvar ErrorType;\n(function (ErrorType) {\n    ErrorType[\"INSTRUCTION\"] = \"INSTRUCTION\";\n    ErrorType[\"STACK\"] = \"STACK\";\n    ErrorType[\"WALL\"] = \"WALL\";\n    ErrorType[\"WORLDUNDERFLOW\"] = \"WORLDUNDERFLOW\";\n    ErrorType[\"BAGUNDERFLOW\"] = \"BAGUNDERFLOW\";\n    ErrorType[\"INVALIDOPCODE\"] = \"INVALIDOPCODE\";\n    ErrorType[\"STACKMEMORY\"] = \"STACKMEMORY\";\n    ErrorType[\"CALLSIZE\"] = \"CALLMEMORY\";\n})(ErrorType || (ErrorType = {}));\n\n/**\n * A class that holds the state of computation and executes opcodes.\n *\n * The Karel Virtual Machine is a simple, stack-based virtual machine with\n * a small number of opcodes, based loosely on the Java Virtual Machine.\n * All opcodes are represented as an array where the first element is the\n * opcode name, followed by zero or one parameters.\n */\nclass Runtime {\n    constructor(world) {\n        this.world = world;\n        this.debug = false;\n        this.disableStackEvents = false;\n        this.eventController = new KarelRuntimeEventTarget();\n        this.load([['HALT']]);\n    }\n    /**\n     * Loads the runtime with an opcode\n     * @param opcodes The program as given by the compiler\n     */\n    load(opcodes) {\n        let error_mapping = ['WALL', 'WORLDUNDERFLOW', 'BAGUNDERFLOW', 'INSTRUCTION'];\n        this.rawOpcodes = opcodes;\n        let function_map = {};\n        this.functionNames = [];\n        let function_idx = 0;\n        this.program = new Int32Array(new ArrayBuffer(opcodes.length * 3 * 4));\n        for (let i = 0; i < opcodes.length; i++) {\n            const currentOpcode = opcodes[i];\n            this.program[3 * i] = getOpCodeID(currentOpcode[0]);\n            if (currentOpcode.length > 1) {\n                this.program[3 * i + 1] = currentOpcode[1];\n            }\n            if (currentOpcode[0] == \"LINE\") {\n                this.program[3 * i + 2] = currentOpcode[2];\n            }\n            if (currentOpcode[0] == 'CALL') {\n                if (!function_map.hasOwnProperty(currentOpcode[2])) {\n                    function_map[currentOpcode[2]] = function_idx;\n                    this.functionNames[function_idx++] = currentOpcode[2];\n                }\n                this.program[3 * i + 2] = function_map[currentOpcode[2]];\n            }\n            else if (currentOpcode[0] == 'EZ') {\n                this.program[3 * i + 1] = error_mapping.indexOf(currentOpcode[1]);\n                if (this.program[3 * i + 1] == -1) {\n                    throw new Error('Invalid error: ' + currentOpcode[1]);\n                }\n            }\n        }\n        this.reset();\n    }\n    /**\n     * Starts the execution\n     */\n    start() {\n        this.eventController.fireEvent('start', this, {\n            type: \"start\",\n            target: this,\n            world: this.world\n        });\n    }\n    /**\n     * Resets the state. **Does not** reset the world\n     */\n    reset() {\n        this.state = {\n            pc: 0,\n            sp: -1,\n            fp: -1,\n            line: -1,\n            column: -1,\n            ic: 0,\n            ret: 0,\n            stack: new Int32Array(new ArrayBuffer((0xffff * 16 + 40) * 4)),\n            stackSize: 0,\n            stackMemory: 0,\n            // Instruction counts\n            moveCount: 0,\n            turnLeftCount: 0,\n            pickBuzzerCount: 0,\n            leaveBuzzerCount: 0,\n            // Flags\n            jumped: false,\n            running: true,\n        };\n        if (this.debug) {\n            this.eventController.fireEvent('debug', this, {\n                type: \"debug\",\n                target: this,\n                message: JSON.stringify(this.rawOpcodes),\n                debugType: 'program',\n            });\n        }\n    }\n    /**\n     * Runs the program until the next Line instruction or until it stops running.\n     */\n    step() {\n        while (this.state.running) {\n            try {\n                if (this.program[3 * this.state.pc] == OpCodeID.LINE) {\n                    this.next();\n                    break;\n                }\n                this.next();\n            }\n            finally {\n                if (!this.state.running) {\n                    this.eventController.fireEvent('stop', this, {\n                        type: \"stop\",\n                        target: this,\n                        world: this.world,\n                    });\n                }\n            }\n        }\n        return this.state.running;\n    }\n    /**\n     * Executes the instruction at the program counter.\n     */\n    next() {\n        if (!this.state.running)\n            return;\n        let world = this.world;\n        if (this.state.ic >= world.maxInstructions) {\n            this.state.running = false;\n            this.state.error = ErrorType.INSTRUCTION;\n            return false;\n        }\n        else if (this.state.stackSize >= this.world.maxStackSize) {\n            this.state.running = false;\n            this.state.error = ErrorType.STACK;\n            return false;\n        }\n        let rot;\n        let di = [0, 1, 0, -1];\n        let dj = [-1, 0, 1, 0];\n        let paramCount, newSP, op1, op2, fname, params, line, fromFName, npc;\n        try {\n            if (this.debug) {\n                this.eventController.fireEvent('debug', this, {\n                    type: \"debug\",\n                    target: this,\n                    message: JSON.stringify(this.program[3 * this.state.pc] +\n                        ' ' +\n                        this.rawOpcodes[this.state.pc]),\n                    debugType: 'opcode',\n                });\n            }\n            switch (this.program[3 * this.state.pc]) {\n                case OpCodeID.HALT: {\n                    this.state.running = false;\n                    break;\n                }\n                case OpCodeID.LINE: {\n                    this.state.line = this.program[3 * this.state.pc + 1];\n                    this.state.column = this.program[3 * this.state.pc + 2];\n                    break;\n                }\n                case OpCodeID.LEFT: {\n                    this.state.ic++;\n                    this.world.orientation--;\n                    if (this.world.orientation < 0) {\n                        this.world.orientation = 3;\n                    }\n                    this.world.dirty = true;\n                    this.state.turnLeftCount++;\n                    if (this.world.maxTurnLeft >= 0 &&\n                        this.state.turnLeftCount > this.world.maxTurnLeft) {\n                        this.state.running = false;\n                        this.state.error = ErrorType.INSTRUCTION;\n                        this.state.errorData = {\n                            type: ErrorType.INSTRUCTION,\n                            instruction: 'LEFT'\n                        };\n                    }\n                    break;\n                }\n                case OpCodeID.WORLDWALLS: {\n                    this.state.stack[++this.state.sp] = world.walls(world.i, world.j);\n                    break;\n                }\n                case OpCodeID.ORIENTATION: {\n                    this.state.stack[++this.state.sp] = world.orientation;\n                    break;\n                }\n                case OpCodeID.ROTL: {\n                    rot = this.state.stack[this.state.sp] - 1;\n                    if (rot < 0) {\n                        rot = 3;\n                    }\n                    this.state.stack[this.state.sp] = rot;\n                    break;\n                }\n                case OpCodeID.ROTR: {\n                    rot = this.state.stack[this.state.sp] + 1;\n                    if (rot > 3) {\n                        rot = 0;\n                    }\n                    this.state.stack[this.state.sp] = rot;\n                    break;\n                }\n                case OpCodeID.MASK: {\n                    this.state.stack[this.state.sp] = 1 << this.state.stack[this.state.sp];\n                    break;\n                }\n                case OpCodeID.NOT: {\n                    this.state.stack[this.state.sp] =\n                        this.state.stack[this.state.sp] === 0 ? 1 : 0;\n                    break;\n                }\n                case OpCodeID.AND: {\n                    op2 = this.state.stack[this.state.sp--];\n                    op1 = this.state.stack[this.state.sp--];\n                    this.state.stack[++this.state.sp] = op1 & op2 ? 1 : 0;\n                    break;\n                }\n                case OpCodeID.OR: {\n                    op2 = this.state.stack[this.state.sp--];\n                    op1 = this.state.stack[this.state.sp--];\n                    this.state.stack[++this.state.sp] = op1 | op2 ? 1 : 0;\n                    break;\n                }\n                case OpCodeID.EQ: {\n                    op2 = this.state.stack[this.state.sp--];\n                    op1 = this.state.stack[this.state.sp--];\n                    this.state.stack[++this.state.sp] = op1 == op2 ? 1 : 0;\n                    break;\n                }\n                case OpCodeID.EZ: {\n                    if (this.state.stack[this.state.sp--] === 0) {\n                        this.state.error = [ErrorType.WALL, ErrorType.WORLDUNDERFLOW, ErrorType.BAGUNDERFLOW][this.program[3 * this.state.pc + 1]];\n                        this.state.running = false;\n                    }\n                    break;\n                }\n                case OpCodeID.JZ: {\n                    this.state.ic++;\n                    if (this.state.stack[this.state.sp--] === 0) {\n                        this.state.pc += this.program[3 * this.state.pc + 1];\n                    }\n                    break;\n                }\n                case OpCodeID.JMP: {\n                    this.state.ic++;\n                    this.state.pc += this.program[3 * this.state.pc + 1];\n                    break;\n                }\n                case OpCodeID.FORWARD: {\n                    this.state.ic++;\n                    this.world.i += di[this.world.orientation];\n                    this.world.j += dj[this.world.orientation];\n                    this.world.dirty = true;\n                    this.state.moveCount++;\n                    if (this.world.maxMove >= 0 &&\n                        this.state.moveCount > this.world.maxMove) {\n                        this.state.running = false;\n                        this.state.error = ErrorType.INSTRUCTION;\n                        this.state.errorData = {\n                            type: ErrorType.INSTRUCTION,\n                            instruction: 'FORWARD'\n                        };\n                    }\n                    break;\n                }\n                case OpCodeID.WORLDBUZZERS: {\n                    this.state.stack[++this.state.sp] = this.world.buzzers(world.i, world.j);\n                    break;\n                }\n                case OpCodeID.BAGBUZZERS: {\n                    this.state.stack[++this.state.sp] = this.world.bagBuzzers;\n                    break;\n                }\n                case OpCodeID.PICKBUZZER: {\n                    this.state.ic++;\n                    this.world.pickBuzzer(this.world.i, this.world.j);\n                    this.state.pickBuzzerCount++;\n                    if (this.world.maxPickBuzzer >= 0 &&\n                        this.state.pickBuzzerCount > this.world.maxPickBuzzer) {\n                        this.state.running = false;\n                        this.state.error = ErrorType.INSTRUCTION;\n                        this.state.errorData = {\n                            type: ErrorType.INSTRUCTION,\n                            instruction: 'PICKBUZZER'\n                        };\n                    }\n                    break;\n                }\n                case OpCodeID.LEAVEBUZZER: {\n                    this.state.ic++;\n                    this.world.leaveBuzzer(this.world.i, this.world.j);\n                    this.state.leaveBuzzerCount++;\n                    if (this.world.maxLeaveBuzzer >= 0 &&\n                        this.state.leaveBuzzerCount > this.world.maxLeaveBuzzer) {\n                        this.state.running = false;\n                        this.state.error = ErrorType.INSTRUCTION;\n                        this.state.errorData = {\n                            type: ErrorType.INSTRUCTION,\n                            instruction: 'LEAVEBUZZER'\n                        };\n                    }\n                    break;\n                }\n                case OpCodeID.LOAD: {\n                    this.state.stack[++this.state.sp] = this.program[3 * this.state.pc + 1];\n                    break;\n                }\n                case OpCodeID.POP: {\n                    this.state.sp--;\n                    break;\n                }\n                case OpCodeID.DUP: {\n                    this.state.stack[++this.state.sp] = this.state.stack[this.state.sp - 1];\n                    break;\n                }\n                case OpCodeID.DEC: {\n                    this.state.stack[this.state.sp] -= this.program[3 * this.state.pc + 1];\n                    break;\n                }\n                case OpCodeID.INC: {\n                    this.state.stack[this.state.sp] += this.program[3 * this.state.pc + 1];\n                    break;\n                }\n                case OpCodeID.CALL: {\n                    this.state.ic++;\n                    // sp, pc, param\n                    paramCount = this.state.stack[this.state.sp--];\n                    newSP = this.state.sp - paramCount;\n                    fname = this.functionNames[this.program[3 * this.state.pc + 2]];\n                    this.state.stack[++this.state.sp] = this.state.fp;\n                    this.state.stack[++this.state.sp] = newSP;\n                    this.state.stack[++this.state.sp] = this.state.pc;\n                    this.state.stack[++this.state.sp] = paramCount;\n                    this.state.fp = newSP + 1 + paramCount;\n                    this.state.pc = this.program[3 * this.state.pc + 1];\n                    this.state.jumped = true;\n                    this.state.stackSize++;\n                    this.state.stackMemory += Math.max(1, paramCount);\n                    if (this.state.stackSize >= this.world.maxStackSize) {\n                        this.state.running = false;\n                        this.state.error = ErrorType.STACK;\n                    }\n                    else if (this.state.stackMemory >= this.world.maxStackMemory) {\n                        this.state.running = false;\n                        this.state.error = ErrorType.STACKMEMORY;\n                    }\n                    else if (paramCount > this.world.maxCallSize) {\n                        this.state.running = false;\n                        this.state.error = ErrorType.CALLSIZE;\n                    }\n                    else if (!this.disableStackEvents) {\n                        this.eventController.fireEvent('call', this, {\n                            type: \"call\",\n                            function: fname,\n                            params: this.state.stack.subarray(this.state.fp - paramCount, this.state.fp),\n                            line: this.state.line,\n                            target: this,\n                        });\n                    }\n                    break;\n                }\n                case OpCodeID.RET: {\n                    if (this.state.fp < 0) {\n                        this.state.running = false;\n                        break;\n                    }\n                    paramCount = this.state.stack[this.state.fp + 3];\n                    this.state.pc = this.state.stack[this.state.fp + 2];\n                    this.state.sp = this.state.stack[this.state.fp + 1];\n                    this.state.fp = this.state.stack[this.state.fp];\n                    this.state.stackSize--;\n                    this.state.stackMemory -= Math.max(1, paramCount);\n                    ;\n                    if (!this.disableStackEvents) {\n                        params = this.state.stack.subarray(0, 0);\n                        fromFName = this.functionNames[this.program[3 * this.state.pc + 2]];\n                        fname = \"N/A\";\n                        line = -2;\n                        if (this.state.stackSize >= 1) {\n                            npc = this.state.stack[this.state.fp + 2]; //Get the function name from the function that called me\n                            fname = this.functionNames[this.program[3 * npc + 2]];\n                            line = this.program[3 * (npc + 1) + 1]; //Get line. A call always is LINE -> LOAD PARAM -> CALL -> LINE\n                            paramCount = this.state.stack[this.state.fp + 3];\n                            params = this.state.stack.subarray(this.state.fp - paramCount, this.state.fp);\n                        }\n                        this.eventController.fireEvent('return', this, {\n                            type: \"return\",\n                            target: this,\n                            params: params,\n                            function: fname,\n                            fromFunction: fromFName,\n                            line: line,\n                            returnValue: this.state.ret\n                        });\n                    }\n                    break;\n                }\n                case OpCodeID.PARAM: {\n                    this.state.stack[++this.state.sp] =\n                        this.state.stack[this.state.fp - 1 - this.program[3 * this.state.pc + 1]];\n                    break;\n                }\n                case OpCodeID.SRET: {\n                    this.state.ret = this.state.stack[this.state.sp--];\n                    break;\n                }\n                case OpCodeID.LRET: {\n                    this.state.stack[++this.state.sp] = this.state.ret;\n                    break;\n                }\n                case OpCodeID.LT: {\n                    op2 = this.state.stack[this.state.sp--];\n                    op1 = this.state.stack[this.state.sp--];\n                    this.state.stack[++this.state.sp] = op1 < op2 ? 1 : 0;\n                    break;\n                }\n                case OpCodeID.LTE: {\n                    op2 = this.state.stack[this.state.sp--];\n                    op1 = this.state.stack[this.state.sp--];\n                    this.state.stack[++this.state.sp] = op1 <= op2 ? 1 : 0;\n                    break;\n                }\n                case OpCodeID.ROW:\n                    this.state.stack[++this.state.sp] = this.world.i;\n                    break;\n                case OpCodeID.COLUMN:\n                    this.state.stack[++this.state.sp] = this.world.j;\n                    break;\n                default: {\n                    this.state.running = false;\n                    if (this.debug) {\n                        this.eventController.fireEvent('debug', this, {\n                            type: \"debug\",\n                            target: this,\n                            message: 'Missing opcode ' + this.rawOpcodes[this.state.pc][0],\n                            debugType: 'opcode',\n                        });\n                    }\n                    this.state.error = ErrorType.INVALIDOPCODE;\n                    this.state.errorData = {\n                        type: ErrorType.INSTRUCTION,\n                        instruction: OpCodeID[this.program[this.state.pc * 3]]\n                    };\n                    return false;\n                }\n            }\n            if (this.state.jumped) {\n                this.state.jumped = false;\n            }\n            else {\n                this.state.pc++;\n            }\n            if (this.debug) {\n                let copy = {\n                    pc: this.state.pc,\n                    stackSize: this.state.stackSize,\n                    expressionStack: Array.from(this.state.stack.slice(this.state.fp + 4, this.state.sp + 1)),\n                    line: this.state.line,\n                    ic: this.state.ic,\n                    running: this.state.running,\n                };\n                this.eventController.fireEvent('debug', this, {\n                    type: \"debug\",\n                    target: this,\n                    message: JSON.stringify(copy),\n                    debugType: 'state',\n                });\n            }\n        }\n        catch (e) {\n            this.state.running = false;\n            console.error(e);\n            console.log(e.stack);\n            throw e;\n        }\n        return true;\n    }\n}\n\n/**\n * Dump flags, they change what is emitted to the output of an world\n */\nvar DumpTypes;\n(function (DumpTypes) {\n    DumpTypes[\"DUMP_WORLD\"] = \"mundo\";\n    DumpTypes[\"DUMP_POSITION\"] = \"posicion\";\n    DumpTypes[\"DUMP_ORIENTATION\"] = \"orientacion\";\n    DumpTypes[\"DUMP_INSTRUCTIONS\"] = \"instrucciones\";\n    DumpTypes[\"DUMP_ALL_BUZZERS\"] = \"universo\";\n    DumpTypes[\"DUMP_BAG\"] = \"mochila\";\n    DumpTypes[\"DUMP_MOVE\"] = \"avanza\";\n    DumpTypes[\"DUMP_LEFT\"] = \"gira_izquierda\";\n    DumpTypes[\"DUMP_PICK_BUZZER\"] = \"coge_zumbador\";\n    DumpTypes[\"DUMP_LEAVE_BUZZER\"] = \"deja_zumbador\";\n})(DumpTypes || (DumpTypes = {}));\n/**\n * Maps errors to their output message\n */\nvar ERROR_MAPPING;\n(function (ERROR_MAPPING) {\n    ERROR_MAPPING[\"BAGUNDERFLOW\"] = \"ZUMBADOR INVALIDO\";\n    ERROR_MAPPING[\"WALL\"] = \"MOVIMIENTO INVALIDO\";\n    ERROR_MAPPING[\"WORLDUNDERFLOW\"] = \"ZUMBADOR INVALIDO\";\n    ERROR_MAPPING[\"STACK\"] = \"STACK OVERFLOW\";\n    ERROR_MAPPING[\"INSTRUCTION\"] = \"LIMITE DE INSTRUCCIONES\";\n    ERROR_MAPPING[\"STACKMEMORY\"] = \"LIMITE DE MEMORIA DEL STACK\";\n    ERROR_MAPPING[\"CALLSIZE\"] = \"LIMITE DE LONGITUD DE LLAMADA\";\n})(ERROR_MAPPING || (ERROR_MAPPING = {}));\n/**\n * Represents a Karel World, it keeps track of both the starting state and the current state\n * Contains information such as beepers, walls, Karel position, etc.\n */\nclass World {\n    constructor(w, h) {\n        /**\n         * Sets the current walls at the current position\n         *\n         * Does not set modifies the neighboring cells, so it allows \"one way\" walls.\n         *\n         * It cannot destroy border walls\n         *\n         * @param i Row\n         * @param j Column\n         * @param wallMask Value of the mask\n         */\n        this.setWallMask = function (i, j, wallMask) {\n            let newMask = wallMask;\n            if (wallMask < 0 ||\n                wallMask >= 16 ||\n                1 > i ||\n                i > this.h ||\n                1 > j ||\n                j > this.w) {\n                return;\n            }\n            //This ifs avoid removing outer world walls\n            if (j == 1)\n                newMask |= 1 << 0;\n            if (i == 1)\n                newMask |= 1 << 3;\n            if (i == this.h)\n                newMask |= 1 << 1;\n            if (j == this.w)\n                newMask |= 1 << 2;\n            this.wallMap[this.w * i + j] = newMask;\n        };\n        this.init(w, h);\n    }\n    init(w, h) {\n        this.w = w;\n        this.h = h;\n        this.runtime = new Runtime(this);\n        this.createMaps();\n        this.clear();\n    }\n    /**\n     * Creates and reserves the memory for the arrays\n     */\n    createMaps() {\n        if (ArrayBuffer) {\n            let len = (this.w + 2) * (this.h + 2);\n            this.map = new Int32Array(new ArrayBuffer(len * 4));\n            this.currentMap = new Int32Array(new ArrayBuffer(len * 4));\n            this.wallMap = new Uint8Array(new ArrayBuffer(len));\n        }\n        else {\n            this.map = [];\n            this.currentMap = [];\n            this.wallMap = [];\n            for (let i = 0; i <= this.h; i++) {\n                for (let j = 0; j <= this.w; j++) {\n                    this.map.push(0);\n                    this.currentMap.push(0);\n                    this.wallMap.push(0);\n                }\n            }\n        }\n    }\n    /**\n     * Changes the size of the world\n     * @param w New width\n     * @param h New Height\n     */\n    resize(w, h) {\n        // Eliminamos las paredes del borde\n        for (let i = 1; i <= this.h; i++) {\n            this.wallMap[this.w * i + 1] &= ~(1 << 0);\n            this.wallMap[this.w * (i + 1)] &= ~(1 << 2);\n        }\n        for (let j = 1; j <= this.w; j++) {\n            this.wallMap[this.w * this.h + j] &= ~(1 << 1);\n            this.wallMap[this.w + j] &= ~(1 << 3);\n        }\n        let oldW = this.w;\n        let oldH = this.h;\n        let oldMap = this.map;\n        //   let oldCurrentMap = this.oldCurrentMap;\n        let oldWallMap = this.wallMap;\n        let oldDumpCells = this.dumpCells;\n        this.w = w;\n        this.h = h;\n        this.createMaps();\n        this.addBorderWalls();\n        // Copiamos todas las paredes y zumbadores\n        for (let i = 1; i <= oldH; i++) {\n            for (let j = 1; j <= oldW; j++) {\n                this.setCellWalls(i, j, oldWallMap[oldW * i + j]);\n                this.setBuzzers(i, j, oldMap[oldW * i + j]);\n            }\n        }\n        // Vaciamos dumpCells y la llenamos de nuevo\n        this.dumpCells = [];\n        for (let dumpPos = 0; dumpPos < oldDumpCells.length; dumpPos++) {\n            if (oldDumpCells[dumpPos][0] <= this.h &&\n                oldDumpCells[dumpPos][1] <= this.w) {\n                this.setDumpCell(oldDumpCells[dumpPos][0], oldDumpCells[dumpPos][1], true);\n            }\n        }\n        // Checamos si karel sigue dentro del mundo\n        if (this.start_i > this.h)\n            this.start_i = this.i = this.h;\n        if (this.start_j > this.w)\n            this.start_j = this.j = this.w;\n        this.dirty = true;\n    }\n    /**\n     * Sets all values to their default.\n     */\n    clear() {\n        for (let i = 0; i < this.wallMap.length; i++) {\n            this.wallMap[i] = 0;\n        }\n        for (let i = 0; i < this.map.length; i++) {\n            this.map[i] = this.currentMap[i] = 0;\n        }\n        this.addBorderWalls();\n        this.orientation = 1;\n        this.startOrientation = 1;\n        this.start_i = 1;\n        this.i = 1;\n        this.start_j = 1;\n        this.j = 1;\n        this.startBagBuzzers = 0;\n        this.bagBuzzers = 0;\n        this.dumps = {};\n        this.dumpCells = [];\n        this.maxInstructions = 10000000;\n        this.maxMove = -1;\n        this.maxTurnLeft = -1;\n        this.maxPickBuzzer = -1;\n        this.maxLeaveBuzzer = -1;\n        this.maxStackSize = 65000;\n        this.maxStackMemory = 65000;\n        this.maxCallSize = 5;\n        this.worldName = 'mundo_0';\n        this.programName = 'p1';\n        this.dirty = true;\n    }\n    /**\n     * Returns the wall mask at a location\n     * @param i row\n     * @param j column\n     * @returns Wall Mask\n     */\n    walls(i, j) {\n        if (0 > i || i > this.h || 0 > j || j > this.w)\n            return 0;\n        return this.wallMap[this.w * i + j];\n    }\n    /**\n     * Toggles a wall in the specified orientation. It keeps the border walls and toggles the corresponding neighbor wall\n     *\n     * @param i row\n     * @param j column\n     * @param orientation number, they're [west, north, east, south]\n     */\n    toggleWall(i, j, orientation) {\n        if ((j == 1 && orientation === 0) ||\n            (i == 1 && orientation == 3) ||\n            (i == this.h && orientation == 1) ||\n            (j == this.w && orientation == 2)) {\n            return;\n        }\n        if (orientation < 0 ||\n            orientation >= 4 ||\n            1 > i ||\n            i > this.h ||\n            1 > j ||\n            j > this.w) {\n            return;\n        }\n        this.wallMap[this.w * i + j] ^= 1 << orientation;\n        // Needed to prevent Karel from traversing walls from one direction, but not\n        // from the other side.\n        if (orientation === 0 && j > 1) {\n            this.wallMap[this.w * i + (j - 1)] ^= 1 << 2;\n        }\n        else if (orientation === 1 && i < this.h) {\n            this.wallMap[this.w * (i + 1) + j] ^= 1 << 3;\n        }\n        else if (orientation === 2 && j < this.w) {\n            this.wallMap[this.w * i + (j + 1)] ^= 1 << 0;\n        }\n        else if (orientation === 3 && i > 1) {\n            this.wallMap[this.w * (i - 1) + j] ^= 1 << 1;\n        }\n        this.dirty = true;\n    }\n    /**\n     * Adds the border walls\n     */\n    addBorderWalls() {\n        for (let i = 1; i <= this.h; i++) {\n            this.addWall(i, 1, 0);\n            this.addWall(i, this.w, 2);\n        }\n        for (let j = 1; j <= this.w; j++) {\n            this.addWall(this.h, j, 1);\n            this.addWall(1, j, 3);\n        }\n    }\n    /**\n     * Adds the walls set in the wellMask to the specified cell and the corresponding neighbor's wall.\n     * @param i row\n     * @param j column\n     * @param wallMask Walls (lsb to msb is West, North, East, South)\n     */\n    setCellWalls(i, j, wallMask) {\n        for (let pos = 0; pos < 4; pos++) {\n            if (wallMask & (1 << pos))\n                this.addWall(i, j, pos);\n        }\n    }\n    /**\n     * Adds a wall in to the specified cell and the corresponding neighbor's wall\n     * @param i row\n     * @param j column\n     * @param orientation Wall number (0-West, 1-North, 2-East, 3-South)\n     */\n    addWall(i, j, orientation) {\n        if (orientation < 0 ||\n            orientation >= 4 ||\n            1 > i ||\n            i > this.h ||\n            1 > j ||\n            j > this.w)\n            return;\n        this.wallMap[this.w * i + j] |= 1 << orientation;\n        // Needed to prevent Karel from traversing walls from one direction, but not\n        // from the other side.\n        if (orientation === 0 && j > 1)\n            this.wallMap[this.w * i + (j - 1)] |= 1 << 2;\n        else if (orientation === 1 && i < this.h)\n            this.wallMap[this.w * (i + 1) + j] |= 1 << 3;\n        else if (orientation === 2 && j < this.w)\n            this.wallMap[this.w * i + (j + 1)] |= 1 << 0;\n        else if (orientation === 3 && i > 1)\n            this.wallMap[this.w * (i - 1) + j] |= 1 << 1;\n        this.dirty = true;\n    }\n    /**\n     * Set the amount of buzzers in a cell in both the **start** and **current** state\n     * @param i row\n     * @param j column\n     * @param count Number of beepers\n     */\n    setBuzzers(i, j, count) {\n        if (0 >= i || i > this.h || 0 >= j || j > this.w)\n            return;\n        this.map[this.w * i + j] =\n            this.currentMap[this.w * i + j] =\n                count == 0xffff ? -1 : count;\n        this.dirty = true;\n    }\n    /**\n     * Gets the amount of buzzers at a cell in the **current** state\n     * @param i cell row\n     * @param j cell column\n     * @returns beeper amount\n     */\n    buzzers(i, j) {\n        if (0 >= i || i > this.h || 0 >= j || j > this.w)\n            return 0;\n        return this.currentMap[this.w * i + j];\n    }\n    /**\n     * Gets the amount of buzzers at a cell in the **starting** state\n     * @param i cell row\n     * @param j cell column\n     * @returns beeper amount\n     */\n    startBuzzers(i, j) {\n        if (0 >= i || i > this.h || 0 >= j || j > this.w)\n            return 0;\n        return this.map[this.w * i + j];\n    }\n    /**\n     * Reduces in one the **current** cell and increases in one the **current** beeperBag. Respects infinite cells and bag.\n     * @param i cell\n     * @param j row\n     */\n    pickBuzzer(i, j) {\n        if (0 >= i || i > this.h || 0 >= j || j > this.w)\n            return;\n        if (this.currentMap[this.w * i + j] != -1) {\n            this.currentMap[this.w * i + j]--;\n        }\n        if (this.bagBuzzers != -1) {\n            this.bagBuzzers++;\n        }\n        this.dirty = true;\n    }\n    /**\n     * Increases in one the **current** cell and reduces  in one the **current** beeperBag. Respects infinite cells and bag\n     * @param i cell\n     * @param j row\n     */\n    leaveBuzzer(i, j) {\n        if (0 >= i || i > this.h || 0 >= j || j > this.w)\n            return;\n        if (this.currentMap[this.w * i + j] != -1) {\n            this.currentMap[this.w * i + j]++;\n        }\n        if (this.bagBuzzers != -1) {\n            this.bagBuzzers--;\n        }\n        this.dirty = true;\n    }\n    /**\n     * Adds or removes a cell to the dump list\n     * @param i row\n     * @param j column\n     * @param dumpState True if it should be added, false if not\n     */\n    setDumpCell(i, j, dumpState) {\n        let dumpPos = -1;\n        if (0 >= i || i > this.h || 0 >= j || j > this.w)\n            return;\n        for (dumpPos = 0; dumpPos < this.dumpCells.length; dumpPos++) {\n            if (this.dumpCells[dumpPos][0] == i && this.dumpCells[dumpPos][1] == j) {\n                break;\n            }\n        }\n        if (dumpPos < this.dumpCells.length) {\n            if (dumpState)\n                return;\n            this.dumpCells.splice(dumpPos, 1);\n        }\n        else {\n            if (!dumpState)\n                return;\n            this.dumpCells.push([i, j]);\n        }\n        this.dumps[DumpTypes.DUMP_WORLD] = this.dumpCells.length !== 0;\n    }\n    /**\n     * Alternates a cell if it is dumped or not\n     * @param i row\n     * @param j column\n     */\n    toggleDumpCell(i, j) {\n        let dumpPos = 0;\n        if (0 >= i || i >= this.h || 0 >= j || j >= this.w)\n            return;\n        for (; dumpPos < this.dumpCells.length; dumpPos++) {\n            if (this.dumpCells[dumpPos][0] == i && this.dumpCells[dumpPos][1] == j) {\n                break;\n            }\n        }\n        if (dumpPos < this.dumpCells.length) {\n            this.dumpCells.splice(dumpPos, 1);\n        }\n        else {\n            this.dumpCells.push([i, j]);\n        }\n        this.dumps[DumpTypes.DUMP_WORLD] = this.dumpCells.length !== 0;\n    }\n    /**\n     * Returns if a cell is in the dumped list\n     * @param i row\n     * @param j column\n     */\n    getDumpCell(i, j) {\n        let dumpPos = -1;\n        for (dumpPos = 0; dumpPos < this.dumpCells.length; dumpPos++) {\n            if (this.dumpCells[dumpPos][0] == i && this.dumpCells[dumpPos][1] == j) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Returns if a dump flag is set or not\n     * @param dumpFlag Flag to get\n     */\n    getDumps(dumpFlag) {\n        return this.dumps.hasOwnProperty(dumpFlag.toLowerCase()) && this.dumps[dumpFlag];\n    }\n    /**\n     * Sets or disables a dump flag\n     * @param dumpFlag Flag to set\n     * @param flagValue True if it dumps, false if not\n     */\n    setDumps(dumpFlag, flagValue) {\n        this.dumps[dumpFlag] = flagValue;\n    }\n    /**\n     * Toggles a dump flag\n     * @param dumpFlag Flag to toggle\n     */\n    toggleDumps(dumpFlag) {\n        this.setDumps(dumpFlag, !this.getDumps(dumpFlag));\n    }\n    /**\n     * Loads a world data into the this object\n     * @param doc XML document that represents the world\n     */\n    load(doc) {\n        const self = this;\n        self.clear();\n        let rules = {\n            mundo: function (mundo) {\n                let alto = mundo.getAttribute('alto');\n                let ancho = mundo.getAttribute('ancho');\n                if (!alto || !ancho) {\n                    return;\n                }\n                alto = parseInt(alto, 10);\n                ancho = parseInt(ancho, 10);\n                if (!alto || !ancho) {\n                    return;\n                }\n                self.resize(ancho, alto);\n            },\n            condiciones: function (condiciones) {\n                self.maxInstructions =\n                    parseInt(condiciones.getAttribute('instruccionesMaximasAEjecutar'), 10) || 10000000;\n                self.maxStackSize =\n                    parseInt(condiciones.getAttribute('longitudStack'), 10) || 65000;\n                self.maxStackMemory =\n                    parseInt(condiciones.getAttribute('memoriaStack'), 10) || 65000;\n                self.maxCallSize =\n                    parseInt(condiciones.getAttribute('llamadaMaxima'), 10) || 5;\n            },\n            comando: function (comando) {\n                let name = comando.getAttribute('nombre');\n                let val = parseInt(comando.getAttribute('maximoNumeroDeEjecuciones'), 10);\n                if (!name || !val) {\n                    return;\n                }\n                if (name == 'AVANZA') {\n                    self.maxMove = val;\n                }\n                else if (name == 'GIRA_IZQUIERDA') {\n                    self.maxTurnLeft = val;\n                }\n                else if (name == 'COGE_ZUMBADOR') {\n                    self.maxPickBuzzer = val;\n                }\n                else if (name == 'DEJA_ZUMBADOR') {\n                    self.maxLeaveBuzzer = val;\n                }\n            },\n            monton: function (monton) {\n                let i = parseInt(monton.getAttribute('y'), 10);\n                let j = parseInt(monton.getAttribute('x'), 10);\n                let zumbadores = monton.getAttribute('zumbadores');\n                if (zumbadores == 'INFINITO') {\n                    zumbadores = -1;\n                }\n                else {\n                    zumbadores = parseInt(zumbadores, 10);\n                    if (isNaN(zumbadores))\n                        zumbadores = 0;\n                }\n                self.setBuzzers(i, j, zumbadores);\n            },\n            pared: function (pared) {\n                let i = parseInt(pared.getAttribute('y1'), 10) + 1;\n                let j = parseInt(pared.getAttribute('x1'), 10) + 1;\n                if (pared.getAttribute('x2')) {\n                    let j2 = parseInt(pared.getAttribute('x2'), 10) + 1;\n                    if (j2 > j) {\n                        self.addWall(i, j, 3);\n                    }\n                    else {\n                        self.addWall(i, j2, 3);\n                    }\n                }\n                else if (pared.getAttribute('y2')) {\n                    let i2 = parseInt(pared.getAttribute('y2'), 10) + 1;\n                    if (i2 > i) {\n                        self.addWall(i, j, 0);\n                    }\n                    else {\n                        self.addWall(i2, j, 0);\n                    }\n                }\n            },\n            despliega: function (despliega) {\n                self.dumps[despliega.getAttribute('tipo').toLowerCase()] = true;\n            },\n            posicionDump: function (dump) {\n                self.dumpCells.push([\n                    parseInt(dump.getAttribute('y'), 10),\n                    parseInt(dump.getAttribute('x'), 10),\n                ]);\n            },\n            programa: function (programa) {\n                let xKarel = parseInt(programa.getAttribute('xKarel') || programa.getAttribute('xkarel'), 10);\n                let yKarel = parseInt(programa.getAttribute('yKarel') || programa.getAttribute('ykarel'), 10);\n                self.rotate(programa.getAttribute('direccionKarel') ||\n                    programa.getAttribute('direccionkarel'));\n                self.worldName =\n                    programa.getAttribute('mundoDeEjecucion') ||\n                        programa.getAttribute('mundodeejecucion');\n                self.programName = programa.getAttribute('nombre');\n                self.move(yKarel, xKarel);\n                let bagBuzzers = programa.getAttribute('mochilaKarel') ||\n                    programa.getAttribute('mochilakarel') ||\n                    0;\n                if (bagBuzzers == 'INFINITO') {\n                    self.setBagBuzzers(-1);\n                }\n                else {\n                    self.setBagBuzzers(parseInt(bagBuzzers));\n                }\n            },\n        };\n        function traverse(node) {\n            let type = node.nodeName;\n            if (rules.hasOwnProperty(type)) {\n                rules[type](node);\n            }\n            for (let i = 0; i < node.childNodes.length; i++) {\n                if (node.childNodes.item(i).nodeType ===\n                    (node.ELEMENT_NODE || Node.ELEMENT_NODE)) {\n                    traverse(node.childNodes.item(i));\n                }\n            }\n        }\n        traverse(doc);\n        self.reset();\n    }\n    /**\n     * Recursively converts a js object into an XML string\n     * @param node A Object node/value\n     * @param name The object name\n     * @param indentation THe indentation for the xml\n     * @returns A XML string\n     */\n    serialize(node, name, indentation) {\n        let result = '';\n        for (let i = 0; i < indentation; i++) {\n            result += '\\t';\n        }\n        if (typeof node === 'string' || typeof node === 'number') {\n            return result + node;\n        }\n        if (Array.isArray(node)) {\n            result = '';\n            for (let i = 0; i < node.length; i++) {\n                result += this.serialize(node[i], name, indentation);\n            }\n        }\n        else {\n            let childResult = '';\n            for (let p in node) {\n                if (node.hasOwnProperty(p)) {\n                    if (p[0] == '#') {\n                        continue;\n                    }\n                    else {\n                        childResult += this.serialize(node[p], p, indentation + 1);\n                    }\n                }\n            }\n            result += '<' + name;\n            if (node.hasOwnProperty('#attributes')) {\n                for (let p in node['#attributes']) {\n                    if (node['#attributes'].hasOwnProperty(p)) {\n                        result += ' ' + p + '=\"' + node['#attributes'][p] + '\"';\n                    }\n                }\n            }\n            if (node.hasOwnProperty('#text')) {\n                result += '>' + node['#text'] + '</' + name + '>\\n';\n            }\n            else if (childResult == '') {\n                result += '/>\\n';\n            }\n            else {\n                result += '>\\n';\n                result += childResult;\n                for (let i = 0; i < indentation; i++) {\n                    result += '\\t';\n                }\n                result += '</' + name + '>\\n';\n            }\n        }\n        return result;\n    }\n    /**\n     * Generates the XML representation of the input\n     * @param targetState if \"current\", it saves the current state. If \"start\" it saves the start state\n     * @returns XML string representing the input\n     */\n    save(targetState) {\n        let result = {\n            condiciones: {\n                '#attributes': {\n                    instruccionesMaximasAEjecutar: this.maxInstructions,\n                    longitudStack: this.maxStackSize,\n                    memoriaStack: this.maxStackMemory,\n                    llamadaMaxima: this.maxCallSize,\n                },\n                comando: []\n            },\n            mundos: {\n                mundo: {\n                    '#attributes': { nombre: this.worldName, ancho: this.w, alto: this.h },\n                    monton: [],\n                    pared: [],\n                    posicionDump: [],\n                },\n            },\n            programas: {\n                '#attributes': {\n                    tipoEjecucion: 'CONTINUA',\n                    intruccionesCambioContexto: 1,\n                    milisegundosParaPasoAutomatico: 0,\n                },\n                programa: {\n                    '#attributes': {\n                        nombre: this.programName,\n                        ruta: '{$2$}',\n                        mundoDeEjecucion: this.worldName,\n                        xKarel: targetState === \"start\" ? this.start_j : this.j,\n                        yKarel: targetState === \"start\" ? this.start_i : this.i,\n                        direccionKarel: ['OESTE', 'NORTE', 'ESTE', 'SUR'][targetState === \"start\" ? this.startOrientation : this.orientation],\n                        mochilaKarel: this.bagBuzzers == -1 ? 'INFINITO' : (targetState === \"start\" ? this.startBagBuzzers : this.bagBuzzers),\n                    },\n                    despliega: [],\n                },\n            },\n        };\n        for (let i = 1; i <= this.h; i++) {\n            for (let j = 1; j <= this.w; j++) {\n                let buzzers = targetState === \"start\" ? this.startBuzzers(i, j) : this.buzzers(i, j);\n                if (buzzers !== 0) {\n                    result.mundos.mundo.monton.push({\n                        '#attributes': {\n                            x: j,\n                            y: i,\n                            zumbadores: buzzers == -1 ? 'INFINITO' : buzzers,\n                        },\n                    });\n                }\n            }\n        }\n        if (this.maxMove !== -1) {\n            result.condiciones.comando.push({\n                '#attributes': {\n                    nombre: \"AVANZA\",\n                    maximoNumeroDeEjecuciones: this.maxMove\n                }\n            });\n        }\n        if (this.maxTurnLeft !== -1) {\n            result.condiciones.comando.push({\n                '#attributes': {\n                    nombre: \"GIRA_IZQUIERDA\",\n                    maximoNumeroDeEjecuciones: this.maxTurnLeft\n                }\n            });\n        }\n        if (this.maxLeaveBuzzer !== -1) {\n            result.condiciones.comando.push({\n                '#attributes': {\n                    nombre: \"DEJA_ZUMBADOR\",\n                    maximoNumeroDeEjecuciones: this.maxLeaveBuzzer\n                }\n            });\n        }\n        if (this.maxPickBuzzer !== -1) {\n            result.condiciones.comando.push({\n                '#attributes': {\n                    nombre: \"COGE_ZUMBADOR\",\n                    maximoNumeroDeEjecuciones: this.maxPickBuzzer\n                }\n            });\n        }\n        for (let i = 1; i <= this.h; i++) {\n            for (let j = 1; j <= this.w; j++) {\n                let walls = this.walls(i, j);\n                for (let k = 2; k < 8; k <<= 1) {\n                    if (i == this.h && k == 2)\n                        continue;\n                    if (j == this.w && k == 4)\n                        continue;\n                    if ((walls & k) == k) {\n                        if (k == 2) {\n                            result.mundos.mundo.pared.push({\n                                '#attributes': { x1: j - 1, y1: i, x2: j },\n                            });\n                        }\n                        else if (k == 4) {\n                            result.mundos.mundo.pared.push({\n                                '#attributes': { x1: j, y1: i - 1, y2: i },\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        for (let i = 0; i < this.dumpCells.length; i++) {\n            result.mundos.mundo.posicionDump.push({\n                '#attributes': { x: this.dumpCells[i][1], y: this.dumpCells[i][0] },\n            });\n        }\n        for (let p in this.dumps) {\n            if (this.dumps.hasOwnProperty(p) && this.dumps[p]) {\n                result.programas.programa.despliega.push({\n                    '#attributes': { tipo: p.toUpperCase() },\n                });\n            }\n        }\n        return this.serialize(result, 'ejecucion', 0);\n    }\n    /**\n     * Generates the XML representation of the current state,\n     * you may need to first run the code to get the final output\n     * @returns  XML string representing the output\n    */\n    output() {\n        let result = {};\n        if (this.dumps[DumpTypes.DUMP_WORLD] || this.dumps[DumpTypes.DUMP_ALL_BUZZERS]) {\n            result.mundos = {\n                mundo: { '#attributes': { nombre: this.worldName }, linea: [] },\n            };\n            let dumpCells = {};\n            for (let i = 0; i < this.dumpCells.length; i++) {\n                if (!dumpCells.hasOwnProperty(this.dumpCells[i][0])) {\n                    dumpCells[this.dumpCells[i][0]] = {};\n                }\n                dumpCells[this.dumpCells[i][0]][this.dumpCells[i][1]] = true;\n            }\n            for (let i = this.h; i > 0; i--) {\n                let printCoordinate = true;\n                let line = '';\n                for (let j = 1; j <= this.w; j++) {\n                    if ((dumpCells[i] && dumpCells[i][j]) ||\n                        this.dumps[DumpTypes.DUMP_ALL_BUZZERS]) {\n                        if (this.buzzers(i, j) !== 0) {\n                            if (printCoordinate) {\n                                line += '(' + j + ') ';\n                            }\n                            // TODO: Este es un bug en karel.exe.\n                            line += (this.buzzers(i, j) & 0xffff) + ' ';\n                        }\n                        printCoordinate = this.buzzers(i, j) == 0;\n                    }\n                }\n                if (line !== '') {\n                    result.mundos.mundo.linea.push({\n                        '#attributes': { fila: i, compresionDeCeros: 'true' },\n                        '#text': line,\n                    });\n                }\n            }\n        }\n        result.programas = {\n            programa: { '#attributes': { nombre: this.programName } },\n        };\n        result.programas.programa['#attributes'].resultadoEjecucion = this.errorMap(this.runtime.state.error);\n        if (this.dumps[DumpTypes.DUMP_POSITION]) {\n            result.programas.programa.karel = {\n                '#attributes': { x: this.j, y: this.i },\n            };\n        }\n        if (this.dumps[DumpTypes.DUMP_ORIENTATION]) {\n            result.programas.programa.karel = result.programas.programa.karel || {\n                '#attributes': {},\n            };\n            result.programas.programa.karel['#attributes'].direccion = [\n                'OESTE',\n                'NORTE',\n                'ESTE',\n                'SUR',\n            ][this.orientation];\n        }\n        if (this.dumps[DumpTypes.DUMP_BAG]) {\n            result.programas.programa.karel = result.programas.programa.karel || {\n                '#attributes': {},\n            };\n            result.programas.programa.karel['#attributes'].mochila =\n                this.bagBuzzers == -1 ? 'INFINITO' : this.bagBuzzers;\n        }\n        if (this.dumps[DumpTypes.DUMP_MOVE]) {\n            result.programas.programa.instrucciones = result.programas.programa\n                .instrucciones || { '#attributes': {} };\n            result.programas.programa.instrucciones['#attributes'].avanza =\n                this.runtime.state.moveCount;\n        }\n        if (this.dumps[DumpTypes.DUMP_LEFT]) {\n            result.programas.programa.instrucciones = result.programas.programa\n                .instrucciones || { '#attributes': {} };\n            result.programas.programa.instrucciones['#attributes'].gira_izquierda =\n                this.runtime.state.turnLeftCount;\n        }\n        if (this.dumps[DumpTypes.DUMP_PICK_BUZZER]) {\n            result.programas.programa.instrucciones = result.programas.programa\n                .instrucciones || { '#attributes': {} };\n            result.programas.programa.instrucciones['#attributes'].coge_zumbador =\n                this.runtime.state.pickBuzzerCount;\n        }\n        if (this.dumps[DumpTypes.DUMP_LEAVE_BUZZER]) {\n            result.programas.programa.instrucciones = result.programas.programa\n                .instrucciones || { '#attributes': {} };\n            result.programas.programa.instrucciones['#attributes'].deja_zumbador =\n                this.runtime.state.leaveBuzzerCount;\n        }\n        return this.serialize(result, 'resultados', 0);\n    }\n    /**\n     * Moves Karel both at the **start** and **current** state to a cell\n     * @param i row\n     * @param j column\n     */\n    move(i, j) {\n        this.i = this.start_i = i;\n        this.j = this.start_j = j;\n        this.dirty = true;\n    }\n    /**\n     * Rotates Karel both at the **start** and **current**\n     * @param orientation If set, it rotates to the specified rotation, otherwise it rotates to the left.\n     */\n    rotate(orientation) {\n        let orientations = ['OESTE', 'NORTE', 'ESTE', 'SUR'];\n        if (!orientation) {\n            orientation = orientations[(this.orientation + 3) % 4]; // +3 to make the turn to the left\n        }\n        this.orientation = this.startOrientation = Math.max(0, orientations.indexOf(orientation));\n        this.dirty = true;\n    }\n    /**\n     * Sets both the **start** and **current** state buzzer bag\n     * @param buzzers\n     */\n    setBagBuzzers(buzzers) {\n        if (isNaN(buzzers))\n            buzzers = 0;\n        this.bagBuzzers = this.startBagBuzzers = buzzers == 0xffff ? -1 : buzzers;\n        this.dirty = true;\n    }\n    /**\n     * Restores the current state to the start state\n     */\n    reset() {\n        this.orientation = this.startOrientation;\n        this.move(this.start_i, this.start_j);\n        this.bagBuzzers = this.startBagBuzzers;\n        for (let i = 0; i < this.currentMap.length; i++) {\n            this.currentMap[i] = this.map[i];\n        }\n        this.runtime.reset();\n        this.dirty = true;\n    }\n    /**\n     * Converts an error to an string output\n     * @param s error, if not set, it is understood there was no error\n     * @returns The program output\n     */\n    errorMap(s) {\n        if (!s)\n            return 'FIN PROGRAMA';\n        if (ERROR_MAPPING.hasOwnProperty(s)) {\n            return ERROR_MAPPING[s];\n        }\n        else {\n            return s;\n        }\n    }\n}\n\nfunction tabs(indentation) {\n    let result = \"\";\n    for (let i = 0; i < indentation; i++) {\n        result += \"\\t\";\n    }\n    return result;\n}\n\nfunction resolveCall$1(data, transpilerData) {\n    const params = data.params.map((param) => processTerm$1(param, transpilerData)).join(\", \");\n    return `${data.target} (${params})`;\n}\nfunction processAtom$1(atom, data) {\n    const atomType = atom.atomType.split(\".\")[0];\n    const boolFunctions = {\n        \"IFNFWALL\": \"frontIsClear\",\n        \"IFFWALL\": \"frontIsBlocked\",\n        \"IFNLWALL\": \"leftIsClear\",\n        \"IFLWALL\": \"leftIsBlocked\",\n        \"IFNRWALL\": \"rightIsClear\",\n        \"IFRWALL\": \"rightIsBlocked\",\n        \"IFWBUZZER\": \"nextToABeeper\",\n        \"IFNWBUZZER\": \"notNextToABeeper\",\n        \"IFBBUZZER\": \"anyBeepersInBeeperBag\",\n        \"IFNBBUZZER\": \"noBeepersInBeeperBag\",\n        \"IFN\": \"facingNorth\",\n        \"IFS\": \"facingSouth\",\n        \"IFE\": \"facingEast\",\n        \"IFW\": \"facingWest\",\n        \"IFNN\": \"notFacingNorth\",\n        \"IFNS\": \"notFacingSouth\",\n        \"IFNE\": \"notFacingEast\",\n        \"IFNW\": \"notFacingWest\",\n    };\n    if (atomType === \"IMPLICIT\") {\n        // Ignore implicit type\n        return \"\";\n    }\n    if (atomType === \"IS_ZERO\") {\n        const body = processTerm$1(atom.instructions[0][1], data);\n        return `iszero(${body})`;\n    }\n    if (atomType === \"NUMBER\") {\n        const argument = atom.atomType.split(\".\")[1];\n        return argument;\n    }\n    if (atomType === \"INC\") {\n        const term = processTerm$1(atom.instructions[0][1], data);\n        if (atomType === atom.atomType) {\n            return `succ(${term})`;\n        }\n        const literal = atom.atomType.split(\".\")[1];\n        return `succ(${term}, ${literal})`;\n    }\n    if (atomType === \"DEC\") {\n        const term = processTerm$1(atom.instructions[0][1], data);\n        if (atomType === atom.atomType) {\n            return `pred(${term})`;\n        }\n        const literal = atom.atomType.split(\".\")[1];\n        return `pred(${term}, ${literal})`;\n    }\n    if (atomType === \"VAR\") {\n        const variable = atom.atomType.split(\".\")[1];\n        return translateVars$1(variable, data);\n    }\n    if (atomType === \"CALL\") {\n        return resolveCall$1(atom.instructions[0][1], data);\n    }\n    if (atomType in boolFunctions) {\n        return boolFunctions[atomType];\n    }\n    return `/* UNKNOWN ATOM TYPE ${atomType}*/`;\n}\nfunction translateVars$1(word, data) {\n    if (data.hasGlobals) {\n        if (word === \"zumbadores-del-piso\") {\n            return \"beepersOnFloor\";\n        }\n        if (word === \"zumbadores-en-la-mochila\") {\n            return \"beepersInBeeperBag\";\n        }\n        if (word === \"verdadero\") {\n            return \"true\";\n        }\n        if (word === \"falso\") {\n            return \"false\";\n        }\n        if (word === \"fila-actual\") {\n            return \"currentRow\";\n        }\n        if (word === \"columna-actual\") {\n            return \"currentColumn\";\n        }\n    }\n    return word;\n}\nfunction translatePackages$1(packName) {\n    if (packName === \"rekarel.globales\") {\n        return \"rekarel.globals\";\n    }\n    return packName;\n}\nfunction processTerm$1(term, data) {\n    if (term.operation === \"ATOM\") {\n        return processAtom$1(term, data);\n    }\n    if (term.operation === \"PASS\") {\n        return processTerm$1(term.term, data);\n    }\n    if (term.operation === \"PARENTHESIS\") {\n        return `(${processTerm$1(term.term, data)})`;\n    }\n    if (term.operation === \"AND\") {\n        return `${processTerm$1(term.left, data)} && ${processTerm$1(term.right, data)}`;\n    }\n    if (term.operation === \"OR\") {\n        return `${processTerm$1(term.left, data)} || ${processTerm$1(term.right, data)}`;\n    }\n    if (term.operation === \"NOT\") {\n        return `!${processTerm$1(term.term, data)}`;\n    }\n    if (term.operation === \"EQ\") {\n        return `${processTerm$1(term.left, data)} == ${processTerm$1(term.right, data)}`;\n    }\n    if (term.operation === \"LT\") {\n        return `${processTerm$1(term.left, data)} < ${processTerm$1(term.right, data)}`;\n    }\n    if (term.operation === \"LTE\") {\n        return `${processTerm$1(term.left, data)} <= ${processTerm$1(term.right, data)}`;\n    }\n}\nfunction processIf$1(conditional, indentation, data) {\n    let result = [];\n    const condition = processTerm$1(conditional.condition[1], data);\n    result.push(`${tabs(indentation)}if (${condition}) {`);\n    result = result.concat(processInstructions$1(conditional.trueCase, indentation + 1, data));\n    if (conditional.skipFalseTag == null) {\n        result.push(`${tabs(indentation)}}`);\n        return result;\n    }\n    result.push(`${tabs(indentation)}} else {`);\n    result = result.concat(processInstructions$1(conditional.falseCase, indentation + 1, data));\n    result.push(`${tabs(indentation)}}`);\n    return result;\n}\nfunction processRepeat$1(conditional, indentation, data) {\n    let result = [];\n    const iterations = processTerm$1(conditional.loopCount[1], data);\n    result.push(`${tabs(indentation)}iterate (${iterations}) {`);\n    result = result.concat(processInstructions$1(conditional.instructions, indentation + 1, data));\n    result.push(`${tabs(indentation)}}`);\n    return result;\n}\nfunction processWhile$1(conditional, indentation, data) {\n    let result = [];\n    const condition = processTerm$1(conditional.condition[1], data);\n    result.push(`${tabs(indentation)}while (${condition}) {`);\n    result = result.concat(processInstructions$1(conditional.instructions, indentation + 1, data));\n    result.push(`${tabs(indentation)}}`);\n    return result;\n}\nfunction processInstructions$1(instructions, indentation, transpilerData) {\n    let result = [];\n    for (const instruction of instructions) {\n        if (instruction[0] === \"LINE\") {\n            continue;\n        }\n        if (instruction[0] === \"HALT\") {\n            result.push(`${tabs(indentation)}turnoff();`);\n            continue;\n        }\n        if (instruction[0] === \"LEFT\") {\n            result.push(`${tabs(indentation)}turnleft();`);\n            continue;\n        }\n        if (instruction[0] === \"FORWARD\") {\n            result.push(`${tabs(indentation)}move();`);\n            continue;\n        }\n        if (instruction[0] === \"PICKBUZZER\") {\n            result.push(`${tabs(indentation)}pickbeeper();`);\n            continue;\n        }\n        if (instruction[0] === \"LEAVEBUZZER\") {\n            result.push(`${tabs(indentation)}putbeeper();`);\n            continue;\n        }\n        if (instruction[0] === \"CALL\") {\n            const data = instruction[1];\n            result.push(`${tabs(indentation)}${resolveCall$1(data, transpilerData)};`);\n            continue;\n        }\n        if (instruction[0] === \"RET\") {\n            if (instruction[1] === \"__DEFAULT\") {\n                continue;\n            }\n            const data = instruction[1];\n            const term = processTerm$1(data.term, transpilerData);\n            if (term === \"\") {\n                result.push(`${tabs(indentation)}return;`);\n            }\n            else {\n                result.push(`${tabs(indentation)}return ${term};`);\n            }\n            continue;\n        }\n        if (instruction[0] === \"IF\") {\n            result = result.concat(processIf$1(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"REPEAT\") {\n            result = result.concat(processRepeat$1(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"WHILE\") {\n            result = result.concat(processWhile$1(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"CONTINUE\") {\n            result.push(`${tabs(indentation)}continue;`);\n            break;\n        }\n        if (instruction[0] === \"BREAK\") {\n            result.push(`${tabs(indentation)}break;`);\n            break;\n        }\n        result.push(`${tabs(indentation)}/** @PARSER Unknown intruction ${instruction[0]}*/`);\n    }\n    return result;\n}\nfunction processFunction$1(func, transpilerData) {\n    let body = processInstructions$1(func.code, 2, transpilerData).join(\"\\n\");\n    let func_type = \"define\";\n    if (func.returnType === \"INT\") {\n        func_type = \"int\";\n    }\n    else if (func.returnType === \"BOOL\") {\n        func_type = \"bool\";\n    }\n    let params = func.params.map((param) => param.name).join(\", \");\n    return `\\t${func_type} ${func.name} (${params}) {\r\n${body}\r\n\\t}\r\n`;\n}\n/**\n * Generates Java source code from an Abstract Syntax Tree (IRObject), such as the one generated by JISON\n *\n * **Notice:** This code generator does not check grammar rules, so if it gets invalid AST code,\n *  it'll generate invalid Java Code without throwing. (For example, it does not check if variables are defined)\n * @param data the AST (IRObject)\n * @returns The source code\n */\nfunction generateJavaFromIR(data) {\n    let transpilerData = {\n        hasGlobals: data.packages.findIndex((val) => translatePackages$1(val[0]) === \"rekarel.globals\") !== -1\n    };\n    let functions = data.functions\n        .filter((func) => //Remove deprecated prototypes\n     func.code != null)\n        .map((func) => processFunction$1(func, transpilerData)).join(\"\\n\");\n    // remove extra turnoff\n    const program = data.program.slice(0, -1);\n    let mainBody = processInstructions$1(program, 2, transpilerData).join(\"\\n\");\n    let packageData = data.packages.map((packImport) => `import ${translatePackages$1(packImport[0])};\\n`).join();\n    return `${packageData}class program {\r\n${functions}\r\n\\tprogram() {\r\n${mainBody}\r\n\\t}   \r\n\\n}`;\n}\n\nfunction resolveCall(data, transpilerData) {\n    if (data.params.length > 0) {\n        const params = data.params.map((param) => processTerm(param, transpilerData)).join(\", \");\n        return `${data.target}(${params})`;\n    }\n    return `${data.target}`;\n}\nfunction processAtom(atom, data) {\n    const atomType = atom.atomType.split(\".\")[0];\n    const boolFunctions = {\n        \"IFNFWALL\": \"frente-libre\",\n        \"IFFWALL\": \"frente-bloqueado\",\n        \"IFNLWALL\": \"izquierda-libre\",\n        \"IFLWALL\": \"izquierda-bloqueada\",\n        \"IFNRWALL\": \"derecha-libre\",\n        \"IFRWALL\": \"derecha-bloqueada\",\n        \"IFWBUZZER\": \"junto-a-zumbador\",\n        \"IFNWBUZZER\": \"no-junto-a-zumbador\",\n        \"IFBBUZZER\": \"algun-zumbador-en-la-mochila\",\n        \"IFNBBUZZER\": \"ningun-zumbador-en-la-mochila\",\n        \"IFN\": \"orientado-al-norte\",\n        \"IFS\": \"orientado-al-sur\",\n        \"IFE\": \"orientado-al-este\",\n        \"IFW\": \"orientado-al-oeste\",\n        \"IFNN\": \"no-orientado-al-norte\",\n        \"IFNS\": \"no-orientado-al-sur\",\n        \"IFNE\": \"no-orientado-al-este\",\n        \"IFNW\": \"no-orientado-al-oeste\",\n    };\n    if (atomType === \"IMPLICIT\") {\n        // Ignore implicit type\n        return \"\";\n    }\n    if (atomType === \"IS_ZERO\") {\n        const body = processTerm(atom.instructions[0][1], data);\n        return `es-cero(${body})`;\n    }\n    if (atomType === \"NUMBER\") {\n        const argument = atom.atomType.split(\".\")[1];\n        return argument;\n    }\n    if (atomType === \"INC\") {\n        const term = processTerm(atom.instructions[0][1], data);\n        if (atomType === atom.atomType) {\n            return `sucede(${term})`;\n        }\n        const literal = atom.atomType.split(\".\")[1];\n        return `sucede(${term}, ${literal})`;\n    }\n    if (atomType === \"DEC\") {\n        const term = processTerm(atom.instructions[0][1], data);\n        if (atomType === atom.atomType) {\n            return `precede(${term})`;\n        }\n        const literal = atom.atomType.split(\".\")[1];\n        return `precede(${term}, ${literal})`;\n    }\n    if (atomType === \"VAR\") {\n        const variable = atom.atomType.split(\".\")[1];\n        return translateVars(variable, data);\n    }\n    if (atomType === \"CALL\") {\n        return resolveCall(atom.instructions[0][1], data);\n    }\n    if (atomType in boolFunctions) {\n        return boolFunctions[atomType];\n    }\n    return `/* UNKNOWN ATOM TYPE ${atomType}*/`;\n}\nfunction translateVars(word, data) {\n    if (data.hasGlobals) {\n        if (word === \"beepersOnFloor\") {\n            return \"zumbadores-del-piso\";\n        }\n        if (word === \"beepersInBeeperBag\") {\n            return \"zumbadores-en-la-mochila\";\n        }\n        if (word === \"true\") {\n            return \"verdadero\";\n        }\n        if (word === \"false\") {\n            return \"falso\";\n        }\n        if (word === \"currentRow\") {\n            return \"fila-actual\";\n        }\n        if (word === \"currentColumn\") {\n            return \"columna-actual\";\n        }\n    }\n    return word;\n}\nfunction translatePackages(packName) {\n    if (packName === \"rekarel.globals\") {\n        return \"rekarel.globales\";\n    }\n    return packName;\n}\nfunction processTerm(term, data) {\n    if (term.operation === \"ATOM\") {\n        return processAtom(term, data);\n    }\n    if (term.operation === \"PASS\") {\n        return processTerm(term.term, data);\n    }\n    if (term.operation === \"PARENTHESIS\") {\n        return `(${processTerm(term.term, data)})`;\n    }\n    if (term.operation === \"AND\") {\n        return `${processTerm(term.left, data)} y ${processTerm(term.right, data)}`;\n    }\n    if (term.operation === \"OR\") {\n        return `${processTerm(term.left, data)} o ${processTerm(term.right, data)}`;\n    }\n    if (term.operation === \"NOT\") {\n        return `no ${processTerm(term.term, data)}`;\n    }\n    if (term.operation === \"EQ\") {\n        return `${processTerm(term.left, data)} == ${processTerm(term.right, data)}`;\n    }\n    if (term.operation === \"LT\") {\n        return `${processTerm(term.left, data)} < ${processTerm(term.right, data)}`;\n    }\n    if (term.operation === \"LTE\") {\n        return `${processTerm(term.left, data)} <= ${processTerm(term.right, data)}`;\n    }\n}\nfunction processIf(conditional, indentation, data) {\n    let result = [];\n    const condition = processTerm(conditional.condition[1], data);\n    result.push(`${tabs(indentation)}si ${condition} entonces`);\n    result.push(`${tabs(indentation)}inicio`);\n    result = result.concat(processInstructions(conditional.trueCase, indentation + 1, data));\n    if (conditional.skipFalseTag == null) {\n        result.push(`${tabs(indentation)}fin;`);\n        return result;\n    }\n    result.push(`${tabs(indentation)}fin`);\n    result.push(`${tabs(indentation)}sino`);\n    result.push(`${tabs(indentation)}inicio`);\n    result = result.concat(processInstructions(conditional.falseCase, indentation + 1, data));\n    result.push(`${tabs(indentation)}fin;`);\n    return result;\n}\nfunction processRepeat(conditional, indentation, data) {\n    let result = [];\n    const iterations = processTerm(conditional.loopCount[1], data);\n    result.push(`${tabs(indentation)}repetir ${iterations} veces`);\n    result.push(`${tabs(indentation)}inicio`);\n    result = result.concat(processInstructions(conditional.instructions, indentation + 1, data));\n    result.push(`${tabs(indentation)}fin;`);\n    return result;\n}\nfunction processWhile(conditional, indentation, data) {\n    let result = [];\n    const condition = processTerm(conditional.condition[1], data);\n    result.push(`${tabs(indentation)}mientras ${condition} hacer`);\n    result.push(`${tabs(indentation)}inicio`);\n    result = result.concat(processInstructions(conditional.instructions, indentation + 1, data));\n    result.push(`${tabs(indentation)}fin;`);\n    return result;\n}\nfunction processInstructions(instructions, indentation, transpilerData) {\n    let result = [];\n    for (const instruction of instructions) {\n        if (instruction[0] === \"LINE\") {\n            continue;\n        }\n        if (instruction[0] === \"HALT\") {\n            result.push(`${tabs(indentation)}apagate;`);\n            continue;\n        }\n        if (instruction[0] === \"LEFT\") {\n            result.push(`${tabs(indentation)}gira-izquierda;`);\n            continue;\n        }\n        if (instruction[0] === \"FORWARD\") {\n            result.push(`${tabs(indentation)}avanza;`);\n            continue;\n        }\n        if (instruction[0] === \"PICKBUZZER\") {\n            result.push(`${tabs(indentation)}coge-zumbador;`);\n            continue;\n        }\n        if (instruction[0] === \"LEAVEBUZZER\") {\n            result.push(`${tabs(indentation)}deja-zumbador;`);\n            continue;\n        }\n        if (instruction[0] === \"CALL\") {\n            const data = instruction[1];\n            result.push(`${tabs(indentation)}${resolveCall(data, transpilerData)};`);\n            continue;\n        }\n        if (instruction[0] === \"RET\") {\n            if (instruction[1] === \"__DEFAULT\") {\n                continue;\n            }\n            const data = instruction[1];\n            const term = processTerm(data.term, transpilerData);\n            if (term === \"\") {\n                result.push(`${tabs(indentation)}regresa;`);\n            }\n            else {\n                result.push(`${tabs(indentation)}regresa ${term};`);\n            }\n            continue;\n        }\n        if (instruction[0] === \"IF\") {\n            result = result.concat(processIf(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"REPEAT\") {\n            result = result.concat(processRepeat(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"WHILE\") {\n            result = result.concat(processWhile(instruction[1], indentation, transpilerData));\n            continue;\n        }\n        if (instruction[0] === \"CONTINUE\") {\n            result.push(`${tabs(indentation)}continua;`);\n            break;\n        }\n        if (instruction[0] === \"BREAK\") {\n            result.push(`${tabs(indentation)}rompe;`);\n            break;\n        }\n        result.push(`${tabs(indentation)}/** @PARSER Instruccion desconocida ${instruction[0]}*/`);\n    }\n    return result;\n}\nfunction processFunction(func, transpilerData) {\n    let body = processInstructions(func.code, 2, transpilerData).join(\"\\n\");\n    let func_type = \"define\";\n    if (func.returnType === \"INT\") {\n        func_type = \"define-calculo\";\n    }\n    else if (func.returnType === \"BOOL\") {\n        func_type = \"define-condicion\";\n    }\n    let head = `${func_type} ${func.name}`;\n    if (func.params.length > 0) {\n        let params = func.params.map((param) => param.name).join(\", \");\n        head += ` (${params})`;\n    }\n    return `\\t${head} como\r\n\\tinicio\r\n${body}\r\n\\tfin;\r\n`;\n}\n/**\n * Generates Pascal source code from an Abstract Syntax Tree (IRObject), such as the one generated by JISON\n *\n * **Notice:** This code generator does not check grammar rules, so if it gets invalid AST code,\n *  it'll generate invalid Pascal Code without throwing. (For example, it does not check if variables are defined)\n * @param data the AST (IRObject)\n * @returns The source code\n */\nfunction generatePascalFromIR(data) {\n    let transpilerData = {\n        hasGlobals: data.packages.findIndex((val) => translatePackages(val[0]) === \"rekarel.globales\") !== -1\n    };\n    let functions = data.functions\n        .filter((func) => //Remove deprecated prototypes\n     func.code != null)\n        .map((func) => processFunction(func, transpilerData)).join(\"\\n\");\n    // remove extra turnoff\n    const program = data.program.slice(0, -1);\n    let mainBody = processInstructions(program, 2, transpilerData).join(\"\\n\");\n    let packageData = data.packages.map((packImport) => `usa ${translatePackages(packImport[0])};\\n`).join();\n    return `${packageData}iniciar-programa\r\n${functions}\r\n\\tinicia-ejecucion\r\n${mainBody}\r\n\\ttermina-ejecucion   \r\nfinalizar-programa`;\n}\n\n/**\n * Takes a source code and transpiles it to a target language\n * @param source Original source code\n * @param target Target source code\n * @returns\n */\nfunction transpileCode(source, target) {\n    let lang = detectLanguage(source);\n    let parser = null;\n    switch (lang) {\n        case 'java':\n            parser = javaParser;\n            break;\n        case 'pascal':\n            parser = pascalParser$1;\n            break;\n        default:\n            let errorStatus = {\n                error: CompilationError.Errors.UNKNOWN_SYNTAX,\n                line: 0,\n                loc: {\n                    first_column: 0, first_line: 1, last_column: 0, last_line: 1\n                }\n            };\n            let error = new Error(\"Unknown syntax, the start of the file must be either 'class' or 'iniciar-programa'\");\n            // @ts-ignore Adding extra error data\n            error.hash = errorStatus;\n            throw error;\n    }\n    const result = parser(source);\n    if (target === \"java\") {\n        return generateJavaFromIR(result);\n    }\n    if (target === \"pascal\") {\n        return generatePascalFromIR(result);\n    }\n    return \"000\";\n}\n\nexport { CompilationError, DebugData, DumpTypes, Runtime, World, compile, detectLanguage, generateJavaFromIR, generateOpcodesFromIR, generatePascalFromIR, javaCompiler, pascalCompiler, transpileCode };\n","import { compile, World } from \"@rekarel/core\";\nimport { selectedDirectoryHandle } from \"./directoty\";\nfunction removeWhitespaces(str) {\n    return str.replace(/\\s+/g, ''); // Regex to remove all whitespace characters\n}\nexport async function evaluateFiles() {\n    if (!selectedDirectoryHandle) {\n        alert('Please select a directory first.');\n        return;\n    }\n    const sourceText = document.getElementById('source').value;\n    let program = null;\n    try {\n        program = compile(sourceText, false)[0];\n    }\n    catch (e) {\n        alert(\"Compilation error\");\n        return;\n    }\n    const result = document.getElementById(\"result\");\n    result.innerHTML = \"\";\n    try {\n        // Function to recursively iterate through the directory\n        async function iterateDirectory(directoryHandle) {\n            for await (const entry of directoryHandle.values()) {\n                if (entry.kind === 'file' && entry.name.endsWith('.in')) {\n                    const baseName = entry.name.slice(0, -3);\n                    // Find the corresponding .out file\n                    const outFileName = `${baseName}.out`;\n                    const outFileHandle = await directoryHandle.getFileHandle(outFileName, { create: false }).catch(() => null);\n                    if (!outFileHandle) {\n                        result.innerHTML += `<p><b>${entry.name}<b/>: No hay .out</p>`;\n                        continue;\n                    }\n                    const outFile = await outFileHandle.getFile();\n                    const outFileContent = await outFile.text();\n                    // Perform your action on the .in file here\n                    const file = await entry.getFile();\n                    const content = await file.text();\n                    const xml = new DOMParser().parseFromString(content, 'text/xml');\n                    const world = new World(1, 1);\n                    world.load(xml);\n                    const runtime = world.runtime;\n                    runtime.load(program);\n                    runtime.start();\n                    while (runtime.step()) {\n                        //Eval code\n                    }\n                    if (runtime.state.error != null) {\n                        result.innerHTML += `<p><b>${entry.name}<b/>: Error de ejecución ${runtime.state.error}</p>`;\n                        continue;\n                    }\n                    const finalState = world.output();\n                    const simple_output = removeWhitespaces(outFileContent);\n                    const simple_final = removeWhitespaces(finalState);\n                    if (simple_final === simple_output)\n                        result.innerHTML += `<p><b>${entry.name}<b/>: Success</p>`;\n                    else\n                        result.innerHTML += `<p><b>${entry.name}<b/>: Respuesta incorrecta</p>`;\n                    // You can add your custom action here\n                    // Example action: console.log file name and content\n                }\n                else if (entry.kind === 'directory') {\n                    // Recursively search within subdirectories\n                    await iterateDirectory(entry);\n                }\n            }\n        }\n        // Start iterating through the directory\n        await iterateDirectory(selectedDirectoryHandle);\n    }\n    catch (error) {\n        console.error('Error iterating through files:', error);\n    }\n}\n//# sourceMappingURL=evaluation.js.map","import { selectedDirectoryHandle, handleDirectorySelection } from \"./directoty\";\nimport { evaluateFiles } from \"./evaluation\";\ndocument.getElementById(\"path-btn\").addEventListener(\"click\", () => {\n    handleDirectorySelection();\n});\ndocument.getElementById(\"eval-btn\").addEventListener(\"click\", () => {\n    if (selectedDirectoryHandle == null) {\n        alert(\"Fist select a file\");\n        return;\n    }\n    evaluateFiles().finally(() => {\n        document.getElementById(\"result\").innerHTML += \"<p><b>Termino</b></p>\";\n    });\n});\n//# sourceMappingURL=index.js.map"],"names":["selectedDirectoryHandle","kareljava","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","parser","trace","yy","symbols_","error","program","CLASS","PROG","BEGIN","def_list","block","END","EOF","import_list","expr_list","import","IMPORT","package","VAR","def","funct_type","var","paramList","param","DEF","INT","BOOL","expr","FORWARD","LEFT","PICKBUZZER","LEAVEBUZZER","HALT","CONTINUE","BREAK","return","call","cond","loop","repeat","RET","term","int_termList","IF","bool_term","ELSE","WHILE","REPEAT","int_term","OR","AND","NOT","clause","IFZ","bool_fun","integer","IFNFWALL","IFFWALL","IFNLWALL","IFLWALL","IFNRWALL","IFRWALL","IFWBUZZER","IFNWBUZZER","IFBBUZZER","IFNBBUZZER","IFW","IFN","IFE","IFS","IFNW","IFNN","IFNE","IFNS","int_literal","INC","DEC","NUM","$accept","$end","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","resetCompiler","compiler","COMPILER","language","LANG","variablesCanBeFunctions","VarsAsFuncs","requieresFunctionPrototypes","reqsPrototypes","packages","functions","concat","this","$","first_line","first_column","last_line","last_column","name","code","locToIR","params","loc","returnType","result","operation","instructions","dataType","atomType","target","nameLoc","argLoc","totalLoc","skipTag","UniqueTag","condition","line","skipTrueTag","trueCase","toElse","skipElse","skipFalseTag","falseCase","repeatTag","endTag","repeatEnd","repeatLoop","continueLoop","loopCount","continueTag","mergeLocs","left","right","data","callIR","callData","ir","couldBeFunction","parseInt","table","defaultActions","parseError","str","hash","recoverable","Error","parse","input","self","stack","vstack","lstack","args","slice","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","symbol","state","action","r","p","len","newState","expected","token","yyval","lex","errStr","showPosition","join","text","match","Array","range","apply","tagCnt","tag","first","second","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","INITIAL","inclusive","Parser","karelpascal","$VV","$VW","$VX","$VY","BEGINPROG","BEGINEXEC","ENDEXEC","ENDPROG","prototype_type","AS","DEF_INT","DEF_BOOL","PROTO_INT","PROTO_BOOL","PROTO","genexpr","parameteredCall","THEN","DO","TIMES","toLowerCase","console","log","UnitePackages","booleans","Map","numbers","pack","numberVariables","forEach","value","key","_","set","booleanVariables","javaNumbers","javaBooleans","rekarelGlobalsJava","pascalNumbers","pascalBooleans","rekarelGlobalsPascal","JavaPackages","PascalPackages","DefinitionTable","constructor","variables","tagCounter","getType","identifier","has","get","registerFunction","func","location","hasFunction","getFunction","setFunctionLoc","registerVar","val","hasVar","getVar","getUniqueTag","CompilationError","resolveTerm","tree","definitions","scope","tags","resolveListWithASTs","startsWith","termType","substring","parameters","some","e","leftType","shortCircuit","rightType","Errors","BINARY_OPERATOR_TYPE_ERROR","operator","expectedType","actualType","direction","COMPARISON_TYPE","VOID_COMPARISON","UNARY_OPERATOR_TYPE_ERROR","TYPE_ERROR","resolveVar","parameterIdx","findIndex","IRs","instruction","resolveCall$2","UNKNOWN_VARIABLE","variable","parameter","UNDEFINED_FUNCTION","functionName","resolveReturn","retType","expectedReturn","RETURN_TYPE","resolveRepeat","loopScope","withContinueBreakTarget","resolveWhile","whileScope","resolveConditional","trueReturns","falseReturns","explicitReturn","IRInstructions","info","breakTarget","ILLEGAL_BREAK","continueTarget","ILLEGAL_CONTINUE","Scope","withContinueTarget","withBreakTarget","MAIN_SCOPE","DebugData","resolveComplexIR","NO_EXPLICIT_RETURN","map","idx","generateOpcodesFromIR","exportDebug","debugData","compPackages","packageName","moduleName","UNKNOWN_PACKAGE","module","full","UNKNOWN_MODULE","packObject","varName","varVal","loadPackages","definitionTable","prototypes","PARAMETER_ILLEGAL_NAME","parameterName","FUNCTION_ILLEGAL_NAME","PROTOTYPE_REDEFINITION","prototypeName","argCount","defined","proto","FUNCTION_REDEFINITION","PROTOTYPE_PARAMETERS_MISS_MATCH","functionParamCount","prototypeParamCount","PROTOTYPE_TYPE_MISS_MATCH","functionType","prototypeType","PARAMETER_REDEFINITION","validateAndGetFunctionDefinitions","IRProgram","functionScope","iData","targetFunc","extraParam","TOO_MANY_PARAMS_IN_CALL","expectedParams","actualParams","TOO_FEW_PARAMS_IN_CALL","funcName","CALL_TYPE","expectedCallType","javaParser","pascalParser","javaCompiler","pascalCompiler","KarelRuntimeEvent","Event","type","runtime","details","super","KarelRuntimeEventTarget","listeners","addEventListener","callback","dispatchEvent","event","listener","removeEventListener","indexOf","splice","fireEvent","evt","OpCodeID","ErrorType","DumpTypes","ERROR_MAPPING","Runtime","world","debug","disableStackEvents","eventController","load","opcodes","error_mapping","rawOpcodes","function_map","functionNames","function_idx","Int32Array","ArrayBuffer","currentOpcode","literal","reset","start","pc","sp","fp","column","ic","ret","stackSize","stackMemory","moveCount","turnLeftCount","pickBuzzerCount","leaveBuzzerCount","jumped","running","message","JSON","stringify","debugType","step","LINE","rot","maxInstructions","INSTRUCTION","maxStackSize","STACK","paramCount","newSP","op1","op2","fname","fromFName","npc","di","dj","orientation","dirty","maxTurnLeft","errorData","WORLDWALLS","walls","j","ORIENTATION","ROTL","ROTR","MASK","EQ","EZ","WALL","WORLDUNDERFLOW","BAGUNDERFLOW","JZ","JMP","maxMove","WORLDBUZZERS","buzzers","BAGBUZZERS","bagBuzzers","pickBuzzer","maxPickBuzzer","leaveBuzzer","maxLeaveBuzzer","LOAD","POP","DUP","CALL","max","maxStackMemory","STACKMEMORY","maxCallSize","CALLSIZE","function","subarray","fromFunction","returnValue","PARAM","SRET","LRET","LT","LTE","ROW","COLUMN","INVALIDOPCODE","copy","expressionStack","from","World","w","h","setWallMask","wallMask","newMask","wallMap","init","createMaps","clear","currentMap","Uint8Array","resize","oldW","oldH","oldMap","oldWallMap","oldDumpCells","dumpCells","addBorderWalls","setCellWalls","setBuzzers","dumpPos","setDumpCell","start_i","start_j","startOrientation","startBagBuzzers","dumps","worldName","programName","toggleWall","addWall","pos","count","startBuzzers","dumpState","DUMP_WORLD","toggleDumpCell","getDumpCell","getDumps","dumpFlag","setDumps","flagValue","toggleDumps","doc","mundo","alto","getAttribute","ancho","condiciones","comando","monton","zumbadores","isNaN","pared","j2","i2","despliega","posicionDump","dump","programa","xKarel","yKarel","rotate","move","setBagBuzzers","traverse","node","nodeName","childNodes","item","nodeType","ELEMENT_NODE","Node","serialize","indentation","isArray","childResult","save","targetState","instruccionesMaximasAEjecutar","longitudStack","memoriaStack","llamadaMaxima","mundos","nombre","programas","tipoEjecucion","intruccionesCambioContexto","milisegundosParaPasoAutomatico","ruta","mundoDeEjecucion","direccionKarel","mochilaKarel","x","y","maximoNumeroDeEjecuciones","x1","y1","x2","y2","tipo","toUpperCase","output","DUMP_ALL_BUZZERS","linea","printCoordinate","fila","compresionDeCeros","resultadoEjecucion","errorMap","DUMP_POSITION","karel","DUMP_ORIENTATION","direccion","DUMP_BAG","mochila","DUMP_MOVE","instrucciones","avanza","DUMP_LEFT","gira_izquierda","DUMP_PICK_BUZZER","coge_zumbador","DUMP_LEAVE_BUZZER","deja_zumbador","orientations","s","removeWhitespaces","async","evaluateFiles","alert","sourceText","document","getElementById","lang","m","exec","detectLanguage","errorStatus","UNKNOWN_SYNTAX","compile","innerHTML","iterateDirectory","directoryHandle","entry","values","kind","endsWith","outFileName","outFileHandle","getFileHandle","catch","outFile","getFile","outFileContent","file","content","xml","DOMParser","parseFromString","finalState","simple_output","simple_final","window","showDirectoryPicker","textContent","handleDirectorySelection","finally"],"mappings":"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,GAAG,GAAGC,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,GAAGvC,IAAI,GAAG,GAAG,GAAGgB,IAAI,GAAG,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,GAAGvC,IAAI,GAAG,GAAG,GAAGgB,IAAI,GAAG,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,KAAK,CAAC,GAAGvC,IAAI,GAAG,GAAG,GAAGgB,IAAI,GAAG,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAG,GAAG,GAAGC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAA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","x_google_ignoreList":[1]}